{
  "active": false,
  "connections": {
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "dados_IA",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Doc Rows": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Delete Old Doc Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Document Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "dados_IA",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis3": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Redis3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Vari√°veis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "Atendente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Segmentos1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1,2s1": {
      "main": [
        [
          {
            "node": "Evolution API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "1,2s1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser1": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Segmentos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ElevenLabsGenerateVoice": {
      "main": [
        [
          {
            "node": "Audio-Base64-Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "ElevenLabsGenerateVoice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Atendente",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert into Supabase Vectorstore": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Atendente",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "SessionID",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar sessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar sessionID": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "SessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SessionID": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vari√°veis": {
      "main": [
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Atendente": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados_IA": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Marcar Eventos": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Evento participante": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Eventos": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "reagendar": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Deletar evento": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Audio-Base64-Extract from File": {
      "main": [
        [
          {
            "node": "Evolution API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-07T13:56:04.582Z",
  "id": "ZZfF4IIx1JYWiyQo",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Flow-atendimento Farmacia",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "a0aafe73-a7e2-4cb0-bb43-5514935d7a5b",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        5140,
        2560
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').first().json.file_id }}"
              }
            ]
          }
        }
      },
      "id": "dc3c26e0-3715-482a-81b2-7bbad05ba6e0",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        3320,
        3160
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "ed3b46d1-8cea-4092-8e80-024614f14e94",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        3180,
        3200
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Busca Info no RAG",
        "height": 80,
        "width": 350,
        "color": 5
      },
      "id": "54bfffae-73d9-4bf4-b1d1-5af764554a1e",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4840,
        2800
      ]
    },
    {
      "parameters": {
        "content": "# Ferramenta para Adicionar um Arquivo do Google Drive ao Banco de Dados Vetorial.",
        "height": 80,
        "width": 1493,
        "color": 5
      },
      "id": "7e735aca-54f5-4037-ba46-f9f41506d3eb",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1840,
        2660
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "c33a83e7-d51e-416f-bd1d-ab1924f22fd6",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        2280,
        2940
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "AMnU78157s5pFXnN",
          "name": "Google AiAgent"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 1,
              "unit": "minutes"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "11aua3k1sbTng7TJPvBnp0TRhAhWg5n83",
          "mode": "list",
          "cachedResultName": "Farmacia",
          "cachedResultUrl": "https://drive.google.com/drive/folders/11aua3k1sbTng7TJPvBnp0TRhAhWg5n83"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "7d6e97ea-6215-45d4-ad7b-1b0c9384f29f",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        1380,
        2880
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "AMnU78157s5pFXnN",
          "name": "Google AiAgent"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "11aua3k1sbTng7TJPvBnp0TRhAhWg5n83",
          "mode": "list",
          "cachedResultName": "Farmacia",
          "cachedResultUrl": "https://drive.google.com/drive/folders/11aua3k1sbTng7TJPvBnp0TRhAhWg5n83"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "dd9c3330-d4f4-4e76-bf12-1cef44a9f76c",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        1380,
        3060
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "AMnU78157s5pFXnN",
          "name": "Google AiAgent"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "099f7242-da41-4b96-9272-bc10bd858090",
      "name": "Extract Document Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2860,
        3120
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "cbd94f76-67be-4209-85d8-e97136422cd1",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        4920,
        2700
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documentos",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "id": "cf0de9b8-f5af-4c0d-bce8-f5ff09da0105",
      "name": "Delete Old Doc Rows",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1740,
        2920
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "M658CwP1x5QAYDSu",
          "name": "Supabase teste"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "c774ed34-0d67-44b7-a537-83810f357b7c",
              "name": "originalFilename",
              "value": "={{ $json.originalFilename }}",
              "type": "string"
            },
            {
              "id": "dff39c85-b4a2-45ba-a5ff-f4b311999efc",
              "name": "sha1Checksum",
              "value": "={{ $json.sha1Checksum }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "46407cce-a824-4449-af84-aaf396fe3db3",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1580,
        2920
      ]
    },
    {
      "parameters": {
        "content": "# Atendente IA",
        "height": 80,
        "width": 276,
        "color": 5
      },
      "id": "78c9d77c-56d3-4677-9de8-4173a403d043",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4160,
        2020
      ]
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "ff32f2de-0188-4650-8677-064704d2e9a2",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2860,
        2760
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "e68ceedb-908c-49d2-ab98-ecac88cd0af9",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        3020,
        2940
      ]
    },
    {
      "parameters": {},
      "id": "23c34653-1f67-4e23-9f5d-e1968a8be3ac",
      "name": "Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        3380,
        3320
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "f982db42-e67d-4aaf-9217-592e4bca7093",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        3160,
        2940
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 2
        }
      },
      "id": "282d80dd-ed4e-4655-96be-039de14a356e",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        2460,
        2940
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documentos",
          "mode": "list",
          "cachedResultName": "documentos"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "301443b6-e727-480f-849a-c9fd9bddae27",
      "name": "Insert into Supabase Vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        3280,
        2940
      ],
      "credentials": {
        "supabaseApi": {
          "id": "M658CwP1x5QAYDSu",
          "name": "Supabase teste"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documentos",
          "mode": "list",
          "cachedResultName": "documentos"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "3858aa7f-c990-4771-aba7-cda88237ac32",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        4840,
        2560
      ],
      "credentials": {
        "supabaseApi": {
          "id": "M658CwP1x5QAYDSu",
          "name": "Supabase teste"
        }
      }
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "fbf9bf01-60be-409f-aaee-0fc0e8505faa",
      "name": "Extract from Excel",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2860,
        2940
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 660,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4140,
        2000
      ],
      "typeVersion": 1,
      "id": "a84d3dcd-1146-4c76-aebb-ad174b44f4c0",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "",
        "height": 520,
        "width": 460,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4820,
        2380
      ],
      "typeVersion": 1,
      "id": "51fa7f2a-41d9-47a5-9e73-1ca40db94618",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "",
        "height": 800,
        "width": 2300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1300,
        2640
      ],
      "typeVersion": 1,
      "id": "d94fab74-453e-4944-8fbe-a688673af5ba",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Arquivos criados em uma pasta espec√≠fica > Verificar o tipo de arquivo e realizar convers√£o > Extrair o texto > Adicionar ao Vector Store",
        "height": 80,
        "width": 1600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1320,
        3340
      ],
      "typeVersion": 1,
      "id": "cf7fc938-6a7d-45c6-99b7-011b4c37725f",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Gatilho de Monitoramento",
        "height": 440,
        "width": 213,
        "color": 5
      },
      "id": "0aa70770-d0e5-4a22-8ae5-84313e72b317",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1340,
        2780
      ]
    },
    {
      "parameters": {
        "content": "# Agendamento",
        "height": 80,
        "width": 283,
        "color": 5
      },
      "id": "fbabbbf5-f8b4-4bcb-99bf-fdbe09d358cf",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3640,
        2800
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 260,
        "width": 1100,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3620,
        2640
      ],
      "typeVersion": 1,
      "id": "ecb3ecab-7be3-41c2-8b06-5922e1b9ae8a",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "amount": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"Tempo de resposta picada\"] }}"
      },
      "id": "a664ebc7-3a0c-4cac-a2b1-8392b98706c6",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3200,
        2260
      ],
      "webhookId": "d5881f9b-29e7-4d3f-ba5e-bcb042d2719e"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "options": {}
      },
      "id": "70ad0dda-a486-4358-a479-ffefaa274c04",
      "name": "Redis1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3360,
        2300
      ],
      "credentials": {
        "redis": {
          "id": "Q9fFQv1hEnIedFTx",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "21fd20d7-f940-4a66-91d5-5ea4c031bb50",
              "leftValue": "={{ $json.propertyName.last() }}",
              "rightValue": "={{ $('Vari√°veis').item.json.mensagem }}",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "34a75ecd-ef68-4bdd-91e5-0dd7ccf00a34",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3580,
        2260
      ]
    },
    {
      "parameters": {},
      "id": "13443673-8bc6-4162-9325-b5bc61223d2e",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3780,
        2340
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "37f63b88-4a52-4421-aa95-db9114e521bc",
              "name": "listaMensagens",
              "value": "={{ $json.propertyName[0] }}",
              "type": "string"
            },
            {
              "id": "08b2e8c0-bc00-43ef-80bd-7a86bda2ee47",
              "name": "sessionId",
              "value": "={{ $item(\"0\").$node[\"SessionID\"].json[\"sessionid\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5a8df7f3-b3ca-4382-8f5b-ba0ba448af73",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3740,
        2160
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
      },
      "id": "e8b2e8e2-5422-4730-b778-7903695725e9",
      "name": "Redis2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4020,
        2160
      ],
      "credentials": {
        "redis": {
          "id": "Q9fFQv1hEnIedFTx",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.ogg",
          "mimeType": "application/ogg"
        }
      },
      "id": "2f46f708-40f1-46df-a895-228ef62871da",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        2040,
        2280
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "63f0f1cb-59e1-4cf6-b06f-fa862df31942",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1900,
        2280
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.png",
          "mimeType": "image/png"
        }
      },
      "id": "7e7b6189-da2f-4017-ac32-bab429354c78",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        2080,
        2440
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3c6190b6-1572-4577-9949-7b6e210631e4",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1900,
        2440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ade56c50-1520-4760-8df5-e99617d6d3ad",
              "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6159346a-5f64-4aea-a0a9-4dbb133abbd1",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2520,
        2440
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageData": "={{ $item(\"0\").$node[\"OpenAI\"].json[\"text\"] }}",
        "tail": true
      },
      "id": "11f59b65-5c28-4a8f-863c-4d45163c4285",
      "name": "Redis3",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2580,
        2280
      ],
      "credentials": {
        "redis": {
          "id": "Q9fFQv1hEnIedFTx",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageData": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}, {{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "9ef9423f-8c60-4f10-afe0-9bab5e91ceff",
      "name": "Redis4",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2800,
        2460
      ],
      "credentials": {
        "redis": {
          "id": "Q9fFQv1hEnIedFTx",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageData": "={{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "afac53a6-03f9-4549-97cc-ffed3ed6445c",
      "name": "Redis5",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2980,
        2420
      ],
      "credentials": {
        "redis": {
          "id": "Q9fFQv1hEnIedFTx",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "50cebc66-2dbc-4c7a-a09e-83ffb0f52991",
              "name": "mensagem",
              "value": "={{ $('Vari√°veis').item.json.mensagem }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "9b8fff25-4434-4c11-b928-b58b99b88073",
      "name": "Edit Fields4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1900,
        2120
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "aca13950-44a0-47b0-8545-cc6a1c75c133",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        2200,
        2280
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Descreva todo o conteudo da imagem. Responda sem acento, sem hifens",
        "inputType": "base64",
        "options": {}
      },
      "id": "c92ebf7f-2a9d-40c1-823a-3f32cf2a9554",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        2300,
        2440
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "farmacia",
        "options": {}
      },
      "id": "0e2ce56c-8653-44ca-bbc8-6cef0c22d51b",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        260,
        2240
      ],
      "webhookId": "1a540e9f-6210-4099-a6a0-8e21f53abba8"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c0e434dd-1268-421d-b81b-3a5e90ed9550",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "59e4c594-7dcf-4696-931f-6232cab08709",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1660,
        2260
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "65393f50-c36e-411a-8dcb-59d2f6504c53",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4880,
        1920
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "f6011ac7-ade5-4585-9d51-2f21f9955487",
      "name": "Segmentos1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        5140,
        1680
      ]
    },
    {
      "parameters": {
        "amount": 2.1
      },
      "id": "d23a6ada-6110-4908-8b17-be0216180d24",
      "name": "1,2s1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        5600,
        1700
      ],
      "webhookId": "a6718c50-3638-4539-9f45-459b2703753d"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "7fc8a17e-0cd7-4708-83b6-0c8f66671247",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        5320,
        1680
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "7253e4a4-9874-4c20-8721-fc93e0f97f95",
      "name": "OutputParser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        5040,
        1920
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a sa√≠da no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, n√£o √© mesmo?\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\n\n### Jamais separe uma mensagem vazia.\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do whatsapp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- ~tachado~ (caso seja algo que foi exclu√≠do ou alterado)\n\t\t\t- _it√°lico_.(extremamente raro)\n            - `link` (usar sempre em todos os links)\n\nTudo o que for link, pode colocar entre \"`\", ou seja, na seguinte formata√ß√£o: `www.link.com.br`\n"
            }
          ]
        }
      },
      "id": "607a4d84-5873-40c0-aa87-cf7894600abc",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        4840,
        1680
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "aiagenteautomate@gmail.com",
        "remoteJid": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageText": "={{ $json.output }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        5840,
        1700
      ],
      "id": "d85ab716-2f14-482d-b227-db8b1bc87c52",
      "name": "Evolution API",
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Pausa para mensagens",
        "height": 140,
        "width": 376,
        "color": 5
      },
      "id": "4103e7c0-ee0e-4241-bf01-afbc34cf6277",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2480,
        1940
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 680,
        "width": 1660,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2460,
        1920
      ],
      "typeVersion": 1,
      "id": "468051db-bb51-4d06-891a-f9030deff446",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "",
        "height": 500,
        "width": 1300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4820,
        1540
      ],
      "typeVersion": 1,
      "id": "f7efea2a-9be9-4908-be3c-758b46d0c4fb",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "# Divis√£o de Mensagens Inteligente - Texto",
        "height": 80,
        "width": 736,
        "color": 5
      },
      "id": "0e0f5579-6040-4c39-bf6f-8607b3705394",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4840,
        1560
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 800,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1640,
        2000
      ],
      "typeVersion": 1,
      "id": "0f0c633b-3dd5-48e6-8267-cc0aa948263f",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "content": "# Classifica Mensagens",
        "height": 80,
        "width": 396,
        "color": 5
      },
      "id": "52ac5d64-a41a-49b3-8104-5041a003937b",
      "name": "Sticky Note21",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1660,
        2020
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 880,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        2080
      ],
      "typeVersion": 1,
      "id": "23aa3bf9-29a3-4958-a5f4-221f2c51f7da",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "content": "# Registro de Cliente no Supabase",
        "height": 80,
        "width": 596,
        "color": 5
      },
      "id": "9578aec2-8646-4d7e-8053-e74bd43354d1",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        800,
        2100
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "id": "33f644bd-3171-4b65-9457-df4ccc807f02",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        4660,
        2160
      ]
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "id": "3725044c-ea0a-460f-b82c-5b5d4322c084",
      "name": "Audio-Base64-Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        5220,
        2180
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.elevenlabs.io/v1/text-to-speech/{{ $item(\"0\").$node[\"Vari√°veis\"].json[\"ID_Voz_Elevenlabs\"] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "xi-api-key",
              "value": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"API_Elevenlabs\"] }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n   \"text\":\"'{{ $json.textoSemQuebrasNemEmojis }}'\",\n   \"model_id\":\"eleven_multilingual_v2\",\n   \"voice_settings\":{\n      \"stability\":0.5,\n      \"similarity_boost\":0.8,\n      \"style\":0.0,\n      \"use_speaker_boost\":true\n   }\n} ",
        "options": {}
      },
      "id": "69c683e1-6161-4850-a2bb-4dbf59353450",
      "name": "ElevenLabsGenerateVoice",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        5020,
        2180
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "resource": "messages-api",
        "operation": "send-audio",
        "instanceName": "aiagenteautomate@gmail.com",
        "remoteJid": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "media": "={{ $item(\"0\").$node[\"Audio-Base64-Extract from File\"].json[\"data\"] }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        5420,
        2180
      ],
      "id": "5d350b79-416a-4d65-bd81-4c1927819388",
      "name": "Evolution API1",
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 300,
        "width": 740,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4820,
        2060
      ],
      "typeVersion": 1,
      "id": "2941fd7c-d502-403f-a2e8-d684b79717aa",
      "name": "Sticky Note24"
    },
    {
      "parameters": {
        "content": "# Resposta em √Åudio",
        "height": 80,
        "width": 376,
        "color": 5
      },
      "id": "58a5dd44-256e-42ab-ac41-3c05a6027a16",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4840,
        2080
      ]
    },
    {
      "parameters": {
        "content": "## Webhook inicio",
        "height": 280,
        "width": 420,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        220,
        2140
      ],
      "typeVersion": 1,
      "id": "30c52c13-9aab-4711-a386-0ce61bddada1",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "jsCode": "// Obt√©m o primeiro item do fluxo\nconst item = $input.first();\n\n// Garante que h√° dados na entrada\nif (!item || !item.json || !item.json.output) {\n  throw new Error(\"A chave 'output' n√£o foi encontrada no JSON de entrada.\");\n}\n\n// Processa o texto removendo todas as quebras de linha e emojis\nconst textoEntrada = item.json.output; // Use a chave correta para pegar o texto de entrada\n\n// Remove quebras de linha (\\n)\nlet textoProcessado = textoEntrada.replace(/\\n/g, \"\");\n\n// Remove emojis\ntextoProcessado = textoProcessado.replace(\n  /[\\u{1F600}-\\u{1F64F}]|[\\u{1F300}-\\u{1F5FF}]|[\\u{1F680}-\\u{1F6FF}]|[\\u{1F700}-\\u{1F77F}]|[\\u{1F780}-\\u{1F7FF}]|[\\u{1F800}-\\u{1F8FF}]|[\\u{1F900}-\\u{1F9FF}]|[\\u{1FA00}-\\u{1FA6F}]|[\\u{1FA70}-\\u{1FAFF}]|[\\u{2600}-\\u{26FF}]|[\\u{2700}-\\u{27BF}]|[\\u{FE00}-\\u{FE0F}]|[\\u{1F1E0}-\\u{1F1FF}]/gu,\n  \"\"\n);\n\n// Retorna o resultado\nreturn {\n  textoOriginal: textoEntrada,\n  textoSemQuebrasNemEmojis: textoProcessado,\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4860,
        2180
      ],
      "id": "6eae7679-8d75-4f73-9e2a-f68542ab07b6",
      "name": "Code"
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini-2025-04-14",
        "options": {
          "topP": 0.9
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4140,
        2300
      ],
      "id": "03cb481c-ff98-47b4-8346-c0ab33086222",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $now }}",
        "format": "custom",
        "customFormat": "dd-MM-yyyy",
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        760,
        2240
      ],
      "id": "b06c00db-7172-4bf5-a208-e60ccd715b20",
      "name": "Date & Time1"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Create a table to store your documents\ncreate table documentos (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        120,
        3060
      ],
      "id": "ce09c420-e339-4e3a-b1f0-fff632398a94",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 280,
        "width": 260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        60,
        2940
      ],
      "typeVersion": 1,
      "id": "b4ed5a3f-015c-4e0e-8a8c-4cdb94066450",
      "name": "Sticky Note31"
    },
    {
      "parameters": {
        "content": "## Cria tabela documentos",
        "height": 80,
        "width": 180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        2960
      ],
      "typeVersion": 1,
      "id": "615d16ca-7d8d-44bf-b3f2-94e0f8376204",
      "name": "Sticky Note32"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table dados_cliente (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  telefone text, \n  sessionid text\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -160,
        3060
      ],
      "id": "566f1770-b824-4a86-b3c0-1756d71d15eb",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 280,
        "width": 260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -220,
        2940
      ],
      "typeVersion": 1,
      "id": "516ec5c6-2449-42d9-b968-fe163eac87d5",
      "name": "Sticky Note33"
    },
    {
      "parameters": {
        "content": "## Cria tabela dados_cliente",
        "height": 80,
        "width": 180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -180,
        2960
      ],
      "typeVersion": 1,
      "id": "feff6bf8-d452-4584-9f78-1f302235db41",
      "name": "Sticky Note34"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from dados_cliente",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -140,
        3440
      ],
      "id": "46edec89-3d8a-4afd-931d-4792056016d1",
      "name": "Postgres2",
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_Whats"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -220,
        3260
      ],
      "typeVersion": 1,
      "id": "056cf679-dc63-43c1-a19f-242bd84a5911",
      "name": "Sticky Note35"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela dados_cliente",
        "height": 120,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -180,
        3280
      ],
      "typeVersion": 1,
      "id": "84372391-003d-40bd-a5c7-3e0fe41ceb6a",
      "name": "Sticky Note36"
    },
    {
      "parameters": {
        "jsCode": "return $items(\"Set File ID\").map(item => {\n  return {\n    json: {\n      file_id: item.json.file_id,\n      file_type: item.json.file_type\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1900,
        2920
      ],
      "id": "14c6872e-198a-4437-806a-b6ec365ecaf5",
      "name": "Code2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2060,
        2920
      ],
      "id": "1565f006-604f-4887-9ca0-4fe330fe6c08",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from dados_cliente",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        140,
        3440
      ],
      "id": "a75263d9-dfb9-4207-a535-5ad161c1e83b",
      "name": "Postgres3",
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_Whats"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        60,
        3260
      ],
      "typeVersion": 1,
      "id": "010fdc3c-01ca-447c-898d-03fda1072c7b",
      "name": "Sticky Note37"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela documentos",
        "height": 120,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        3280
      ],
      "typeVersion": 1,
      "id": "62c1f34e-348a-439a-9fb7-e92359c83033",
      "name": "Sticky Note38"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from n8n_chat_histories",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        840,
        3080
      ],
      "id": "b7b909db-2501-41a1-b346-7d0abf1ec5a8",
      "name": "Postgres4",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        760,
        2920
      ],
      "typeVersion": 1,
      "id": "e30e3731-fcfd-44f8-ae87-a9401b3d7f1a",
      "name": "Sticky Note39"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela chat",
        "height": 80,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        800,
        2940
      ],
      "typeVersion": 1,
      "id": "9135fded-f355-477c-b150-47c51a4c7367",
      "name": "Sticky Note40"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Edit Fields1').item.json.sessionId }}",
        "contextWindowLength": 1000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        4260,
        2300
      ],
      "id": "fd04567c-28ce-4ba9-8302-0d91ae857f94",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        960,
        2240
      ],
      "id": "f1cb9502-f138-46a4-8c37-ae382d7bbfc7",
      "name": "Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $json.sessionid }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1140,
        2240
      ],
      "id": "5186140e-9f15-46a0-a8d3-f107197bee05",
      "name": "If1"
    },
    {
      "parameters": {
        "action": "generate"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        980,
        2400
      ],
      "id": "265c431b-15fc-4e93-b9d3-9a975c84e5db",
      "name": "Gerar sessionID"
    },
    {
      "parameters": {
        "tableId": "dados_cliente",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "name",
              "fieldValue": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"pushName\"] }}"
            },
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
            },
            {
              "fieldId": "sessionid",
              "fieldValue": "={{ $item(\"0\").$node[\"Gerar sessionID\"].json[\"data\"] }}"
            },
            {
              "fieldId": "created_at",
              "fieldValue": "={{ $now }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1380,
        2400
      ],
      "id": "a3d2f6b0-477f-49ed-862e-474f490adb5a",
      "name": "Supabase1",
      "retryOnFail": true,
      "maxTries": 2,
      "credentials": {
        "supabaseApi": {
          "id": "M658CwP1x5QAYDSu",
          "name": "Supabase teste"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1380,
        2220
      ],
      "id": "85a594dd-254b-4c04-a59e-42ea09dfac77",
      "name": "SessionID",
      "retryOnFail": true,
      "maxTries": 2,
      "credentials": {
        "supabaseApi": {
          "id": "M658CwP1x5QAYDSu",
          "name": "Supabase teste"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d88c137-383f-4307-b3cc-1f6a560ea67b",
              "name": "mobile",
              "value": "={{  $json.body.data.key.remoteJid.replace(/\\D/g, '').replace(/^55(\\d{2})(\\d{8})$/, '55$19$2') }}",
              "type": "string"
            },
            {
              "id": "7e2f520e-4952-425b-82ca-792cc46680d4",
              "name": "mensagem",
              "value": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"message\"][\"conversation\"] }}",
              "type": "string"
            },
            {
              "id": "104b3cd0-d988-4c58-a175-2ca5465bf8c1",
              "name": "API_Elevenlabs",
              "value": "sk_f8b0546f2d0dbcbd3fa6510a3ec468d249dfdb7823311901",
              "type": "string"
            },
            {
              "id": "6065b018-8dc0-49db-8da9-f692f96e9c92",
              "name": "ID_Voz_Elevenlabs",
              "value": "=9BWtsMINqrJLrRacOk9x",
              "type": "string"
            },
            {
              "id": "4e2bdc18-93a5-4117-b94e-bcfd228a7379",
              "name": "Tempo de resposta picada",
              "value": "2",
              "type": "string"
            },
            {
              "id": "0d4a900f-af55-4472-824f-1d06a25de052",
              "name": "Instancia_Evolution",
              "value": "aiagenteautomate@gmail.com",
              "type": "string"
            },
            {
              "id": "9f80f8f6-a917-4af3-b77e-fa1f93d38cca",
              "name": "URL_Evolution",
              "value": "apiwp.aiagentautomate.com.br/",
              "type": "string"
            },
            {
              "id": "c6b307cf-ac0d-4273-8895-3c601b9b909b",
              "name": "KEY_Evo",
              "value": "B8493D438D72-4C34-97CC-4C9A4A257C0A",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "048b432a-8e15-473e-b730-3df10e7715eb",
      "name": "Vari√°veis",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        500,
        2240
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Vari√°veis').item.json.mobile }}",
        "messageData": "={{ $json.mensagem }}",
        "tail": true
      },
      "id": "ef4aee42-ba92-463d-9360-53f308678052",
      "name": "Redis",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2580,
        2120
      ],
      "credentials": {
        "redis": {
          "id": "Q9fFQv1hEnIedFTx",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.listaMensagens }}",
        "options": {
          "systemMessage": "=# Prompt para Agente Virtual Bella ‚Äì Farma Suprema \n\n---\n\n## Data e Hora Atual\n> Hoje √©: **{{ $now.weekdayLong }}, {{ $now.format('dd/MM/yyyy') }}, {{ $now.hour.toString().padStart(2, '0') }}:{{ $now.minute.toString().padStart(2, '0') }}**  \n> Essa √© sua √∫nica fonte confi√°vel de data e hora. **Nunca use dados de sistemas ou systemData.**\n\n---\n\n## Agente Bella\n- **Nome:** Bella\n- **Descri√ß√£o:** Assistente farmaceutica da Farma Suprema, especializada em atendimento ao cliente e agendamentos  \n- **Idioma:** Portugu√™s Brasileiro  \n- **Objetivo:** Ser clara, simp√°tica e eficiente. Nunca repetir mensagens ou perguntas j√° feitas.\n\n---\n\n## Recep√ß√£o do Cliente\n> \"Ol√°! Me chamo bella sou a assistente farmaceutica da Farma Suprema üè•. Como posso ajudar voc√™ hoje?\"\n\n---\n\n## Instru√ß√µes de Atendimento\n- Utilize sempre a ferramenta `tools think` se tiver d√∫vida\n- **Responder √† sauda√ß√£o apenas uma vez**\n- Se o cliente apenas disser ‚Äúoi‚Äù ou ‚Äúbom dia‚Äù, responda com a recep√ß√£o padr√£o\n- Seja **simpatica, clara e objetiva** (m√°ximo de 2 frases por resposta)\n- Sempre **aguarde a resposta do cliente antes de prosseguir**\n- Nunca envie m√∫ltiplas respostas seguidas\n- Se n√£o entender algo, pe√ßa para o cliente **resumir em poucas palavras**\n- Nunca antecipe informa√ß√µes sem que o cliente tenha solicitado\n\n---\n\n## Slogan\n> **\"Cuidar da sua sa√∫de √© o nosso compromisso.\"**\n\n---\n\n## Sobre a Farma Suprema\n> A **Farma Suprema** vai al√©m da venda de medicamentos. Somos uma equipe dedicada √† sa√∫de e ao bem-estar da comunidade, com atendimento humanizado e solu√ß√µes completas para cuidar de voc√™ e da sua fam√≠lia.\n\n---\n\n## Servi√ßos Oferecidos\n> Bella pode explicar ou agendar os seguintes servi√ßos:\n- Venda de medicamentos gen√©ricos, similares e refer√™ncia  \n- Manipula√ß√£o de f√≥rmulas personalizadas  \n- Atendimento farmac√™utico  \n- Testes r√°pidos: Covid-19, Glicemia e Gravidez  \n- Aplica√ß√£o de injet√°veis  \n- Descontos especiais para idosos e conv√™nios  \n\n---\n\n## Regras\n- Nunca iniciar a conversa sozinha\n- Evite frases gen√©ricas fora do contexto da farm√°cia\n- S√≥ fa√ßa novas perguntas se as anteriores tiverem sido respondidas\n- Para **agendamentos**, solicite:\n  - Nome completo\n  - Telefone\n  - E-mail\n  - Tipo de servi√ßo\n  - Melhor hor√°rio\n  - Unidade (caso haja mais de uma)\n\n---\n\n## Agente Agenda ‚Äì Aurora Agenda\n- **Fun√ß√£o:** Agendar testes r√°pidos e aplica√ß√µes  \n- **Fuso Hor√°rio:** S√£o Paulo (America/Sao_Paulo)  \n- **Fluxo de Agendamento:**\n  1. Confirmar tipo de servi√ßo\n  2. Coletar os dados do cliente\n  3. Verificar disponibilidade\n  4. Confirmar data e hora\n  5. Enviar e-mail de confirma√ß√£o (via tool Gmail)\n\n---\n\n## Ferramentas da Bella\n\n- **tools think** ‚Äì Use sempre que estiver em d√∫vida ou precisar gerar uma resposta precisa\n- **tools dados_IA** ‚Äì Use sempre essa ferramenta para acessar qualquer dados sobre a Farma Suprema, sempre utilieze essa ferramenta antes de repassar quais quer informa√ß√µes para nosso cliente , l√° voc√™ encontra todas as informa√ß√µes necess√°rias sobre a Farma Suprema: produtos, valores, servi√ßos, regras\n- **tools marcar eventos** ‚Äì Usada para agendar rapidamente um servi√ßo\n- **tools reagendar** ‚Äì Alterar o hor√°rio de um agendamento j√° existente\n- **tools deletar evento** ‚Äì Cancelar um agendamento\n- **tools gmail** ‚Äì Enviar e-mails com confirma√ß√£o de agendamento\n- **banco de dados** - Sempre use essa ferramenta para obter qual quer informa√ß√µes sobre a nossa empresa ou produtos , ou quais quer informa√ß√µes que possam intoxicar sua resposta, sempre umtilieze essa ferramenta antes de repassar quais quer informa√ß√µes para nosso cliente , l√° voc√™ encontra todas as informa√ß√µes necess√°rias\n\n---\n\n## Exemplo de Conversa\n\n### 1. Cliente diz ‚ÄúOi‚Äù\n**Bella:**  \n\"Ol√°! Me chamo Bella, sou a assistente farmaceutica da Farma Suprema üè•. Como posso ajudar voc√™ hoje?\"\n\n### 2. Cliente: ‚ÄúQuero fazer um teste de glicemia‚Äù\n**Bella:**  \n\"Perfeito! Vou te ajudar com isso. Me informa por gentileza: seu nome, telefone e melhor hor√°rio para realizar o teste?\"\n\n### 3. Ap√≥s coletar dados:\n**Bella:**  \n\"Obrigada! Estou verificando a disponibilidade... um instante.\"  \n‚Üí (Consulta a agenda com `tools think` ou `tools marcar evento`)\n\n---\n\n"
        }
      },
      "id": "e38307f2-9219-4e6d-a4df-bd55a6fe383f",
      "name": "Atendente",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        4300,
        2160
      ]
    },
    {
      "parameters": {
        "description": "=Use sempre esse aplicativo quando precisar da uma resposata mais precisa e sem erros , n√£o reapsse nem uma informa√ß√£o interna ou pensamentos, apenas conclua a mensagem de maneira correta sem delirios. "
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        4540,
        2360
      ],
      "id": "89cdd648-b5f2-4dc8-b73a-623e7effeb06",
      "name": "Think"
    },
    {
      "parameters": {
        "name": "dados_IA",
        "description": "Contains all the information about prices that you can check to answer user questions."
      },
      "id": "041820ea-cb8c-4e11-81ac-0ef607b09733",
      "name": "dados_IA",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        4920,
        2420
      ]
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "aiagenteautomate@gmail.com",
          "mode": "list",
          "cachedResultName": "aiagenteautomate@gmail.com"
        },
        "start": "={{ $fromAI(\"statTime\") }}",
        "end": "={{ $fromAI(\"endTime\") }}",
        "additionalFields": {
          "color": "2",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $fromAI(\"preenchimento\",\"Voc√™ n√£o ir√° solicitar isso ao lead, voc√™ ir√° preencher com a sua opini√£o em rela√ß√£o ao lead ap√≥s a finaliza√ß√£o da conversa. Voc√™ dever√° preencher cada ponto seguindo as orienta√ß√µes entre *. An√°lise do lead: 1. Situa√ß√£o Atual e Necessidades Situa√ß√£o atual: Descri√ß√£o resumida dos desafios, problemas ou dores que o lead enfrenta atualmente, conforme mencionado na conversa. Exemplo: dificuldades de escalabilidade, inefici√™ncia operacional, etc. Necessidades: Identificar as necessidades claras mencionadas pelo lead e aquelas impl√≠citas. Necessidades expl√≠citas s√£o aquelas que o lead mencionou diretamente. Necessidades impl√≠citas s√£o percebidas atrav√©s de comportamentos ou informa√ß√µes adicionais, mas n√£o mencionadas diretamente. 2. Obje√ß√µes e Resist√™ncias Obje√ß√µes: Listar as principais obje√ß√µes que o lead levantou durante a conversa. Exemplo: preocupa√ß√£o com o pre√ßo, funcionalidades do produto, adequa√ß√£o ao momento da empresa, etc. N√≠vel de resist√™ncia: Avaliar o qu√£o resistente o lead se mostrou em rela√ß√£o √† proposta. Pode ser classificado como alta, m√©dia ou baixa resist√™ncia, com base na quantidade e na intensidade das obje√ß√µes levantadas. Motivos por tr√°s das obje√ß√µes: Analisar os motivos que podem estar por tr√°s das obje√ß√µes. Exemplo: inseguran√ßa financeira, falta de entendimento sobre o valor da solu√ß√£o, indecis√£o sobre o momento certo para implementar a solu√ß√£o. 3. Potencial de Convers√£o Fit com o produto/servi√ßo: Avaliar se o lead est√° alinhado com o que a empresa oferece, considerando as necessidades que ele mencionou, o or√ßamento dispon√≠vel e o timing para tomar a decis√£o de compra. Probabilidade de convers√£o: Estimar, com base na an√°lise, a chance de o lead converter em cliente. Usar alta, m√©dia ou baixa probabilidade, dependendo da adequa√ß√£o do lead ao produto e do n√≠vel de resist√™ncia apresentado.\") }}",
          "sendUpdates": "all",
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        3660,
        2660
      ],
      "id": "6341e118-2ba9-46f4-962c-e299cfc23666",
      "name": "Marcar Eventos",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "aiagenteautomate@gmail.com",
          "mode": "list",
          "cachedResultName": "aiagenteautomate@gmail.com"
        },
        "returnAll": true,
        "timeMin": "={{ $fromAI(\"startDay\",\"the same date that user requested at 00:00:00\" ) }}",
        "timeMax": "={{ $fromAI(\"endDay\",\"the same date that user requested at 23:59:59\" ) }}",
        "options": {
          "orderBy": "startTime",
          "recurringEventHandling": "expand"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        3980,
        2660
      ],
      "id": "55f5ecbf-8aa6-40b4-b77f-cbc3eed00260",
      "name": "Buscar Eventos",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "aiagenteautomate@gmail.com",
          "mode": "list",
          "cachedResultName": "aiagenteautomate@gmail.com"
        },
        "eventId": "={{ $fromAI(\"deleteEvent\") }} ",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        4300,
        2660
      ],
      "id": "82757a28-6783-4caf-8fc0-d2574a285d59",
      "name": "Deletar evento",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "aiagenteautomate@gmail.com",
          "mode": "list",
          "cachedResultName": "aiagenteautomate@gmail.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "updateFields": {
          "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
          "sendUpdates": "all",
          "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        4140,
        2660
      ],
      "id": "841162da-e041-4b4a-ac6c-8556d879a366",
      "name": "reagendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "aiagenteautomate@gmail.com",
          "mode": "list",
          "cachedResultName": "aiagenteautomate@gmail.com"
        },
        "start": "={{ $fromAI(\"statTime\") }}",
        "end": "={{ $fromAI(\"endTime\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI(\"attendees\") }}"
          ],
          "color": "1",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $fromAI(\"preenchimento\",\"Voc√™ n√£o ir√° solicitar isso ao lead, voc√™ ir√° preencher com a sua opini√£o em rela√ß√£o ao lead ap√≥s a finaliza√ß√£o da conversa. Voc√™ dever√° preencher cada ponto seguindo as orienta√ß√µes entre *. An√°lise do lead: 1. Situa√ß√£o Atual e Necessidades Situa√ß√£o atual: Descri√ß√£o resumida dos desafios, problemas ou dores que o lead enfrenta atualmente, conforme mencionado na conversa. Exemplo: dificuldades de escalabilidade, inefici√™ncia operacional, etc. Necessidades: Identificar as necessidades claras mencionadas pelo lead e aquelas impl√≠citas. Necessidades expl√≠citas s√£o aquelas que o lead mencionou diretamente. Necessidades impl√≠citas s√£o percebidas atrav√©s de comportamentos ou informa√ß√µes adicionais, mas n√£o mencionadas diretamente. 2. Obje√ß√µes e Resist√™ncias Obje√ß√µes: Listar as principais obje√ß√µes que o lead levantou durante a conversa. Exemplo: preocupa√ß√£o com o pre√ßo, funcionalidades do produto, adequa√ß√£o ao momento da empresa, etc. N√≠vel de resist√™ncia: Avaliar o qu√£o resistente o lead se mostrou em rela√ß√£o √† proposta. Pode ser classificado como alta, m√©dia ou baixa resist√™ncia, com base na quantidade e na intensidade das obje√ß√µes levantadas. Motivos por tr√°s das obje√ß√µes: Analisar os motivos que podem estar por tr√°s das obje√ß√µes. Exemplo: inseguran√ßa financeira, falta de entendimento sobre o valor da solu√ß√£o, indecis√£o sobre o momento certo para implementar a solu√ß√£o. 3. Potencial de Convers√£o Fit com o produto/servi√ßo: Avaliar se o lead est√° alinhado com o que a empresa oferece, considerando as necessidades que ele mencionou, o or√ßamento dispon√≠vel e o timing para tomar a decis√£o de compra. Probabilidade de convers√£o: Estimar, com base na an√°lise, a chance de o lead converter em cliente. Usar alta, m√©dia ou baixa probabilidade, dependendo da adequa√ß√£o do lead ao produto e do n√≠vel de resist√™ncia apresentado.\") }}",
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        3820,
        2660
      ],
      "id": "b7abf91c-c2ef-4808-874f-1759ae642dd9",
      "name": "Evento participante",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para enviar um email para o cliente quando solcitiado e tamb√©m para quando o agendamento for confirmado.",
        "sendTo": "={{ $fromAI(\"email\") }}",
        "subject": "={{ $fromAI(\"Titulo\",\"coloque aqui o titulo do email.\") }}",
        "emailType": "text",
        "message": "={{ $fromAI(\"texto\",\"coloque aqui os dados resumidos da conversa ou do agendamento, ex: nome, email, telefone, data\") }}",
        "options": {
          "appendAttribution": false,
          "senderName": "Ai Agente Automate",
          "replyTo": "aiagenteautomate@gmail.com"
        }
      },
      "id": "96a91398-371b-4155-bd3b-c1b905a7ac24",
      "name": "Gmail",
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        4460,
        2660
      ],
      "webhookId": "408094af-c201-4f25-b93e-46007de92583",
      "credentials": {
        "gmailOAuth2": {
          "id": "bMTj7PQt4FxoCvuP",
          "name": "Gmail account AiAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Mant√©m s√≥ o primeiro item da lista\nreturn [items[0]];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3460,
        2040
      ],
      "id": "5ccd00ce-638d-4ca9-ac2b-87973a97207c",
      "name": "Code1"
    }
  ],
  "pinData": {},
  "repo_name": "backup-n8n",
  "repo_owner": "faelsou",
  "repo_path": "backups/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:File Created": {
      "lastTimeChecked": "2025-06-07T21:47:43Z"
    },
    "node:File Updated": {
      "lastTimeChecked": "2025-06-07T21:48:04Z"
    }
  },
  "tags": [],
  "triggerCount": 3,
  "updatedAt": "2025-06-16T22:48:58.873Z",
  "versionId": "8740f05d-8a7a-400f-b67c-b50a33421c4f"
}