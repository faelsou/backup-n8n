{
  "active": true,
  "connections": {
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "dados_IA",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Doc Rows": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Delete Old Doc Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Document Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "dados_IA",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Get Image URL from Redis",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "Upload Image to Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis3": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Redis3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Vari√°veis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "SDR Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Segmentos1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1,2s1": {
      "main": [
        [
          {
            "node": "Enviar texto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "1,2s1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser1": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Segmentos1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Monitor LLM Usage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Get a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert into Supabase Vectorstore": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "SessionID",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar sessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar sessionID": {
      "main": [
        [
          {
            "node": "Create a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SessionID": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vari√°veis": {
      "main": [
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados_IA": {
      "ai_tool": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar texto": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a row": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a row": {
      "main": [
        [
          {
            "node": "SessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Agente B2C",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Agente B2B",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Agente B2C",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Agente Agendamento B2C": {
      "ai_tool": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Agente Agendamento B2B": {
      "ai_tool": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Enviar Email B2C": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Enviar Email B2B": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Agente B2B": {
      "ai_tool": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Agente B2C": {
      "ai_tool": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Agente B2B",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "SDR Agent": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leads B2B": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Leads B2C": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Deletar Evento B2C": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Marcar Eventos B2C": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Evento participante B2C": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Eventos B2C": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Reagendar B2C": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Marcar Eventos B2B": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Evento participante B2B": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Eventos B2B": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Reagendar B2B": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Deletar evento B2B": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Baixar Imagem": {
      "main": [
        [
          {
            "node": "Preparar Imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar Imagem": {
      "main": [
        [
          {
            "node": "IA - Analisar Imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Image to Drive": {
      "main": [
        [
          {
            "node": "Make Image Public",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Make Image Public": {
      "main": [
        [
          {
            "node": "Save Image URL to Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Image URL to Redis": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Image URL from Redis": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-08T02:50:28.018Z",
  "id": "EJu5LgykANSB6pjW",
  "isArchived": false,
  "meta": null,
  "name": "GRD_MAD_PRD copy 3",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "d58670a1-684e-4abd-9f9f-458fe5295256",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        3504,
        1168
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').first().json.file_id }}"
              }
            ]
          }
        }
      },
      "id": "8498d90a-8387-4e67-b34d-9581ab8940cc",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        1520,
        1616
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "91381026-e6fc-4585-b531-cf54fc136b59",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        1376,
        1648
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Busca Info no RAG",
        "height": 80,
        "width": 350,
        "color": 5
      },
      "id": "b3a10d1e-6a1f-487e-96e5-86a6019f1d10",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3040,
        960
      ]
    },
    {
      "parameters": {
        "content": "# Ferramenta para Adicionar um Arquivo do Google Drive ao Banco de Dados Vetorial.",
        "height": 80,
        "width": 1493,
        "color": 5
      },
      "id": "dba45b1d-e82f-428d-9f61-f75a4b4cfb83",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        32,
        1120
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "5d58ca08-788d-4b52-bdb4-561575a7bc0d",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        480,
        1392
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "lEIDsWEIbsEr4Vq9",
          "name": "Google Drive GrdMad"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 1,
              "unit": "minutes"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1mstmyigwRhrr3h4V5AFEb0627JnTDwnK",
          "mode": "list",
          "cachedResultName": "Base de Conhecimento Joanna",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1mstmyigwRhrr3h4V5AFEb0627JnTDwnK"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "06246c0f-21af-4efd-838d-36feb52fbbb9",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -416,
        1328
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "lEIDsWEIbsEr4Vq9",
          "name": "Google Drive GrdMad"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1mstmyigwRhrr3h4V5AFEb0627JnTDwnK",
          "mode": "list",
          "cachedResultName": "Base de Conhecimento Joanna",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1mstmyigwRhrr3h4V5AFEb0627JnTDwnK"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "17efa31a-d3ff-4f4c-a714-f7b3e2412e68",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -416,
        1520
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "lEIDsWEIbsEr4Vq9",
          "name": "Google Drive GrdMad"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "534df512-b41e-4404-82f1-8a134a67c6a5",
      "name": "Extract Document Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1056,
        1568
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "4462efbc-be38-4d19-94a8-1277f5c3b819",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        3104,
        1232
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documentos",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "id": "c9dcf640-03dc-4f87-9c38-bcb53275e433",
      "name": "Delete Old Doc Rows",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -64,
        1376
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "c774ed34-0d67-44b7-a537-83810f357b7c",
              "name": "originalFilename",
              "value": "={{ $json.originalFilename }}",
              "type": "string"
            },
            {
              "id": "dff39c85-b4a2-45ba-a5ff-f4b311999efc",
              "name": "sha1Checksum",
              "value": "={{ $json.sha1Checksum }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "a70031eb-f5da-4b02-a653-12ed6bb0053b",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -224,
        1376
      ]
    },
    {
      "parameters": {
        "content": "# Atendente IA",
        "height": 80,
        "width": 276,
        "color": 6
      },
      "id": "d1572caa-edb6-48d0-93f6-66ea494470e3",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2384,
        416
      ]
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "32494949-1ae2-4415-a352-0b5f7970cca8",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1056,
        1216
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "f8bb6a5e-03d9-4ab4-8123-383b3e85fda2",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1216,
        1392
      ]
    },
    {
      "parameters": {},
      "id": "88f2cfdd-0b6b-4a30-8d70-1021029b6348",
      "name": "Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1584,
        1776
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "ef35e758-0aae-4a67-9df1-42e9093f9b88",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        1360,
        1392
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 2
        }
      },
      "id": "1e1aec49-e5d9-44cb-a103-5269b2df804a",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        656,
        1392
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documentos",
          "mode": "list",
          "cachedResultName": "documentos"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "7167b321-9049-4fe7-9744-3e1cf48962f4",
      "name": "Insert into Supabase Vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        1472,
        1392
      ],
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documentos",
          "mode": "list",
          "cachedResultName": "documentos"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "9f64e3b1-6f13-4a45-9513-ace4042133c2",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        3056,
        1088
      ],
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "ec6e80a6-4642-467f-a061-c048c38d3366",
      "name": "Extract from Excel",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1056,
        1392
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 644,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2352,
        368
      ],
      "typeVersion": 1,
      "id": "0cfb9381-7e77-40b9-ba28-ded0c49be285",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "",
        "height": 424,
        "width": 700,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3024,
        928
      ],
      "typeVersion": 1,
      "id": "e0b6c600-2b05-4eda-874f-2553e5dfb779",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "",
        "height": 800,
        "width": 2300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -496,
        1088
      ],
      "typeVersion": 1,
      "id": "788829d2-ae7a-4a23-8ad4-5b2d342611a3",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Arquivos criados em uma pasta espec√≠fica > Verificar o tipo de arquivo e realizar convers√£o > Extrair o texto > Adicionar ao Vector Store",
        "height": 80,
        "width": 1600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -480,
        1792
      ],
      "typeVersion": 1,
      "id": "2fb716be-bd85-4f38-9fed-2aff271e1e80",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Gatilho de Monitoramento",
        "height": 440,
        "width": 213,
        "color": 5
      },
      "id": "cd608606-53ca-42ed-bdce-cb4d7b4e46e2",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -464,
        1232
      ]
    },
    {
      "parameters": {
        "amount": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"Tempo de resposta picada\"] }}"
      },
      "id": "97585994-7990-428b-bc7a-6f35b29157c3",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1296,
        736
      ],
      "webhookId": "36897edf-24a8-4eb8-a9dd-47063a839465"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "options": {}
      },
      "id": "9c9ab6b8-c1ad-4c1a-a713-18253d41f8d9",
      "name": "Redis1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1456,
        736
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "21fd20d7-f940-4a66-91d5-5ea4c031bb50",
              "leftValue": "={{ $json.propertyName.last() }}",
              "rightValue": "={{ $('Vari√°veis').item.json.mensagem }}",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d7813ced-8e24-4458-b848-dee953b3a46e",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1776,
        736
      ]
    },
    {
      "parameters": {},
      "id": "d526dda6-378e-48b9-ab5a-4dcff48946fd",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1952,
        816
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "37f63b88-4a52-4421-aa95-db9114e521bc",
              "name": "listaMensagens",
              "value": "={{ $json.propertyName[0] }}",
              "type": "string"
            },
            {
              "id": "08b2e8c0-bc00-43ef-80bd-7a86bda2ee47",
              "name": "sessionId",
              "value": "={{ $item(\"0\").$node[\"SessionID\"].json[\"sessionid\"] }}",
              "type": "string"
            },
            {
              "name": "imageUrl",
              "type": "string",
              "value": "={{ $('Get Image URL from Redis').item.json.data }}",
              "id": "b0a6e6a1-a75d-4f1f-9a70-8b1b225c5678"
            }
          ]
        },
        "options": {}
      },
      "id": "714f8b0a-c873-4782-a0a8-b69b451c2586",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1936,
        608
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
      },
      "id": "5676c853-b66c-4103-91b1-63755329ac81",
      "name": "Redis2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2176,
        608
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.ogg",
          "mimeType": "application/ogg"
        }
      },
      "id": "d017726d-cb51-4356-87f6-4d20e75acd75",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        240,
        736
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8b509721-8b7f-4e9a-8726-76b3b37126e7",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        96,
        736
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.png",
          "mimeType": "image/png"
        }
      },
      "id": "bce14383-0d37-404d-a305-a10eee856148",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        64,
        928
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "ea8d7e38-82ee-437d-917f-f61aec5f922d",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -112,
        944
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ade56c50-1520-4760-8df5-e99617d6d3ad",
              "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4170c2a6-2b19-4bdf-a5b6-d2cb9c661a50",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        752,
        896
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageData": "={{ $item(\"0\").$node[\"OpenAI\"].json[\"text\"] }}",
        "tail": true
      },
      "id": "c42525d3-1317-4f55-95db-5160df6aa509",
      "name": "Redis3",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        784,
        736
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageData": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}, {{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "1144fae5-38c4-450d-afb5-0deda8e8ef8f",
      "name": "Redis4",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        960,
        912
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageData": "={{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "d771c909-5830-4e91-909c-a9bc0ae4f5f7",
      "name": "Redis5",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1120,
        832
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "50cebc66-2dbc-4c7a-a09e-83ffb0f52991",
              "name": "mensagem",
              "value": "={{ $('Vari√°veis').item.json.mensagem }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "03f260b5-3e50-4697-a57d-751052c64ff8",
      "name": "Edit Fields4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        96,
        576
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "69ffdf00-8c85-4f80-9313-6ccc3d3a62db",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        400,
        736
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Descreva todo o conteudo da imagem. Responda sem acento, sem hifens",
        "inputType": "base64",
        "options": {}
      },
      "id": "7698b624-329c-48ff-966f-dc021ffea913",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        624,
        896
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "grdmad",
        "options": {}
      },
      "id": "2ed820a0-d141-4d94-812d-08c1e13525d2",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1536,
        688
      ],
      "webhookId": "9da7e7a6-a361-41cb-9eab-2f1e65d7e00d"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c0e434dd-1268-421d-b81b-3a5e90ed9550",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "1b888ba6-14cc-48e4-b10c-5b21023916e4",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -144,
        720
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b0dfe1f3-0d09-48b4-a5db-427461855f2f",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        3392,
        720
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "8a7b2654-ddb2-412d-9f6b-29fa988d1f10",
      "name": "Segmentos1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        3664,
        480
      ]
    },
    {
      "parameters": {
        "amount": 2.1
      },
      "id": "a12d812c-8f70-4e65-960e-fbe846ca3d13",
      "name": "1,2s1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4112,
        512
      ],
      "webhookId": "8bd120f2-182b-4924-9e76-21dc4af97289"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "8068c4e4-90bd-4b75-80c2-b311d2c311ac",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3840,
        480
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "7862fb21-8d9c-472f-9d8c-35f12d21183d",
      "name": "OutputParser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        3552,
        720
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a sa√≠da no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, n√£o √© mesmo?\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\n\n### Jamais separe uma mensagem vazia.\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do whatsapp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- ~tachado~ (caso seja algo que foi exclu√≠do ou alterado)\n\t\t\t- _it√°lico_.(extremamente raro)\n            - `link` (usar sempre em todos os links)\n\nTudo o que for link, pode colocar entre \"`\", ou seja, na seguinte formata√ß√£o: `www.link.com.br`\n"
            }
          ]
        }
      },
      "id": "8e70f7cc-29a2-435f-9d32-42333d44c0fd",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        3360,
        480
      ]
    },
    {
      "parameters": {
        "content": "# Pausa para mensagens",
        "height": 140,
        "width": 376,
        "color": 5
      },
      "id": "0175d786-4423-44fb-9ece-ca64bf75d4f8",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        672,
        400
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 680,
        "width": 1660,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        656,
        368
      ],
      "typeVersion": 1,
      "id": "dc7fd733-862a-4fdc-8082-2f28f62ca3b0",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "",
        "height": 500,
        "width": 1412,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3136,
        368
      ],
      "typeVersion": 1,
      "id": "21ce5131-6913-4c84-b960-4d49b54b44be",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "# Divis√£o de Mensagens Inteligente - Texto",
        "height": 80,
        "width": 736,
        "color": 5
      },
      "id": "324b5e0a-5eec-42fc-828a-e694a5e40f01",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3152,
        368
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 800,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -160,
        448
      ],
      "typeVersion": 1,
      "id": "734055d7-0c88-4e89-b9df-00f020e43caa",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "content": "# Classifica Mensagens",
        "height": 80,
        "width": 396,
        "color": 5
      },
      "id": "01382773-188f-41b0-b1bb-a37608673727",
      "name": "Sticky Note21",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -144,
        480
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 880,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1088,
        528
      ],
      "typeVersion": 1,
      "id": "4f311b2f-a277-4f2c-a8f2-df0f87e9749d",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "content": "# Registro de Cliente no Supabase",
        "height": 80,
        "width": 596,
        "color": 5
      },
      "id": "a8334bbd-a5a5-4a94-80da-ff70a1ef8f42",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1008,
        560
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "id": "5babaf05-c6b3-40bc-abef-cd524cde418d",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        3024,
        592
      ]
    },
    {
      "parameters": {
        "content": "## Webhook inicio",
        "height": 280,
        "width": 420,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1584,
        592
      ],
      "typeVersion": 1,
      "id": "0030a0c7-7f0f-4335-a6f2-d63a58b788e2",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $now }}",
        "format": "custom",
        "customFormat": "dd-MM-yyyy",
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -1040,
        688
      ],
      "id": "90b56c25-3edd-4f2f-bf9f-987673105773",
      "name": "Date & Time1"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Create a table to store your documents\ncreate table documents (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -768,
        1616
      ],
      "id": "98949ea1-21a8-4f0f-8649-d5b7ecd5e5a4",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 280,
        "width": 260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -832,
        1488
      ],
      "typeVersion": 1,
      "id": "e2eaed4b-0b38-4ad2-9b0f-412899adeb70",
      "name": "Sticky Note31"
    },
    {
      "parameters": {
        "content": "## Cria tabela documentos",
        "height": 80,
        "width": 180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -784,
        1504
      ],
      "typeVersion": 1,
      "id": "0c09a505-35b6-4be1-97d0-592c6e684c60",
      "name": "Sticky Note32"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table dados_cliente (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  telefone text, \n  sessionid text\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -1056,
        1616
      ],
      "id": "99d45dde-8398-427b-aee5-426109692486",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 280,
        "width": 260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1120,
        1488
      ],
      "typeVersion": 1,
      "id": "d434d509-59a2-4f05-b4d8-901106416e27",
      "name": "Sticky Note33"
    },
    {
      "parameters": {
        "content": "## Cria tabela dados_cliente",
        "height": 80,
        "width": 180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1072,
        1504
      ],
      "typeVersion": 1,
      "id": "40cd252f-7ab6-4414-bcea-bbd64f94b822",
      "name": "Sticky Note34"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from dados_cliente",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -1040,
        1984
      ],
      "id": "788e203c-7a50-4467-ae00-57222a416450",
      "name": "Postgres2",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1120,
        1808
      ],
      "typeVersion": 1,
      "id": "bb59a511-8af4-4b06-b18c-d9c2bf610ca5",
      "name": "Sticky Note35"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela dados_cliente",
        "height": 120,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1072,
        1824
      ],
      "typeVersion": 1,
      "id": "2cc9f626-4b92-44b8-8828-4c0491948f36",
      "name": "Sticky Note36"
    },
    {
      "parameters": {
        "jsCode": "return $items(\"Set File ID\").map(item => {\n  return {\n    json: {\n      file_id: item.json.file_id,\n      file_type: item.json.file_type\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        96,
        1376
      ],
      "id": "af17ee51-5056-4257-9401-d34c1e32186f",
      "name": "Code2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        256,
        1376
      ],
      "id": "1af67cd9-9097-43d7-81eb-9869e5a1d0dc",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -832,
        1808
      ],
      "typeVersion": 1,
      "id": "672af3cb-f657-4d12-b6fa-6ad5b8ca2530",
      "name": "Sticky Note37"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela documentos",
        "height": 120,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -784,
        1824
      ],
      "typeVersion": 1,
      "id": "616c0dc0-6a4d-41d6-aa16-01f1bd6d6d58",
      "name": "Sticky Note38"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from n8n_chat_histories",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -752,
        1264
      ],
      "id": "0e50bdef-fcb9-4493-935d-d6a2eb7a6d3c",
      "name": "Postgres4",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -832,
        1104
      ],
      "typeVersion": 1,
      "id": "b4d8c66e-5333-4a9e-a247-3c6e33ae470c",
      "name": "Sticky Note39"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela chat",
        "height": 80,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -800,
        1120
      ],
      "typeVersion": 1,
      "id": "4da670d5-cd3e-4cbb-a78a-3e9038e6303e",
      "name": "Sticky Note40"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $json.sessionid }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -656,
        688
      ],
      "id": "a5205c75-0c64-40b5-a324-38101571173e",
      "name": "If1"
    },
    {
      "parameters": {
        "action": "generate"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -816,
        848
      ],
      "id": "44ebe13d-9949-44a4-8d72-f8e6c6b3141c",
      "name": "Gerar sessionID"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -416,
        672
      ],
      "id": "843f5bdc-9188-4b03-b869-6b22cbad9bdb",
      "name": "SessionID",
      "retryOnFail": true,
      "maxTries": 2,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d88c137-383f-4307-b3cc-1f6a560ea67b",
              "name": "mobile",
              "value": "={{  $json.body.data.key.remoteJid.replace(/\\D/g, '').replace(/^55(\\d{2})(\\d{8})$/, '55$19$2') }}",
              "type": "string"
            },
            {
              "id": "7e2f520e-4952-425b-82ca-792cc46680d4",
              "name": "mensagem",
              "value": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"message\"][\"conversation\"] }}",
              "type": "string"
            },
            {
              "id": "104b3cd0-d988-4c58-a175-2ca5465bf8c1",
              "name": "API_Elevenlabs",
              "value": "sk_f8b0546f2d0dbcbd3fa6510a3ec468d249dfdb7823311901",
              "type": "string"
            },
            {
              "id": "6065b018-8dc0-49db-8da9-f692f96e9c92",
              "name": "ID_Voz_Elevenlabs",
              "value": "=9BWtsMINqrJLrRacOk9x",
              "type": "string"
            },
            {
              "id": "4e2bdc18-93a5-4117-b94e-bcfd228a7379",
              "name": "Tempo de resposta picada",
              "value": "2",
              "type": "string"
            },
            {
              "id": "0d4a900f-af55-4472-824f-1d06a25de052",
              "name": "Instancia_Evolution",
              "value": "grdmad",
              "type": "string"
            },
            {
              "id": "9f80f8f6-a917-4af3-b77e-fa1f93d38cca",
              "name": "URL_Evolution",
              "value": "apiwp.aiagentautomate.com.br/",
              "type": "string"
            },
            {
              "id": "c6b307cf-ac0d-4273-8895-3c601b9b909b",
              "name": "KEY_Evo",
              "value": "B8493D438D72-4C34-97CC-4C9A4A257C0A",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "a63c7cc7-fd9c-47ae-8e76-6a1e44604125",
      "name": "Vari√°veis",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1296,
        688
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Vari√°veis').item.json.mobile }}",
        "messageData": "={{ $json.mensagem }}",
        "tail": true
      },
      "id": "fe8061b6-746a-4879-bdb1-eae059a8d56b",
      "name": "Redis",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        784,
        576
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "name": "dados_IA",
        "description": "Use esta ferramenta para buscar informa√ß√µes sobre projetos, materiais, e detalhes da GRD MAD para responder √†s perguntas dos clientes."
      },
      "id": "929c1555-b85f-4de9-83f3-a074b3e50045",
      "name": "dados_IA",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        3440,
        976
      ]
    },
    {
      "parameters": {
        "jsCode": "// Mant√©m s√≥ o primeiro item da lista\nreturn [items[0]];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1616,
        736
      ],
      "id": "782e1889-6374-4c28-bdd0-60d3bf4e9d49",
      "name": "Code1"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "grdmad",
        "remoteJid": "={{ $('Vari√°veis').item.json.body.data.key.remoteJid }}",
        "messageText": "={{ $json.output }}",
        "options_message": {
          "delay": 2000
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        4352,
        512
      ],
      "id": "2ea2268f-b6ba-491e-8518-08441082e1c4",
      "name": "Enviar texto",
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -848,
        688
      ],
      "id": "648136f3-8d6f-49f7-b952-3557067100a3",
      "name": "Get a row",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "tableId": "dados_cliente",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nome",
              "fieldValue": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"pushName\"] }}"
            },
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
            },
            {
              "fieldId": "sessionid",
              "fieldValue": "={{ $item(\"0\").$node[\"Gerar sessionID\"].json[\"data\"] }}"
            },
            {
              "fieldId": "created_at",
              "fieldValue": "={{ $now }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -416,
        848
      ],
      "id": "67c9009a-8ea2-4cc1-b7af-93ca7b6fe5c6",
      "name": "Create a row",
      "retryOnFail": true,
      "maxTries": 2,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from documentos",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -752,
        1984
      ],
      "id": "fb6604fc-2ae8-46c0-bb53-511d350eae3b",
      "name": "Execute a SQL query",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.listaMensagens }} {{ $json.imageUrl ? '[system_note: O usu√°rio enviou uma imagem, o link √©: ' + $json.imageUrl + ']' : '' }}",
        "options": {
          "systemMessage": "=Aqui est√° a data/hora atual: {{ $now.format('dd-MM-yyyy HH:mm') }}\nVis√£o Geral\n\nVoc√™ √© a Joanna da GRD MAD, agente orquestrador. Seu papel √© Orquestrar cliente e direcion√°-lo para a **Diretriz Ferramentas**: correta. Voc√™ nunca deve agendar reuni√µes ou enviar e-mails ‚Äî apenas acionar a ferramenta correta utilize sempre Diretriz abaixo.\n[NOTA DE SISTEMA: Se o usu√°rio enviou uma imagem, o link estar√° na conversa. Voc√™ DEVE passar este link para o agente de agendamento para que ele possa inclu√≠-lo nos detalhes do evento.]\n\n\n## Diretriz Roteiro da Conversa\n\n### 1. Sauda√ß√£o Inicial\n\nApresente-se e reforce a marca.\n\n\n## Instru√ß√µes de Atendimento\n- Sempre consultar a ferramenta `tools think`\n- Responder √† sauda√ß√£o apenas uma vez\n- Se o cliente apenas cumprimentar, Recepcione o cliente e pergunte:  \n  > \"Ol√°! üëã {{ $('Webhook').item.json.body.data.pushName }} Sou a Joanna, assistente da GRD MAD, tudo bem?  \n  > Estou aqui para te ajudar a transformar seu ambiente com m√≥veis planejados sob medida.  \n  > Me conta, o projeto √© para empresa B2B (Arquiteto, Marceneiro, Loja de Moveis Planejados) ou resid√™ncia B2C? üòä\n- Nunca repetir cumprimentos, palavras, perguntas ou frases prontas\n- Ser clara e objetiva: at√© 2 frases por resposta\n- Aguardar sempre a resposta do cliente antes de prosseguir\n- Nunca responder mais de uma vez √† mesma mensagem\n- Se n√£o entender, pedir para resumir em poucas palavras\n- S√≥ fazer novas perguntas se as anteriores forem respondidas\n- Sempre envie links: **https://www.instagram.com/grd_mad/** quando cliente solicitar imagens de projetos\n- Nunca enviar mensagens para o cliente ex: dados inserido na planilha\n## Exemplo:\n## Agente B2B\nArquiteto, Marceneiro, Loja de Moveis etc.\n\n## Agente B2B\nCasa, Apartamento ou Clinicas etc.\n\n\n## Diretriz Regras\n\n- Nunca fa√ßa agendamento, apenas direcione.\n- Sempre Usar Ferramentas disponiveis, nunca responder sem consultar Ferramentas\n- Evitar textos longos ou gen√©ricos de outros assuntos que n√£o forem sobre a GRD MAD\n- Fazer perguntas novas somente se necess√°rio.\n- N√£o repita palavras \"Perfeito, √≥timo etc.\"\n\n## Diretriz Ferramentas\n\n- **Agente B2B**: para projetos com (Arquiteto, Marceneiro, Loja de Moveis etc.)\n- **Agente B2C**: para projetos residenciais ou corporativo (Casa, Apartamento ou Clinicas etc.)\n- **Agente Agendamento B2B**: para Marcar Eventos, Buscar Eventos, Reagendar, Deletar Eventos, Enviar Email, Salvar dados Planilha Google\n- **Agente Agendamento B2C**: para Marcar Eventos, Buscar Eventos, Reagendar, Deletar Eventos, Enviar Email, Salvar dados Planilha Google\n- **dados_IA**:\nUse sempre essa ferramenta para obter quais quer informa√ß√µes da nossa empresa, pois essa tool √© seu banco de dados e sua memoria principal, use para enriquecer sua resposta ou quando precisar obter qual quer informa√ß√µes da nossa empresa ou produtos e informa√ß√µes gerais.\n- **Think**:\nUse sempre essa ferramenta, quando precisar da uma resposata mais precisa para o cliente, ou seja n√£o sabe a resposta ou tem d√∫vida, use essa ferramenta para tomar desi√ß√µes antes de enviar sua resposta final.\n\n\n## Diretriz Instru√ß√µes\n\nUse a ferramenta correta: \n- **Agente B2B**: para projetos com (Arquiteto, Marceneiro, Loja de Moveis etc.)\n- **Agente B2C**: para projetos residenciais ou corporativo (Casa, Apartamento ou Clinicas etc.)\n- **Agente Agendamento B2B**: para Marcar Eventos1, Buscar Eventos1, Reagendar1, Deletar Eventos1, Enviar Email B2B, Salvar dados Planilha Google Leads B2B\n- **Agente Agendamento B2C**: para Marcar Eventos, Buscar Eventos, Reagendar, Deletar Eventos, Enviar Email B2C, Salvar dados Planilha Google Leads B2C\n\n\n"
        }
      },
      "id": "02d30010-a9f5-4b51-9011-c4764bbb9617",
      "name": "SDR Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        2512,
        608
      ]
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {
          "topP": 0.5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2384,
        800
      ],
      "id": "c9f5970e-470c-4fe3-be59-2e2cf9e68285",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId }}",
        "contextWindowLength": 1000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        2704,
        2752
      ],
      "id": "84875ffb-0dcd-45a0-958b-05344de172b1",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId }}",
        "contextWindowLength": 1000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        1600,
        2336
      ],
      "id": "26608044-2dbd-4362-862f-58654fdcab5f",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId }}",
        "contextWindowLength": 1000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        2048,
        2352
      ],
      "id": "ec452f86-bc84-4f0a-9a96-91428189c35a",
      "name": "Postgres Chat Memory2",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId }}",
        "contextWindowLength": 1000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        3296,
        1904
      ],
      "id": "dd0e6a5d-2916-4423-8986-f47ddebc5fd2",
      "name": "Postgres Chat Memory3",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {
          "topP": 0.5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1904,
        2320
      ],
      "id": "8eabdfc8-42d6-4a99-a2db-097527ef7044",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {
          "topP": 0.5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        3184,
        1808
      ],
      "id": "03134867-1f1f-4a50-9fcf-d0a08880c34e",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Voce √© especialista em Agendamento de Reuni√µes Online",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "=Aqui est√° a data/hora atual: {{ $now.format('dd-MM-yyyy HH:mm') }}\n\nVoce √© Agente de Agendamento seu papel √© agendar reuni√µes somente online para o Agentes B2C` e\n\n## Regras\n- Ao receber os dados inserir na planilha do google Leads B2C\n- SEMPRE confirme os dados antes de confirmar agendamento reuni√£o online:\n  - Nome Completo, Telefone, Email, Tipo de imovel (Casa ou Apartamento), Qual comodo (Quarto, Sala, Cozinha, Banheiro, Escritorio ou Todos os Comodos ...), Cidade.\n- Sempre CONFIRMAR DATA E HORARIO ANTES DE REALIZAR O AGENDAMENTO\n- NUNCA ENVIAR ex: \"Os dados foram salvos na planilha, exceto o tipo de im√≥vel que n√£o foi informado\"\n- Fazer SOMENTE UM AGENDAMENTO n√£o Duplicar AGENDAMENTO\n\n## Regra da Imagem do Cliente:\n- O agente anterior pode ter lhe passado um link de imagem do cliente. Se este link existir, voc√™ DEVE pass√°-lo para a ferramenta `Marcar Eventos B2C` para que seja inclu√≠do na descri√ß√£o do evento.\n\n## Regra do Link da Reuni√£o e Mensagem de Benef√≠cios:\n- Ap√≥s a ferramenta `Marcar Eventos B2C` criar o agendamento, ela retornar√° o link da videochamada (`hangoutLink`).\n- Voc√™ **DEVE** enviar uma primeira mensagem ao cliente confirmando o agendamento e incluindo este `hangoutLink`.\n- Imediatamente ap√≥s, voc√™ **DEVE** enviar uma segunda mensagem, separada, contendo a lista dos \"10 Benef√≠cios dos M√≥veis Planejados\".\n\n\n## Instru√ß√µes de Agendamento\n- Disponibilizar 2 op√ß√µes de agendamento ex: manh√£ ou tarde.\n- Nunca repetir cumprimentos, perguntas ou frases prontas\n- Ser clara e objetiva: at√© 2 frases por resposta\n- Aguardar sempre a resposta do cliente antes de prosseguir\n- Nunca responder mais de uma vez √† mesma mensagem\n- Se n√£o entender, pedir para resumir em poucas palavras\n- S√≥ fazer novas perguntas se as anteriores forem respondidas\n- Sempre de 2 op√ß√µes de agendamento Manh√£ ou Tarde\n- Sempre enviar e-mail de confirma√ß√£o do Agendamento\n- Sempre inserir dados do cliente na Planilha do Google Leads B2C mesmo o cliente n√£o agendando a reuni√£o\n\n## Cancelameto\n\n- Antes de Cancelar solicite os dados e verifique na Ferramenta **Buscar Eventos** para **Deletar evento:** ou **Reagendar:**\n- Pergunte se o cliente quer realmente cancelar ou reagendar\n\n## Texto dos 10 Benef√≠cios (para enviar AP√ìS a confirma√ß√£o)\n*1. Aproveitamento Total do Espa√ßo:* Criamos solu√ß√µes inteligentes para cada cent√≠metro do seu ambiente.\n*2. Estilo Personalizado:* Seu m√≥vel, seu estilo. Escolha cores, materiais e design que s√£o a sua cara.\n*3. Qualidade Superior:* Usamos os melhores materiais para garantir m√≥veis que duram uma vida.\n*4. Funcionalidade Sob Medida:* Organizadores, divis√≥rias e solu√ß√µes que atendem exatamente √†s suas necessidades.\n*5. Valoriza√ß√£o do Im√≥vel:* Um projeto bem executado e de alta qualidade valoriza sua casa ou apartamento.\n*6. Acabamento Impec√°vel:* Cuidado em cada detalhe, da montagem √† instala√ß√£o.\n*7. Projeto √önico:* Seus m√≥veis ser√£o exclusivos, desenhados para voc√™.\n*8. Durabilidade Garantida:* Investimento que se paga com a longa vida √∫til das pe√ßas.\n*9. Instala√ß√£o Profissional:* Nossa equipe garante que tudo fique perfeito, sem dor de cabe√ßa para voc√™.\n*10. Custo-Benef√≠cio Inteligente:* Um investimento inicial que traz economia e satisfa√ß√£o a longo prazo."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        3344,
        1680
      ],
      "id": "93e8c171-bbf2-43f6-b66b-653711cd9266",
      "name": "Agente Agendamento B2C"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId }}",
        "contextWindowLength": 1000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        2544,
        1856
      ],
      "id": "bc09f02e-9210-4d6f-952e-8db27bd99bd4",
      "name": "Postgres Chat Memory4",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {
          "topP": 0.5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2400,
        1824
      ],
      "id": "83388be8-7b3a-4286-a7c0-8b64fa0315a5",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Voce √© especialista em Agendamento de Reuni√µes Online",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "=Aqui est√° a data/hora atual: {{ $now.format('dd-MM-yyyy HH:mm') }}\nVoce √© Agente de Agendamento seu papel √© agendar reuni√µes somente online para os `Agentes B2B`\n\n## Regras\n- Ao receber os dados inserir na planilha do google Leads B2B\n- SEMPRE confirme os dados antes de confirmar agendamento reuni√£o online\n  - Nome Completo, Telefone, Email, Empresa, Localiza√ß√£o (Cidade...)\n- Sempre CONFIRMAR DATA E HORARIO ANTES DE REALIZAR O AGENDAMENTO\n- NUNCA ENVIAR ex: \"Os dados foram salvos na planilha, exceto o tipo de im√≥vel que n√£o foi informado\"\n- Fazer SOMENTE UM AGENDAMENTO n√£o Duplicar AGENDAMENTO\n\n## Regra da Imagem do Cliente:\n- O agente anterior pode ter lhe passado um link de imagem do cliente. Se este link existir, voc√™ DEVE pass√°-lo para a ferramenta `Marcar Eventos B2B` para que seja inclu√≠do na descri√ß√£o do evento.\n\n## Regra do Link da Reuni√£o e Mensagem de Benef√≠cios:\n- Ap√≥s a ferramenta `Marcar Eventos B2B` criar o agendamento, ela retornar√° o link da videochamada (`hangoutLink`).\n- Voc√™ **DEVE** enviar uma primeira mensagem ao cliente confirmando o agendamento e incluindo este `hangoutLink`.\n- Imediatamente ap√≥s, voc√™ **DEVE** enviar uma segunda mensagem, separada, contendo a lista dos \"10 Benef√≠cios dos M√≥veis Planejados\".\n\n## Instru√ß√µes de Agendamento\n- disponibilizar 2 op√ß√µes de agendamento ex: manh√£ ou tarde.\n- Nunca repetir cumprimentos, palavras, perguntas ou frases prontas\n- Ser clara e objetiva: at√© 2 frases por resposta\n- Aguardar sempre a resposta do cliente antes de prosseguir\n- Nunca responder mais de uma vez √† mesma mensagem\n- Se n√£o entender, pedir para resumir em poucas palavras\n- S√≥ fazer novas perguntas se as anteriores forem respondidas\n- Sempre enviar e-mail de confirma√ß√£o do Agendamento\n- Sempre inserir dados do cliente na Planilha do Google Leads B2B mesmo o cliente n√£o agendando a reuni√£o\n\n## Cancelameto\n- Antes de Cancelar solicite os dados e verifique na Ferramenta **Buscar Eventos** para **Deletar evento:** ou **Reagendar:**\n- Pergunte se o cliente quer realmente cancelar ou reagendar\n\n## Texto dos 10 Benef√≠cios (para enviar AP√ìS a confirma√ß√£o)\n*1. Aproveitamento Total do Espa√ßo:* Criamos solu√ß√µes inteligentes para cada cent√≠metro do seu ambiente.\n*2. Estilo Personalizado:* Seu m√≥vel, seu estilo. Escolha cores, materiais e design que s√£o a sua cara.\n*3. Qualidade Superior:* Usamos os melhores materiais para garantir m√≥veis que duram uma vida.\n*4. Funcionalidade Sob Medida:* Organizadores, divis√≥rias e solu√ß√µes que atendem exatamente √†s suas necessidades.\n*5. Valoriza√ß√£o do Im√≥vel:* Um projeto bem executado e de alta qualidade valoriza sua casa ou apartamento.\n*6. Acabamento Impec√°vel:* Cuidado em cada detalhe, da montagem √† instala√ß√£o.\n*7. Projeto √önico:* Seus m√≥veis ser√£o exclusivos, desenhados para voc√™.\n*8. Durabilidade Garantida:* Investimento que se paga com a longa vida √∫til das pe√ßas.\n*9. Instala√ß√£o Profissional:* Nossa equipe garante que tudo fique perfeito, sem dor de cabe√ßa para voc√™.\n*10. Custo-Benef√≠cio Inteligente:* Um investimento inicial que traz economia e satisfa√ß√£o a longo prazo."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        2624,
        1664
      ],
      "id": "f95375bf-eabb-4af3-990b-5cff0ebf7c21",
      "name": "Agente Agendamento B2B"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para enviar um email para o cliente quando solicitado e tamb√©m para quando o agendamento for confirmado.",
        "sendTo": "={{ $fromAI(\"email\") }}",
        "subject": "={{ $fromAI(\"Titulo\",\"coloque aqui o titulo do email.\") }}",
        "emailType": "text",
        "message": "={{ $fromAI(\"texto\",\"coloque aqui os dados resumidos da conversa ou do agendamento, ex: nome, email, telefone, data e o link da reuni√£o online.\") }}",
        "options": {
          "appendAttribution": false,
          "ccList": "grdmadmoveis@gmail.com",
          "senderName": "Grd Mad",
          "replyTo": "grdmadmoveis@gmail.com"
        }
      },
      "id": "e5c989b9-15b4-4af1-8aa8-de2f982ecd1a",
      "name": "Enviar Email B2C",
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        4000,
        2240
      ],
      "webhookId": "2d6b5a1d-a613-4a9d-b7e5-f032cd50d7c2",
      "credentials": {
        "gmailOAuth2": {
          "id": "Ad3lKliEV0osSxNm",
          "name": "Gmail GrdMad"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para enviar um email para o cliente quando solicitado e tamb√©m para quando o agendamento for confirmado.",
        "sendTo": "={{ $fromAI(\"email\") }}",
        "subject": "={{ $fromAI(\"Titulo\",\"coloque aqui o titulo do email.\") }}",
        "emailType": "text",
        "message": "={{ $fromAI(\"texto\",\"coloque aqui os dados resumidos da conversa ou do agendamento, ex: nome, email, telefone, data e o link da reuni√£o online.\") }}",
        "options": {
          "appendAttribution": false,
          "ccList": "grdmadmoveis@gmail.com",
          "senderName": "Grd Mad",
          "replyTo": "grdmadmoveis@gmail.com"
        }
      },
      "id": "3d3d9081-3f3a-48ac-8bc3-5810b081fef7",
      "name": "Enviar Email B2B",
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        3056,
        2240
      ],
      "webhookId": "a5c7311c-fe1e-4aa6-9ab2-3af02dbf2d85",
      "credentials": {
        "gmailOAuth2": {
          "id": "Ad3lKliEV0osSxNm",
          "name": "Gmail GrdMad"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Voce √© um Agente B2B para projetos corporativos empresa, escrit√≥rio, loja, cl√≠nica etc.",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "=Aqui est√° a data/hora atual: {{ $now.format('dd-MM-yyyy HH:mm') }}\n\n## Identidade e Miss√£o do Agente B2B\n\n**Nome:** Voc√™ √© Especialista em atendimento de projetos corporativos da GRD MAD.  \n**Tom:** Consultivo, profissional e focado em resultados de neg√≥cio.  \n**Miss√£o Principal:** Qualificar leads corporativos, entender o contexto inicial e direcionar para uma **reuni√£o online com um especialista** da GRD MAD.  \n\n  Voc√™ **N√ÉO agenda reuni√µes** diretamente.  \n  Se o cliente pedir or√ßamento direto ou discuss√µes profundas, sempre indique que a reuni√£o online √© essencial.  \n\n---\n\n## Roteiro da Conversa\n\n- Apresenta√ß√£o e Contexto  \n  - Continue a conversa da Joanna validando dados j√° recebidos (Nome Completo, E-mail, Telefone, Empresa e Cidade).  \n  - Fa√ßa perguntas simples para enriquecer a passagem de bast√£o ao especialista:\n  - Fa√ßa perguntas uma por vez para entender a demanda:\n\n**Exemplo:**  \n\"Ol√°, [Nome do Cliente]! Sou especialista em atendimento de projetos corporativos da GRD MAD, respons√°vel pelo atendimento corporativo. Recebi seu contato e estou aqui para entender melhor seu projeto. Para isso, √© importante marcarmos uma reuni√£o online, onde podemos mostrar solu√ß√µes personalizadas para o seu neg√≥cio. Posso te explicar por que essa reuni√£o √© t√£o importante?\"\n\n## Instru√ß√µes de Atendimento\n- Nunca repetir cumprimentos, perguntas ou frases prontas\n- Ser clara e objetiva: at√© 2 frases por resposta\n- Aguardar sempre a resposta do cliente antes de prosseguir\n- Nunca responder mais de uma vez √† mesma mensagem\n- Se n√£o entender, pedir para resumir em poucas palavras\n- S√≥ fazer novas perguntas se as anteriores forem respondidas\n- Nunca repetir palavras \"Perfeito, √ìtimo, etc.\"\n- Perguntar somente uma vez se o cliente tem planta ou metragem do espa√ßo.\n- Nunca enviar mensagens para o cliente ex: dados inserido na planilha\n\n---\n\n### 2. Direcionamento para Reuni√£o Online  \nExplique sempre o valor da reuni√£o: personaliza√ß√£o, precis√£o do or√ßamento, demonstra√ß√£o de portf√≥lio.  \n\n**Exemplo (obje√ß√£o ‚Äì or√ßamento):**  \n\"Compreendo que voc√™ queira um or√ßamento r√°pido üëç. Mas, para que ele seja realmente justo e adequado ao seu neg√≥cio, precisamos alinhar alguns detalhes do projeto. Uma breve reuni√£o online de 20-30 minutos √© a forma mais eficiente de garantir isso. Posso te conectar com nosso especialista para combinar o melhor hor√°rio?\"\n\n\n**Exemplo (ap√≥s engajamento):**\n\"Excelente! Voc√™ teria a planta do im√≥vel? Se sim, pode me enviar como imagem ou PDF aqui no chat üìé. Isso j√° ajuda nosso especialista a adiantar a an√°lise antes da conversa com voc√™.\"\n---\n\n### 3. Qualifica√ß√£o Inicial  \nFa√ßa perguntas-chave antes da reuni√£o para enriquecer o contato do especialista:  \n- Qual o tipo de ambiente corporativo? (escrit√≥rio, cl√≠nica, loja, restaurante etc.)  \n- Qual a dimens√£o aproximada ou quantidade de ambientes?  \n- Existe alguma previs√£o de prazo para execu√ß√£o?  \n- Utiliza Promob?  \n\n  \n\n---\n\n### 4. Encerramento Consultivo  \n- Solicitar qual melhor data e hora para agendamento.  \n- Nunca finalize como se fosse transfer√™ncia fria.  \n- Prepare o cliente para o pr√≥ximo passo (reuni√£o com especialista).\n\n---\nNUNCA USE \nExemplo:\n\n\n## Regras de Ouro\n- Regra: anote/colete essas informa√ß√µes, mas **n√£o entre em detalhes t√©cnicos** ‚Üí isso √© responsabilidade do na reuni√£o online especialista. \n- N√£o agende reuni√µes ‚Äî apenas qualifique e direcione.  \n- Refor√ßo consultivo: or√ßamento ou discuss√£o profunda ‚Üí sempre via reuni√£o online.  \n- Coleta inteligente: registre informa√ß√µes iniciais (ambiente, porte, prazo).  \n- Experi√™ncia cont√≠nua: o cliente n√£o deve sentir que est√° sendo ‚Äúpassado para outro setor‚Äù, mas sim que est√° sendo preparado para o pr√≥ximo n√≠vel de atendimento. - NUNCA ENVIAR ex: \"Os dados foram salvos na planilha, exceto o tipo de im√≥vel que n√£o foi informado\"\n\n---\n\n## Ferramentas B2B\n- Nenhuma ferramenta de agendamento (Marcar_Eventos_B2C, Buscar_Eventos_B2C etc. ‚Üí n√£o usar).\n\n- Apenas pode usar Gmail_B2B se precisar confirmar recebimento de planta ou enviar informa√ß√µes b√°sicas antes da reuni√£o.\n\n\n\n\n\n\n"
        }
      },
      "id": "d2b6c996-442b-4a9d-bb75-f36e50673ea8",
      "name": "Agente B2B",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1520,
        2128
      ]
    },
    {
      "parameters": {
        "toolDescription": "Voce √© um Agente B2C para projetos residenciais casa, apartamento etc.",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "=Aqui est√° a data/hora atual: {{ $now.format('dd-MM-yyyy HH:mm') }}\n## Identidade e Miss√£o do Agente B2C\n\n## Miss√£o Principal\n\nSua miss√£o √© qualificar o lead, entender a necessidade dele e, se houver interesse, **agendar uma reuni√£o online** com um especialista da GRD MAD.\nNome: Voc√™ √© o  de projetos residenciais da GRD MAD.\nTom: Emp√°tico, acolhedor e criativo.\nMiss√£o Principal: Qualificar leads de projetos residenciais.\nEntender os sonhos do cliente para seu lar.\nSolicitar a planta do im√≥vel (imagem ou PDF) para enriquecer o contato apenas uma vez.\nSe o cliente pedir or√ßamento direto ou iniciar conversa mais profunda, sempre direcionar para uma reuni√£o online com o especialista.\n\nVoc√™ n√£o agenda reuni√µes.\n\n## Roteiro da Conversa\n1. Apresenta√ß√£o e Conex√£o\n\nContinue a conversa da Joanna validando dados j√° recebidos (Nome, E-mail, Telefone).\n\nFa√ßa perguntas simples para enriquecer a passagem de bast√£o ao especialista:\nFa√ßa perguntas uma por vez para entender a demanda:\n\nExemplo:\n\"Ol√°, [Nome do Cliente]! Que bom falar com voc√™! Sou do time de atendimento da GRD MAD e estou aqui para entender um pouco mais sobre o seu projeto residencial. \nAssim conseguimos direcionar voc√™ da melhor forma para que tudo saia do jeito que sonha ‚ú®.\"\n\n## Instru√ß√µes de Atendimento\n- Nunca repetir cumprimentos, perguntas ou frases prontas\n- Ser clara e objetiva: at√© 2 frases por resposta\n- Aguardar sempre a resposta do cliente antes de prosseguir\n- Nunca responder mais de uma vez √† mesma mensagem\n- Se n√£o entender, pedir para resumir em poucas palavras\n- S√≥ fazer novas perguntas se as anteriores forem respondidas\n\n\n## Qualifica√ß√£o Inicial\n\n> **Perguntas Essenciais:**\n1.  \"Para come√ßar, qual ambiente voc√™ deseja planejar? (cozinha, quarto, sala, closet, escrit√≥rio...)\"\n2.  \"Voc√™ j√° possui a planta do local ou as medidas?\"\n3.  \"Legal! E em qual cidade e bairro o im√≥vel est√° localizado?\"\n- O projeto √© para casa ou apartamento?\n- Quais c√¥modos voc√™ gostaria de planejar primeiro?\n- Tem algum estilo preferido (moderno, cl√°ssico, sofisticado)?\n\n## Encerramento Consultivo\n\n- N√£o finalize antes de solicitar qual melhor data e hora para agendamento\n- N√£o finalize como ‚Äútransfer√™ncia fria‚Äù.\n- Prepare o cliente para o pr√≥ximo passo (reuni√£o Online).\n\nExemplo:\n\"Perfeito, [Nome]! Vamos juntos conversar e alinhar pontos importantes sobre o seu projeto em uma reuni√£o online, entender todos os detalhes e podemos apresentar ideias personalizadas para o seu lar üè°.\"\n\n\nSe o cliente pedir or√ßamento direto, contorne sempre para a reuni√£o online.\n\nExemplo (obje√ß√£o ‚Äì or√ßamento):\n\"Entendo sua ansiedade pelo or√ßamento! Para que ele seja fiel ao seu sonho e ao seu bolso, precisamos conhecer os detalhes do seu espa√ßo. Uma breve reuni√£o online √© a melhor forma de garantir um projeto perfeito. Posso te conectar com nosso especialista para alinhar isso?\"\n\nExemplo (ap√≥s engajamento):\n\"Excelente! Voc√™ teria a planta do im√≥vel? Se sim, pode me enviar como imagem ou PDF aqui no chat üìé. Isso j√° ajuda nosso especialista a adiantar a an√°lise antes da conversa com voc√™.\"\n\nNUNCA USE \nExemplo:\n\"Excelente, [Nome]! Vou preparar tudo para que nosso especialista entre em contato com voc√™ e alinhe todos os detalhes do seu projeto cl√°ssico para a casa em Moema.\"\n\n## Regras de Ouro\n\n- Voc√™ n√£o agenda reuni√µes.\n- Or√ßamento e conversas aprofundadas ‚Üí sempre indicar reuni√£o online como pr√≥ximo passo.\n- Solicite e registre a planta do im√≥vel se o cliente tiver apenas uma vez.\n- O cliente deve sentir que voc√™ est√° preparando o caminho para o especialista, n√£o apenas passando contato.\n\n\n## Ferramentas\n\n- Nenhuma ferramenta de agendamento (Marcar_Eventos_B2C, Buscar_Eventos_B2C etc. ‚Üí n√£o usar).\n- Apenas pode usar Gmail_B2C se precisar confirmar recebimento de planta ou enviar informa√ß√µes b√°sicas antes da reuni√£o.\n"
        }
      },
      "id": "31d3ac3c-a2f4-48f5-897e-6475c57fbdf6",
      "name": "Agente B2C",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1952,
        2144
      ]
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {
          "topP": 0.5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1456,
        2304
      ],
      "id": "d0353ba7-e164-4c62-ae7b-ff7bb6bc4c8c",
      "name": "OpenAI Chat Model5",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Append or update row in sheet in Google Sheets",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1QOxeeN2NHkKQQWQuhrW3xJ_NPZ1pHSwl_Qr9d8IGzPE",
          "mode": "list",
          "cachedResultName": "Leads B2B",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1QOxeeN2NHkKQQWQuhrW3xJ_NPZ1pHSwl_Qr9d8IGzPE/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "P√°gina1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1QOxeeN2NHkKQQWQuhrW3xJ_NPZ1pHSwl_Qr9d8IGzPE/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Telefone": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Telefone__using_to_match_', ``, 'string') }}",
            "ID": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('ID', ``, 'string') }}",
            "Nome Completo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Nome_Completo', ``, 'string') }}",
            "Email": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Email', ``, 'string') }}",
            "Empresa": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Empresa', ``, 'string') }}",
            "Cidade": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Cidade', ``, 'string') }}",
            "Data primeiro contato": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Data_primeiro_contato', ``, 'string') }}",
            "Ultimo Contato": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Ultimo_Contato', ``, 'string') }}",
            "Data do Agendamento": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Data_do_Agendamento', ``, 'string') }}"
          },
          "matchingColumns": [
            "Telefone"
          ],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Nome Completo",
              "displayName": "Nome Completo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Telefone",
              "displayName": "Telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Empresa",
              "displayName": "Empresa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Cidade",
              "displayName": "Cidade",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Data primeiro contato",
              "displayName": "Data primeiro contato",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Ultimo Contato",
              "displayName": "Ultimo Contato",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Data do Agendamento",
              "displayName": "Data do Agendamento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        1728,
        2016
      ],
      "id": "a3224b77-dbae-4531-920c-fb93e8b7af33",
      "name": "Leads B2B3",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "WZzhWxDPS09846pJ",
          "name": "Google Sheets aiagent automate"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Append or update row in sheet in Google Sheets",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1c8DDHwowpQjuy00nLDN3F0dF64QWcz1cdAq2_blPzAY",
          "mode": "list",
          "cachedResultName": "Leads B2B",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1c8DDHwowpQjuy00nLDN3F0dF64QWcz1cdAq2_blPzAY/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "P√°gina1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1c8DDHwowpQjuy00nLDN3F0dF64QWcz1cdAq2_blPzAY/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "ID": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('ID__using_to_match_', ``, 'string') }}",
            "Nome Completo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Nome_Completo', ``, 'string') }}",
            "Telefone": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Telefone', ``, 'string') }}",
            "Email": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Email', ``, 'string') }}",
            "Empresa": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Empresa', ``, 'string') }}",
            "Cidade": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Cidade', ``, 'string') }}",
            "Data primeiro contato": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Data_primeiro_contato', ``, 'string') }}",
            "Ultimo Contato": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Ultimo_Contato', ``, 'string') }}",
            "Data do Agendamento": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Data_do_Agendamento', ``, 'string') }}"
          },
          "matchingColumns": [
            "ID"
          ],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Nome Completo",
              "displayName": "Nome Completo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Telefone",
              "displayName": "Telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Empresa",
              "displayName": "Empresa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Cidade",
              "displayName": "Cidade",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Data primeiro contato",
              "displayName": "Data primeiro contato",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Ultimo Contato",
              "displayName": "Ultimo Contato",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Data do Agendamento",
              "displayName": "Data do Agendamento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        3088,
        2032
      ],
      "id": "f12fe32b-00d8-42cb-b5d8-03e04651eeb0",
      "name": "Leads B2B",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CrTErpiGn7MJ9o9m",
          "name": "Google Sheets GrdMAd"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Append or update row in sheet in Google Sheets",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "=https://docs.google.com/spreadsheets/d/1_7rqT_Tg-ATjIz6fsuEdv26HfDVPWCf6lGMqag0zzqw/edit?usp=sharing",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "P√°gina1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1_7rqT_Tg-ATjIz6fsuEdv26HfDVPWCf6lGMqag0zzqw/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Nome": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Nome', ``, 'string') }}",
            "Telefone": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Telefone', ``, 'string') }}",
            "Email": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Email', ``, 'string') }}",
            "Tipo de imovel": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tipo_de_imovel', ``, 'string') }}",
            "Qual comodo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Qual_comodo', ``, 'string') }}",
            "Cidade": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Cidade', ``, 'string') }}",
            "Data primeiro contato": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Data_primeiro_contato', ``, 'string') }}",
            "Estilo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Estilo', ``, 'string') }}",
            "ID": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('ID__using_to_match_', ``, 'string') }}",
            "Ultimo Contato": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Ultimo_Contato', ``, 'string') }}",
            "Data do Agendamento": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Data_do_Agendamento', ``, 'string') }}"
          },
          "matchingColumns": [
            "ID"
          ],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Nome",
              "displayName": "Nome",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Telefone",
              "displayName": "Telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Tipo de imovel",
              "displayName": "Tipo de imovel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Qual comodo",
              "displayName": "Qual comodo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Estilo",
              "displayName": "Estilo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Cidade",
              "displayName": "Cidade",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Data primeiro contato",
              "displayName": "Data primeiro contato",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Ultimo Contato",
              "displayName": "Ultimo Contato",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Data do Agendamento",
              "displayName": "Data do Agendamento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        2192,
        2016
      ],
      "id": "fb0b92c9-7074-47d8-8eaf-da8d86d90744",
      "name": "Leads B2C2",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "WZzhWxDPS09846pJ",
          "name": "Google Sheets aiagent automate"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Append or update row in sheet in Google Sheets",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1Nj5JlcCnV7jYeNYEw7_6etq46C_shvkF7H26fb6psvw",
          "mode": "list",
          "cachedResultName": "Leads B2C",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Nj5JlcCnV7jYeNYEw7_6etq46C_shvkF7H26fb6psvw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "P√°gina1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Nj5JlcCnV7jYeNYEw7_6etq46C_shvkF7H26fb6psvw/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Nome": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Nome', ``, 'string') }}",
            "Telefone": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Telefone', ``, 'string') }}",
            "Email": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Email', ``, 'string') }}",
            "Tipo de imovel": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tipo_de_imovel', ``, 'string') }}",
            "Qual comodo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Qual_comodo', ``, 'string') }}",
            "Cidade": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Cidade', ``, 'string') }}",
            "Data primeiro contato": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Data_primeiro_contato', ``, 'string') }}",
            "Estilo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Estilo', ``, 'string') }}",
            "ID": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('ID__using_to_match_', ``, 'string') }}",
            "Ultimo Contato": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Ultimo_Contato', ``, 'string') }}",
            "Data do Agendamento": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Data_do_Agendamento', ``, 'string') }}"
          },
          "matchingColumns": [
            "ID"
          ],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Nome",
              "displayName": "Nome",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Telefone",
              "displayName": "Telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Tipo de imovel",
              "displayName": "Tipo de imovel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Qual comodo",
              "displayName": "Qual comodo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Estilo",
              "displayName": "Estilo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Cidade",
              "displayName": "Cidade",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Data primeiro contato",
              "displayName": "Data primeiro contato",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Ultimo Contato",
              "displayName": "Ultimo Contato",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Data do Agendamento",
              "displayName": "Data do Agendamento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        4096,
        2112
      ],
      "id": "d454294b-39de-4508-9e2f-2470b5e23d3a",
      "name": "Leads B2C",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CrTErpiGn7MJ9o9m",
          "name": "Google Sheets GrdMAd"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('LLM Usage Webhook').json.webhookUrl || 'https://n8n.aiagentautomate.com.br/webhook/llm-usage-webhook' }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "workflow_id",
              "value": "={{ $workflow.id }}"
            },
            {
              "name": "workflow_name",
              "value": "={{ $workflow.name }}"
            },
            {
              "name": "run_id",
              "value": "={{ $runId }}"
            },
            {
              "name": "node_name",
              "value": "OpenAI Chat Model"
            },
            {
              "name": "provider",
              "value": "openai"
            },
            {
              "name": "model",
              "value": "gpt-4o-mini"
            },
            {
              "name": "input_tokens",
              "value": "={{ $('OpenAI Chat Model').json.usage?.prompt_tokens || 0 }}"
            },
            {
              "name": "output_tokens",
              "value": "={{ $('OpenAI Chat Model').json.usage?.completion_tokens || 0 }}"
            },
            {
              "name": "total_tokens",
              "value": "={{ $('OpenAI Chat Model').json.usage?.total_tokens || 0 }}"
            },
            {
              "name": "latency_ms",
              "value": "={{ $('OpenAI Chat Model').executionTime || 0 }}"
            },
            {
              "name": "status",
              "value": "success"
            },
            {
              "name": "user_id",
              "value": "={{ $('Vari√É¬°veis')?.json?.mobile || 'system' }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true
            }
          }
        }
      },
      "id": "e1dbedb5-9cbd-4d58-a0a2-2945424f364e",
      "name": "Monitor LLM Usage",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3856,
        1152
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "9cd24c62080c6363be09c04b97c2969de0e6e4addfda19ddb03824796d10bcd8@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2C"
        },
        "eventId": "={{ $fromAI(\"deleteEvent\") }} ",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        3856,
        2240
      ],
      "id": "f47a7f6f-1a9c-4b50-904b-dccfc6325e57",
      "name": "Deletar Evento B2C",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Create an event in Google Calendar",
        "calendar": {
          "__rl": true,
          "value": "9cd24c62080c6363be09c04b97c2969de0e6e4addfda19ddb03824796d10bcd8@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2C"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "color": "2",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "=Nome Completo: {{ $fromAI(\"nome_cliente\", \"Pe√ßa o nome completo do cliente.\") }}\\nEmail: {{ $fromAI(\"email_cliente\", \"Pe√ßa o email do cliente.\") }}\\nTelefone: {{ $fromAI(\"telefone_cliente\", \"Pe√ßa o telefone com DDD do cliente.\") }}\\nLink da Imagem: {{ $fromAI(\"imageUrl\", \"Se o cliente enviou uma imagem, insira o link aqui.\") }}\\n\\nObserva√ß√£o: {{ $fromAI(\"planta_imovel\", \"Pergunte se o cliente tem a planta do im√≥vel e anote a resposta aqui.\") }}\\n---\\nAn√°lise Preliminar (preenchido pela IA):\n{{ $fromAI(\"preenchimento\",\"Voc√™ n√£o ir√° solicitar isso ao lead, voc√™ ir√° preencher com a sua opini√£o em rela√ß√£o ao lead ap√≥s a finaliza√ß√£o da conversa. Voc√™ dever√° preencher cada ponto seguindo as orienta√ß√µes entre *. An√°lise do lead: 1. Situa√ß√£o Atual e Necessidades Situa√ß√£o atual: Descri√ß√£o resumida dos desafios, problemas ou dores que o lead enfrenta atualmente, conforme mencionado na conversa. Exemplo: dificuldades de escalabilidade, inefici√™ncia operacional, etc. Necessidades: Identificar as necessidades claras mencionadas pelo lead e aquelas impl√≠citas. Necessidades expl√≠citas s√£o aquelas que o lead mencionou diretamente. Necessidades impl√≠citas s√£o percebidas atrav√©s de comportamentos ou informa√ß√µes adicionais, mas n√£o mencionadas diretamente. 2. Obje√ß√µes e Resist√™ncias Obje√ß√µes: Listar as principais obje√ß√µes que o lead levantou durante a conversa. Exemplo: preocupa√ß√£o com o pre√ßo, funcionalidades do produto, adequa√ß√£o ao momento da empresa, etc. N√≠vel de resist√™ncia: Avaliar o qu√£o resistente o lead se mostrou em rela√ß√£o √† proposta. Pode ser classificado como alta, m√©dia ou baixa resist√™ncia, com base na quantidade e na intensidade das obje√ß√µes levantadas. Motivos por tr√°s das obje√ß√µes: Analisar os motivos que podem estar por tr√°s das obje√ß√µes. Exemplo: inseguran√ßa financeira, falta de entendimento sobre o valor da solu√ß√£o, indecis√£o sobre o momento certo para implementar a solu√ß√£o. 3. Potencial de Convers√£o Fit com o produto/servi√ßo: Avaliar se o lead est√° alinhado com o que a empresa oferece, considerando as necessidades que ele mencionou, o or√ßamento dispon√≠vel e o timing para tomar a decis√£o de compra. Probabilidade de convers√£o: Estimar, com base na an√°lise, a chance de o lead converter em cliente. Usar alta, m√©dia ou baixa probabilidade, dependendo da adequa√ß√£o do lead ao produto e do n√≠vel de resist√™ncia apresentado.\") }}",
          "sendUpdates": "all",
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        3280,
        2240
      ],
      "id": "c67ed0b0-3fca-45ca-83f1-be3ce1b48623",
      "name": "Marcar Eventos B2C",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Create an event in Google Calendar",
        "calendar": {
          "__rl": true,
          "value": "9cd24c62080c6363be09c04b97c2969de0e6e4addfda19ddb03824796d10bcd8@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2C"
        },
        "start": "={{ $fromAI(\"statTime\") }}",
        "end": "={{ $fromAI(\"endTime\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI(\"attendees\") }}"
          ],
          "color": "1",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $fromAI(\"preenchimento\",\"Voc√™ n√£o ir√° solicitar isso ao lead, voc√™ ir√° preencher com a sua opini√£o em rela√ß√£o ao lead ap√≥s a finaliza√ß√£o da conversa. Voc√™ dever√° preencher cada ponto seguindo as orienta√ß√µes entre *. An√°lise do lead: 1. Situa√ß√£o Atual e Necessidades Situa√ß√£o atual: Descri√ß√£o resumida dos desafios, problemas ou dores que o lead enfrenta atualmente, conforme mencionado na conversa. Exemplo: dificuldades de escalabilidade, inefici√™ncia operacional, etc. Necessidades: Identificar as necessidades claras mencionadas pelo lead e aquelas impl√≠citas. Necessidades expl√≠citas s√£o aquelas que o lead mencionou diretamente. Necessidades impl√≠citas s√£o percebidas atrav√©s de comportamentos ou informa√ß√µes adicionais, mas n√£o mencionadas diretamente. 2. Obje√ß√µes e Resist√™ncias Obje√ß√µes: Listar as principais obje√ß√µes que o lead levantou durante a conversa. Exemplo: preocupa√ß√£o com o pre√ßo, funcionalidades do produto, adequa√ß√£o ao momento da empresa, etc. N√≠vel de resist√™ncia: Avaliar o qu√£o resistente o lead se mostrou em rela√ß√£o √† proposta. Pode ser classificado como alta, m√©dia ou baixa resist√™ncia, com base na quantidade e na intensidade das obje√ß√µes levantadas. Motivos por tr√°s das obje√ß√µes: Analisar os motivos que podem estar por tr√°s das obje√ß√µes. Exemplo: inseguran√ßa financeira, falta de entendimento sobre o valor da solu√ß√£o, indecis√£o sobre o momento certo para implementar a solu√ß√£o. 3. Potencial de Convers√£o Fit com o produto/servi√ßo: Avaliar se o lead est√° alinhado com o que a empresa oferece, considerando as necessidades que ele mencionou, o or√ßamento dispon√≠vel e o timing para tomar a decis√£o de compra. Probabilidade de convers√£o: Estimar, com base na an√°lise, a chance de o lead converter em cliente. Usar alta, m√©dia ou baixa probabilidade, dependendo da adequa√ß√£o do lead ao produto e do n√≠vel de resist√™ncia apresentado.\") }}",
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        3424,
        2240
      ],
      "id": "b83c2b58-8e95-4948-861e-5904af8d9736",
      "name": "Evento participante B2C",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "9cd24c62080c6363be09c04b97c2969de0e6e4addfda19ddb03824796d10bcd8@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2C"
        },
        "returnAll": true,
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', ``, 'string') }}",
        "options": {
          "orderBy": "startTime",
          "recurringEventHandling": "expand"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        3552,
        2240
      ],
      "id": "687cdced-c0ce-4abe-8583-8e5c95f15e31",
      "name": "Buscar Eventos B2C",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Update an event in Google Calendar",
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "9cd24c62080c6363be09c04b97c2969de0e6e4addfda19ddb03824796d10bcd8@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2C"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "updateFields": {
          "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
          "sendUpdates": "all",
          "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        3712,
        2240
      ],
      "id": "5c81f3e0-a02e-4502-b6b1-3e195d885c2e",
      "name": "Reagendar B2C",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "95d149106e3cb0e6f496671aa7755f0385fca415f570b5d37b99d676a5a27347@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2B"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "color": "2",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "=Nome Completo: {{ $fromAI(\"nome_cliente\", \"Pe√ßa o nome completo do cliente.\") }}\\nEmail: {{ $fromAI(\"email_cliente\", \"Pe√ßa o email do cliente.\") }}\\nTelefone: {{ $fromAI(\"telefone_cliente\", \"Pe√ßa o telefone com DDD do cliente.\") }}\\nLink da Imagem: {{ $fromAI(\"imageUrl\", \"Se o cliente enviou uma imagem, insira o link aqui.\") }}\\n\\nObserva√ß√£o: {{ $fromAI(\"planta_imovel\", \"Pergunte se o cliente tem a planta do im√≥vel e anote a resposta aqui.\") }}\\n---\\nAn√°lise Preliminar (preenchido pela IA):\n{{ $fromAI(\"preenchimento\",\"Voc√™ n√£o ir√° solicitar isso ao lead, voc√™ ir√° preencher com a sua opini√£o em rela√ß√£o ao lead ap√≥s a finaliza√ß√£o da conversa. Voc√™ dever√° preencher cada ponto seguindo as orienta√ß√µes entre *. An√°lise do lead: 1. Situa√ß√£o Atual e Necessidades Situa√ß√£o atual: Descri√ß√£o resumida dos desafios, problemas ou dores que o lead enfrenta atualmente, conforme mencionado na conversa. Exemplo: dificuldades de escalabilidade, inefici√™ncia operacional, etc. Necessidades: Identificar as necessidades claras mencionadas pelo lead e aquelas impl√≠citas. Necessidades expl√≠citas s√£o aquelas que o lead mencionou diretamente. Necessidades impl√≠citas s√£o percebidas atrav√©s de comportamentos ou informa√ß√µes adicionais, mas n√£o mencionadas diretamente. 2. Obje√ß√µes e Resist√™ncias Obje√ß√µes: Listar as principais obje√ß√µes que o lead levantou durante a conversa. Exemplo: preocupa√ß√£o com o pre√ßo, funcionalidades do produto, adequa√ß√£o ao momento da empresa, etc. N√≠vel de resist√™ncia: Avaliar o qu√£o resistente o lead se mostrou em rela√ß√£o √† proposta. Pode ser classificado como alta, m√©dia ou baixa resist√™ncia, com base na quantidade e na intensidade das obje√ß√µes levantadas. Motivos por tr√°s das obje√ß√µes: Analisar os motivos que podem estar por tr√°s das obje√ß√µes. Exemplo: inseguran√ßa financeira, falta de entendimento sobre o valor da solu√ß√£o, indecis√£o sobre o momento certo para implementar a solu√ß√£o. 3. Potencial de Convers√£o Fit com o produto/servi√ßo: Avaliar se o lead est√° alinhado com o que a empresa oferece, considerando as necessidades que ele mencionou, o or√ßamento dispon√≠vel e o timing para tomar a decis√£o de compra. Probabilidade de convers√£o: Estimar, com base na an√°lise, a chance de o lead converter em cliente. Usar alta, m√©dia ou baixa probabilidade, dependendo da adequa√ß√£o do lead ao produto e do n√≠vel de resist√™ncia apresentado.\") }}",
          "sendUpdates": "all",
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        2320,
        2224
      ],
      "id": "a63693e8-87f5-4d9a-963e-0242cdde9f07",
      "name": "Marcar Eventos B2B",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "95d149106e3cb0e6f496671aa7755f0385fca415f570b5d37b99d676a5a27347@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2B"
        },
        "start": "={{ $fromAI(\"statTime\") }}",
        "end": "={{ $fromAI(\"endTime\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI(\"attendees\") }}"
          ],
          "color": "1",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $fromAI(\"preenchimento\",\"Voc√™ n√£o ir√° solicitar isso ao lead, voc√™ ir√° preencher com a sua opini√£o em rela√ß√£o ao lead ap√≥s a finaliza√ß√£o da conversa. Voc√™ dever√° preencher cada ponto seguindo as orienta√ß√µes entre *. An√°lise do lead: 1. Situa√ß√£o Atual e Necessidades Situa√ß√£o atual: Descri√ß√£o resumida dos desafios, problemas ou dores que o lead enfrenta atualmente, conforme mencionado na conversa. Exemplo: dificuldades de escalabilidade, inefici√™ncia operacional, etc. Necessidades: Identificar as necessidades claras mencionadas pelo lead e aquelas impl√≠citas. Necessidades expl√≠citas s√£o aquelas que o lead mencionou diretamente. Necessidades impl√≠citas s√£o percebidas atrav√©s de comportamentos ou informa√ß√µes adicionais, mas n√£o mencionadas diretamente. 2. Obje√ß√µes e Resist√™ncias Obje√ß√µes: Listar as principais obje√ß√µes que o lead levantou durante a conversa. Exemplo: preocupa√ß√£o com o pre√ßo, funcionalidades do produto, adequa√ß√£o ao momento da empresa, etc. N√≠vel de resist√™ncia: Avaliar o qu√£o resistente o lead se mostrou em rela√ß√£o √† proposta. Pode ser classificado como alta, m√©dia ou baixa resist√™ncia, com base na quantidade e na intensidade das obje√ß√µes levantadas. Motivos por tr√°s das obje√ß√µes: Analisar os motivos que podem estar por tr√°s das obje√ß√µes. Exemplo: inseguran√ßa financeira, falta de entendimento sobre o valor da solu√ß√£o, indecis√£o sobre o momento certo para implementar a solu√ß√£o. 3. Potencial de Convers√£o Fit com o produto/servi√ßo: Avaliar se o lead est√° alinhado com o que a empresa oferece, considerando as necessidades que ele mencionou, o or√ßamento dispon√≠vel e o timing para tomar a decis√£o de compra. Probabilidade de convers√£o: Estimar, com base na an√°lise, a chance de o lead converter em cliente. Usar alta, m√©dia ou baixa probabilidade, dependendo da adequa√ß√£o do lead ao produto e do n√≠vel de resist√™ncia apresentado.\") }}",
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        2464,
        2240
      ],
      "id": "44108d87-0842-47d1-bb8f-de02081bb234",
      "name": "Evento participante B2B",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "95d149106e3cb0e6f496671aa7755f0385fca415f570b5d37b99d676a5a27347@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2B"
        },
        "returnAll": true,
        "timeMin": "={{ $fromAI(\"startDay\",\"the same date that user requested at 00:00:00\" ) }}",
        "timeMax": "={{ $fromAI(\"endDay\",\"the same date that user requested at 23:59:59\" ) }}",
        "options": {
          "orderBy": "startTime",
          "recurringEventHandling": "expand"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        2624,
        2240
      ],
      "id": "dbaa50b2-9c81-4605-9868-169f3445f4cd",
      "name": "Buscar Eventos B2B",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "95d149106e3cb0e6f496671aa7755f0385fca415f570b5d37b99d676a5a27347@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2B"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "updateFields": {
          "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
          "sendUpdates": "all",
          "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        2768,
        2240
      ],
      "id": "e909870c-8268-4947-b088-39c6b6ae4ece",
      "name": "Reagendar B2B",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "95d149106e3cb0e6f496671aa7755f0385fca415f570b5d37b99d676a5a27347@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2B"
        },
        "eventId": "={{ $fromAI(\"deleteEvent\") }} ",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        2912,
        2240
      ],
      "id": "a754c89d-dd53-4e37-b6bd-3c4b75389ebd",
      "name": "Deletar evento B2B",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('Webhook').item.json.body.data.message.imageMessage.url }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "id": "53f59075-3ce5-4e75-be16-21f6b043af71",
      "name": "Baixar Imagem",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        -224,
        48
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "imagem_base64",
              "value": "={{ $json.data.toString('base64') }}"
            },
            {
              "name": "tamanho_imagem",
              "value": "={{ $json.data.length }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "7c47ad11-cf64-4b3e-a464-c473b2bf2da9",
      "name": "Preparar Imagem"
    },
    {
      "parameters": {
        "model": "o4-mini",
        "options": {
          "temperature": 0.3
        },
        "requestOptions": {}
      },
      "id": "e5fa2130-7b33-4c7e-8c7d-cac24d3ec8c4",
      "name": "IA - Analisar Imagem",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [
        176,
        0
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "name": "={{ $('Vari√°veis').item.json.mobile }}_{{ $now.toMillis() }}.png",
        "driveId": "1mstmyigwRhrr3h4V5AFEb0627JnTDwnK",
        "folderId": {
          "__rl": true,
          "value": "1mstmyigwRhrr3h4V5AFEb0627JnTDwnK",
          "mode": "list",
          "cachedResultName": "Base de Conhecimento Joanna",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1mstmyigwRhrr3h4V5AFEb0627JnTDwnK"
        },
        "options": {}
      },
      "id": "6d8fcb0c-6a6a-4394-afc3-4a32293d9cc5",
      "name": "Upload Image to Drive",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        192,
        928
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "lEIDsWEIbsEr4Vq9",
          "name": "Google Drive GrdMad"
        }
      }
    },
    {
      "parameters": {
        "operation": "createFromText",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "options": {}
      },
      "id": "9921ef1e-af96-427a-8982-4610f7768db9",
      "name": "Make Image Public",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        320,
        928
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "lEIDsWEIbsEr4Vq9",
          "name": "Google Drive GrdMad"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('Vari√°veis').item.json.mobile }}_image_url",
        "value": "={{ $('Make Image Public').item.json.webViewLink }}"
      },
      "id": "c4495f65-9737-40a9-95ac-fa9d3bfcfde4",
      "name": "Save Image URL to Redis",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        464,
        896
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Vari√°veis').item.json.mobile }}_image_url",
        "options": {}
      },
      "id": "d07729f9-41dd-4e96-92cb-063218543666",
      "name": "Get Image URL from Redis",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1776,
        608
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    }
  ],
  "pinData": {},
  "repo_name": "backup-n8n",
  "repo_owner": "faelsou",
  "repo_path": "backups/EJu5LgykANSB6pjW",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-10-08T02:50:28.018Z",
      "updatedAt": "2025-10-08T02:50:28.018Z",
      "role": "workflow:owner",
      "workflowId": "EJu5LgykANSB6pjW",
      "projectId": "uxvBhUmI1Fx6jdU7"
    }
  ],
  "staticData": {
    "node:File Created": {
      "lastTimeChecked": "2025-10-08T03:19:50Z"
    },
    "node:File Updated": {
      "lastTimeChecked": "2025-10-08T03:20:14Z"
    }
  },
  "tags": [],
  "triggerCount": 3,
  "updatedAt": "2025-10-08T02:58:38.061Z",
  "versionId": "8fb8191a-26af-40fd-ac53-972a01d68a71"
}