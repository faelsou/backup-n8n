{
  "active": false,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Variáveis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Variáveis": {
      "main": [
        [
          {
            "node": "Get a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a row": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "SessionID",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar sessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SessionID": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar sessionID": {
      "main": [
        [
          {
            "node": "Create a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a row": {
      "main": [
        [
          {
            "node": "SessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "Switch B2B/B2C Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch B2B/B2C Router": {
      "main": [
        [
          {
            "node": "Atendente B2B (SDR)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory B2C": {
      "ai_memory": [
        [
          {
            "node": "Atendente B2C",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory B2B": {
      "ai_memory": [
        [
          {
            "node": "Atendente B2B (SDR)",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model B2C": {
      "ai_languageModel": [
        [
          {
            "node": "Atendente B2C",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Parser Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model B2B": {
      "ai_languageModel": [
        [
          {
            "node": "Atendente B2B (SDR)",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Atendente B2C": {
      "main": [
        [
          {
            "node": "Merge Agent Responses",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atendente B2B (SDR)": {
      "main": [
        [
          {
            "node": "Merge Agent Responses",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge Agent Responses": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Parser Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model Parser": {
      "ai_languageModel": [
        [
          {
            "node": "Parser Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser1": {
      "ai_outputParser": [
        [
          {
            "node": "Parser Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser Chain": {
      "main": [
        [
          {
            "node": "Segmentos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Segmentos1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "1,2s1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1,2s1": {
      "main": [
        [
          {
            "node": "Enviar texto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar texto": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Atendente B2C",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Atendente B2B (SDR)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "dados_IA",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "dados_IA",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "dados_IA": {
      "ai_tool": [
        [
          {
            "node": "Atendente B2C",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Atendente B2B (SDR)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Marcar Eventos B2C": {
      "ai_tool": [
        [
          {
            "node": "Atendente B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Agendar com Closer B2B": {
      "ai_tool": [
        [
          {
            "node": "Atendente B2B (SDR)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Eventos B2C": {
      "ai_tool": [
        [
          {
            "node": "Atendente B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Eventos Closer": {
      "ai_tool": [
        [
          {
            "node": "Atendente B2B (SDR)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "ai_tool": [
        [
          {
            "node": "Atendente B2C",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Atendente B2B (SDR)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-20T07:57:27.365Z",
  "id": "Okgre5eLE3rLWnvA",
  "isArchived": false,
  "meta": null,
  "name": "My workflow 59",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "9574e9d9-6ec0-4293-bfef-2464066efe40",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -16,
        1392
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "studio-r-planejados",
        "options": {}
      },
      "id": "00adbc93-0d51-4ef9-b72d-a9cc078cf36c",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -4192,
        464
      ],
      "webhookId": "adba3aa9-53f0-4c68-ab26-2ce132ee5b90"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d88c137-383f-4307-b3cc-1f6a560ea67b",
              "name": "mobile",
              "value": "={{  $json.body.data.key.remoteJid.replace(/\\D/g, '').replace(/^55(\\d{2})(\\d{8})$/, '55$19$2') }}",
              "type": "string"
            },
            {
              "id": "7e2f520e-4952-425b-82ca-792cc46680d4",
              "name": "mensagem",
              "value": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"message\"][\"conversation\"] }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "4edc0760-b022-4d20-8dd6-eac74777cba3",
      "name": "Variáveis",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3952,
        464
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3504,
        464
      ],
      "id": "be6c8a89-6a4d-4e94-baf7-3b4efc1b1b24",
      "name": "Get a row",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $json.sessionid }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3312,
        464
      ],
      "id": "434c7fef-9f1b-4a27-b5cb-fd9dcc878c42",
      "name": "If1"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3072,
        448
      ],
      "id": "a1d14515-db63-4420-80d4-1cdbbfaf6720",
      "name": "SessionID",
      "retryOnFail": true,
      "maxTries": 2,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "action": "generate"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -3472,
        624
      ],
      "id": "3fcbbedc-6ab4-400f-a57c-e01fada5efae",
      "name": "Gerar sessionID"
    },
    {
      "parameters": {
        "tableId": "dados_cliente",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}"
            },
            {
              "fieldId": "sessionid",
              "fieldValue": "={{ $item(\"0\").$node[\"Gerar sessionID\"].json[\"data\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3072,
        624
      ],
      "id": "c8269454-99b2-4c03-9073-274473fb3a42",
      "name": "Create a row",
      "retryOnFail": true,
      "maxTries": 2,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "76fc9423-1b88-4523-9776-d9f8bd94868e",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2800,
        448
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "50cebc66-2dbc-4c7a-a09e-83ffb0f52991",
              "name": "mensagem",
              "value": "={{ $('Variáveis').item.json.mensagem }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "98da5753-20f3-4f74-9d5b-c526b68a9a3a",
      "name": "Edit Fields4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2576,
        448
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Variáveis').item.json.mobile }}",
        "messageData": "={{ $json.mensagem }}",
        "tail": true
      },
      "id": "95bbc3bd-8512-4abd-91ef-a1ac85c0d9a5",
      "name": "Redis",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2256,
        448
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "amount": "2"
      },
      "id": "feb6a8f0-4dcc-4761-b0c4-51d0c29e80f0",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1952,
        448
      ],
      "webhookId": "d13d900d-1aae-4fae-8ee0-941fddb03cce"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
        "options": {}
      },
      "id": "bb31a037-411a-4af2-9d73-54c98c6e2b36",
      "name": "Redis1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1744,
        448
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return [items[0]];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1536,
        448
      ],
      "id": "400763de-b903-4332-a6b2-8c32c093f2ed",
      "name": "Code1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "21fd20d7-f940-4a66-91d5-5ea4c031bb50",
              "leftValue": "={{ $json.propertyName.last() }}",
              "rightValue": "={{ $('Variáveis').item.json.mensagem }}",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4e2d52f4-9faa-4d61-b431-39b5dddbe999",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1344,
        448
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "37f63b88-4a52-4421-aa95-db9114e521bc",
              "name": "listaMensagens",
              "value": "={{ $json.propertyName[0] }}",
              "type": "string"
            },
            {
              "id": "08b2e8c0-bc00-43ef-80bd-7a86bda2ee47",
              "name": "sessionId",
              "value": "={{ $item(\"0\").$node[\"SessionID\"].json[\"sessionid\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "348fc609-5ec0-49d9-a194-e31f242bf195",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1120,
        432
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}"
      },
      "id": "8e8c4bdc-7fa5-4d0c-96e7-2f5984e288fd",
      "name": "Redis2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -912,
        432
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "b2b4-type-check",
                    "leftValue": "={{ $json.listaMensagens }}",
                    "rightValue": "empresa|negócio|comercial|cnpj|corporativo|vendas|b2b|múltiplos|projetos|franquia|loja|escritório|organização|estabelecimento",
                    "operator": {
                      "type": "string",
                      "operation": "regex"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "b2b"
            }
          ]
        },
        "options": {
          "fallbackOutput": "single",
          "allMatchingOutputs": false
        }
      },
      "id": "f7b11324-e15e-4d8f-8d8a-949de0e80fea",
      "name": "Switch B2B/B2C Router",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -704,
        432
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Edit Fields1').item.json.sessionId }}",
        "contextWindowLength": 1000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -864,
        160
      ],
      "id": "8d30d380-d5a6-4052-8150-ba79e80dd314",
      "name": "Postgres Chat Memory B2C",
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Edit Fields1').item.json.sessionId }}",
        "contextWindowLength": 1000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -784,
        928
      ],
      "id": "525cd819-efe0-4a75-b19f-7abeff80318e",
      "name": "Postgres Chat Memory B2B",
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "9cc2d87d-4096-40c3-bcb0-922190586dec",
      "name": "OpenAI Chat Model B2C",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        384,
        432
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b285ccf4-0837-4d20-bafa-17ac5d7d98ee",
      "name": "OpenAI Chat Model B2B",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -1008,
        912
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.listaMensagens }}",
        "options": {
          "systemMessage": "Prompt para Agente Joanna – Studio R Planejados (B2C)\n\n## 👩‍💼 Agente Joanna\n- **Nome:** Joanna\n- **Empresa:** Studio R Planejados  \n- **Função:** Especialista em atendimento móveis planejados sob medida.\n- **Idioma:** Português Brasileiro\n- **Tom:** Simpático, acolhedor e profissional.\n\n## 🎯 Missão Principal\nSua missão é qualificar o lead, entender a necessidade dele e, se houver interesse, **agendar uma visita técnica gratuita** (presencial ou online) com um especialista da Studio R Planejados.\n\n## 🗣️ Roteiro da Conversa\n### 1. Saudação Inicial\nApresente-se e reforce a marca.\n> \"Olá! 👋 Sou a Joanna, assistente da _Studio R Planejados_, tudo bem? Estou aqui para te ajudar a transformar seu ambiente com móveis planejados sob medida. Me conta, qual ambiente você está pensando em planejar? 😊\"\n\n### 2. Qualificação do Lead\n1. \"Para começar, qual ambiente você deseja planejar? (cozinha, quarto, sala, closet, escritório...)\"\n2. \"Você já possui a planta do local ou as medidas?\"\n3. \"Legal! E em qual cidade e bairro o imóvel está localizado?\"\n\n### 3. Proposta de Agendamento\n> \"Perfeito! Para te ajudar a visualizar o projeto e receber um orçamento detalhado, podemos agendar uma visita técnica gratuita com um dos nossos especialistas. O que acha?\"\n\n## 🔧 Ferramentas Disponíveis\n- **dados_IA**: Base de conhecimento sobre Studio R Planejados\n- **Marcar Eventos B2C**: Agendar visita técnica\n- **Buscar Eventos**: Verificar disponibilidade\n- **Gmail**: Enviar confirmações\n- **Think**: Estruturar respostas"
        }
      },
      "id": "07775d3f-67e9-4d3d-9b7c-c1fa550e780a",
      "name": "Atendente B2C",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -480,
        -96
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.listaMensagens }}",
        "options": {
          "systemMessage": "Prompt para SDR Marcus – Studio R Planejados (B2B)\n\n## 👨‍💼 SDR Marcus\n- **Nome:** Marcus\n- **Empresa:** Studio R Planejados\n- **Função:** Sales Development Representative especializado em atendimento empresarial.\n- **Idioma:** Português Brasileiro\n- **Tom:** Profissional, consultivo e focado em resultados.\n\n## 🎯 Missão Principal\nSua missão é **qualificar empresas interessadas** em soluções de móveis planejados corporativos e **agendar uma reunião comercial** com nosso Closer especializado em vendas B2B.\n\n## 🗣️ Roteiro da Conversa B2B\n### 1. Saudação Inicial\n> \"Olá! Sou o Marcus, SDR da Studio R Planejados. Percebi que vocês têm interesse em soluções corporativas de móveis planejados. Trabalhamos com escritórios, lojas, clínicas e diversos segmentos empresariais. Qual é o seu segmento de atuação?\"\n\n### 2. Qualificação BANT\n**Budget**: \"Vocês já têm um budget definido para este projeto?\"\n**Authority**: \"Você é a pessoa responsável pela decisão de compra?\"\n**Need**: \"Qual o principal desafio que vocês querem resolver com móveis planejados?\"\n**Timeline**: \"Quando vocês gostariam de ter o projeto implementado?\"\n\n### 3. Proposta de Reunião\n> \"Perfeito! Vou agendar uma reunião com nosso especialista comercial, que vai apresentar cases similares e elaborar uma proposta personalizada.\"\n\n## 🔧 Ferramentas Disponíveis\n- **dados_IA**: Informações sobre casos corporativos\n- **Agendar com Closer B2B**: Reunião na agenda do especialista\n- **Buscar Eventos Closer**: Verificar disponibilidade do closer\n- **Gmail**: Enviar confirmações e materiais\n- **Think**: Estruturar qualificação"
        }
      },
      "id": "7e253a8e-53ce-45fd-988e-d88fd3f3d37c",
      "name": "Atendente B2B (SDR)",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -560,
        384
      ]
    },
    {
      "parameters": {
        "mode": "mergeByIndex"
      },
      "id": "780fbc15-b4d3-421a-b9ff-72779bfab6c7",
      "name": "Merge Agent Responses",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        160,
        32
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            }
          ]
        },
        "options": {}
      },
      "id": "c8c61969-6593-4ce9-969e-4a370e060c3b",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        640,
        32
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "50da53ed-be47-47a1-9460-8a28bf69fceb",
      "name": "OpenAI Chat Model Parser",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        912,
        240
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "95bcf4a1-3a88-4fd4-98c5-1bb9d450f09a",
      "name": "OutputParser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        992,
        368
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "Por favor, gere a saída no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural para WhatsApp.\nUse formatação markdown do WhatsApp:\n- *negrito*\n- _itálico_\n- ~tachado~\n- `código/link`"
            }
          ]
        }
      },
      "id": "03cfb22e-d762-4a6a-b2b3-1035e6473950",
      "name": "Parser Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        912,
        16
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "2dd576e6-1c77-4582-91bd-a0aeb61ffd3c",
      "name": "Segmentos1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1616,
        16
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "110cc317-442e-4d34-8c41-d45a8ef38650",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1184,
        96
      ]
    },
    {
      "parameters": {
        "amount": 2.1
      },
      "id": "17a0bf65-b912-46ab-85d7-ce2b6b3dff93",
      "name": "1,2s1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1456,
        128
      ],
      "webhookId": "d551975b-aca4-4a73-ae4c-76ee0c3ba5e0"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "studio-r-planejados",
        "remoteJid": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
        "messageText": "={{ $json.output }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        2144,
        112
      ],
      "id": "a42261df-1fe2-428c-b697-e526386e78c3",
      "name": "Enviar texto",
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "description": "Use sempre esse aplicativo quando precisar de uma resposta mais precisa e sem erros"
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        256,
        672
      ],
      "id": "1f4f520f-686b-4366-b8c5-852a2919f834",
      "name": "Think"
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "cab32b04-2801-4765-8a34-aadd3b9ecd1d",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        -512,
        1600
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documentos",
          "mode": "list",
          "cachedResultName": "documentos"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "cbfda53c-538a-4847-8654-2e6ae4413df6",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -368,
        1424
      ],
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "name": "dados_IA",
        "description": "Use esta ferramenta para buscar informações sobre projetos, materiais, e detalhes da Studio R Planejados para responder às perguntas dos clientes."
      },
      "id": "2e657888-5f53-431e-b9f4-8a1d4c9f4782",
      "name": "dados_IA",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        -304,
        1216
      ]
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "aiagenteautomate@gmail.com",
          "mode": "list",
          "cachedResultName": "aiagenteautomate@gmail.com"
        },
        "start": "={{ $fromAI(\"statTime\") }}",
        "end": "={{ $fromAI(\"endTime\") }}",
        "additionalFields": {
          "color": "2",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $fromAI(\"preenchimento\",\"Análise do lead B2C\") }}",
          "sendUpdates": "all",
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -560,
        208
      ],
      "id": "b5b7024e-11ee-4d82-a1c5-5433f61c4e49",
      "name": "Marcar Eventos B2C",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "closer@studior.com.br",
          "mode": "list",
          "cachedResultName": "closer@studior.com.br"
        },
        "start": "={{ $fromAI(\"statTime\") }}",
        "end": "={{ $fromAI(\"endTime\") }}",
        "additionalFields": {
          "color": "1",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $fromAI(\"preenchimento\",\"Análise completa do prospect B2B com dados de qualificação BANT\") }}",
          "sendUpdates": "all",
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -528,
        960
      ],
      "id": "b7dce9ae-564c-4437-8031-21b7ab323b6a",
      "name": "Agendar com Closer B2B",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "aiagenteautomate@gmail.com",
          "mode": "list",
          "cachedResultName": "aiagenteautomate@gmail.com"
        },
        "returnAll": true,
        "timeMin": "={{ $fromAI(\"startDay\",\"the same date that user requested at 00:00:00\" ) }}",
        "timeMax": "={{ $fromAI(\"endDay\",\"the same date that user requested at 23:59:59\" ) }}",
        "options": {
          "orderBy": "startTime",
          "recurringEventHandling": "expand"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -400,
        208
      ],
      "id": "99d362cd-35e6-41eb-9632-fb0043d5877a",
      "name": "Buscar Eventos B2C",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "closer@studior.com.br",
          "mode": "list",
          "cachedResultName": "closer@studior.com.br"
        },
        "returnAll": true,
        "timeMin": "={{ $fromAI(\"startDay\",\"the same date that user requested at 00:00:00\" ) }}",
        "timeMax": "={{ $fromAI(\"endDay\",\"the same date that user requested at 23:59:59\" ) }}",
        "options": {
          "orderBy": "startTime",
          "recurringEventHandling": "expand"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -656,
        960
      ],
      "id": "d529a549-9b5d-4fce-9f26-c6cdbe185149",
      "name": "Buscar Eventos Closer",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para enviar um email para o cliente quando solicitado",
        "sendTo": "={{ $fromAI(\"email\") }}",
        "subject": "={{ $fromAI(\"Titulo\",\"coloque aqui o titulo do email.\") }}",
        "emailType": "text",
        "message": "={{ $fromAI(\"texto\",\"coloque aqui os dados resumidos da conversa ou do agendamento\") }}",
        "options": {
          "appendAttribution": false,
          "senderName": "Studio R Planejados",
          "replyTo": "contato@studior.com.br"
        }
      },
      "id": "60a8a414-c1b4-4819-ad66-7923a4c2e239",
      "name": "Gmail",
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        80,
        848
      ],
      "webhookId": "b510e384-515f-4547-aa90-9a730a71a3b0",
      "credentials": {
        "gmailOAuth2": {
          "id": "bMTj7PQt4FxoCvuP",
          "name": "Gmail account AiAgentAutomate"
        }
      }
    }
  ],
  "pinData": {},
  "repo_name": "backup-n8n",
  "repo_owner": "faelsou",
  "repo_path": "backups/Okgre5eLE3rLWnvA",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-20T07:57:27.365Z",
  "versionId": "adee9745-2c01-4e53-b7ae-e11948694138"
}