{
  "active": false,
  "connections": {
    "Lead Existe?": {
      "main": [
        [
          {
            "node": "Criar Lead",
            "type": "main",
            "index": 0
          },
          {
            "node": "Salvar Histórico",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Atualizar Lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Preparar Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar Dados": {
      "main": [
        [
          {
            "node": "Verificar Lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Lead": {
      "main": [
        [
          {
            "node": "Lead Existe?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis3": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Redis3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          },
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Criar Lead": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Salvar Histórico": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualizar Lead": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Evolution API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          },
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "detelar_eventos": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Atendente",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "buscar_eventos": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "criar_eventos": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "enviar_email": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Atendente": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Atendente",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "busca_documentos",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "busca_documentos",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "busca_documentos": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Segmentos1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1,2s1": {
      "main": [
        [
          {
            "node": "no.op",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "no.op": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser1": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Segmentos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ElevenLabsGenerateVoice": {
      "main": [
        [
          {
            "node": "Audio-Base64-Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "ElevenLabsGenerateVoice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar WhatsApp1": {
      "main": [
        []
      ]
    },
    "Evolution API2": {
      "main": [
        []
      ]
    },
    "Evolution API": {
      "main": [
        [
          {
            "node": "1,2s1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio-Base64-Extract from File": {
      "main": [
        [
          {
            "node": "Enviar WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Atendente",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Atendente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-18T08:10:48.215Z",
  "id": "X0gcqL6A7FkFpsQx",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "My workflow 14 copy",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "1f760849-885d-4e97-af47-797c7c5cc28f",
        "options": {}
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1360,
        180
      ],
      "id": "fd3c1f3f-00b8-417c-b767-8f7635fda370",
      "webhookId": "1f760849-885d-4e97-af47-797c7c5cc28f"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "phone",
              "value": "={{ $json.body?.data?.key?.remoteJid?.replace('@s.whatsapp.net', '').replace(/\\D/g, '') }}"
            },
            {
              "name": "session_id",
              "value": "={{ $json.body?.data?.key?.id || $execution.id }}"
            },
            {
              "name": "email",
              "value": "={{ $json.body?.email || '' }}"
            },
            {
              "name": "message",
              "value": "={{ $json.body?.data?.message?.conversation || '' }}"
            },
            {
              "name": "messageType",
              "value": "={{ Object.keys($json.body?.data?.message || {})[0] || 'desconhecido' }}"
            },
            {
              "name": "created_at",
              "value": "={{ $now }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Preparar Dados",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -1120,
        180
      ],
      "id": "2f818c83-e3c5-40bf-8e2e-bbb911cbfbd9"
    },
    {
      "parameters": {
        "tableId": "leads",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "name",
              "fieldValue": "={{ $json.body.data.pushName }}"
            },
            {
              "fieldId": "phone",
              "fieldValue": "={{ $json.phone }}"
            }
          ]
        }
      },
      "name": "Verificar Lead",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -940,
        180
      ],
      "id": "69304fd0-a248-44f5-986c-fed29387ff2d",
      "credentials": {
        "supabaseApi": {
          "id": "wKMmHUFNQJCXhQYj",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.length }}",
              "value2": 1
            }
          ]
        }
      },
      "name": "Lead Existe?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -780,
        180
      ],
      "id": "ca3ea0f4-835a-46bf-8f57-a9ddff90ef8c"
    },
    {
      "parameters": {
        "tableId": "leads"
      },
      "name": "Criar Lead",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -520,
        -140
      ],
      "id": "1a64dde9-2aec-47ce-a399-847aa65c5db8",
      "credentials": {
        "supabaseApi": {
          "id": "wKMmHUFNQJCXhQYj",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "leads"
      },
      "name": "Atualizar Lead",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -540,
        340
      ],
      "id": "1dcb4160-b631-47d4-862a-e856c126cdf9",
      "credentials": {
        "supabaseApi": {
          "id": "wKMmHUFNQJCXhQYj",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "historico_mensagens"
      },
      "name": "Salvar Histórico",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -520,
        40
      ],
      "id": "b861eeea-7f96-42ce-80d6-639b81c33902",
      "credentials": {
        "supabaseApi": {
          "id": "wKMmHUFNQJCXhQYj",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $json.number }}",
        "messageData": "={{ $json.message }}",
        "tail": true
      },
      "id": "06a1bd38-a391-470a-905a-ddf558fdd64e",
      "name": "Redis",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1620,
        80
      ],
      "credentials": {
        "redis": {
          "id": "Q9fFQv1hEnIedFTx",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "f6cc013c-e632-4158-91ef-574cea1041fa",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1780,
        80
      ],
      "webhookId": "6d37ad81-5c3f-4da9-8e20-9ad40b874fa2",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Code1').item.json.number }}",
        "options": {}
      },
      "id": "331629e4-c2f8-46a4-a4f1-8610b69fa6ba",
      "name": "Redis1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1920,
        80
      ],
      "credentials": {
        "redis": {
          "id": "Q9fFQv1hEnIedFTx",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {},
      "id": "f9c393af-b01d-4e2e-80ac-2dd95c43f16c",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2240,
        160
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "37f63b88-4a52-4421-aa95-db9114e521bc",
              "name": "listaMensagens",
              "value": "={{ $json.propertyName.join(', ') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "dc1d3ac6-8e1a-4d48-833e-7aec64c9745e",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2240,
        -20
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Code1').item.json.number }}"
      },
      "id": "9e05e470-1f1c-49e1-ab87-ede61b0c9534",
      "name": "Redis2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2380,
        -20
      ],
      "credentials": {
        "redis": {
          "id": "Q9fFQv1hEnIedFTx",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.ogg",
          "mimeType": "application/ogg"
        }
      },
      "id": "7ba5c353-da98-4c65-854b-b23b02aeaa8a",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        460,
        100
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c1bcf91e-c5cb-48c9-bba3-fabebf016723",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        340,
        240
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.png",
          "mimeType": "image/png"
        }
      },
      "id": "eaa4b111-98c1-4053-a69f-38db7ce56519",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        940,
        260
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2c8e53d0-d89c-45b8-b718-9315eec55a22",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        340,
        400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ade56c50-1520-4760-8df5-e99617d6d3ad",
              "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ffb8190d-27e3-4cad-b353-79b456f2ac89",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1240,
        260
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.number }}",
        "messageData": "={{ $('Code1').item.json.message }}",
        "tail": true
      },
      "id": "00bd7eb6-a283-445e-afd0-e218000bb3fc",
      "name": "Redis3",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1440,
        -60
      ],
      "credentials": {
        "redis": {
          "id": "Q9fFQv1hEnIedFTx",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.number }}",
        "messageData": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}, {{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "be0c02c6-7882-4945-aea3-d3c7ff7b1c64",
      "name": "Redis4",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1440,
        260
      ],
      "credentials": {
        "redis": {
          "id": "Q9fFQv1hEnIedFTx",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Variáveis').item.json.telefone }}",
        "messageData": "={{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "19803828-9ac1-4ed7-9c7e-14104c56b34e",
      "name": "Redis5",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1440,
        100
      ],
      "credentials": {
        "redis": {
          "id": "Q9fFQv1hEnIedFTx",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "50cebc66-2dbc-4c7a-a09e-83ffb0f52991",
              "name": "mensagem",
              "value": "={{ $('Preparar Dados').item.json.message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e2754464-5f1e-484e-94de-5133b02b75aa",
      "name": "Edit Fields4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        340,
        80
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "c20ba2f1-4326-49aa-b157-e945aecf0cd4",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        620,
        100
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Descreva todo o conteudo da imagem. Responda sem acento, sem hifens",
        "inputType": "base64",
        "options": {}
      },
      "id": "e45d5a23-3b41-4997-85a8-cd4b877676a8",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        1100,
        260
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $(\"Code1\").item.json.skip }}",
                    "rightValue": true,
                    "operator": {
                      "type": "boolean",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "skip"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $(\"Code1\").item.json.messageType }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Code1').item.json.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "670e0c36-4272-4a10-a985-cf04874a0760"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c0e434dd-1268-421d-b81b-3a5e90ed9550",
                    "leftValue": "={{ $('Code1').item.json.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "d08b0737-61b0-4457-9d57-26e3718e261c",
                    "leftValue": "{{ $('Code1').item.json.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "889ab76e-2401-4a44-af30-8706a697d4e0",
                    "leftValue": "unknownType",
                    "rightValue": "default",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "default"
            }
          ]
        },
        "options": {}
      },
      "id": "491c8b8b-9d8c-4f6c-a81e-7ca8926210a0",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        80,
        80
      ]
    },
    {
      "parameters": {
        "content": "# Pausa para mensagens",
        "height": 140,
        "width": 376,
        "color": 5
      },
      "id": "865602cf-99c5-408b-a94f-777fa529fd75",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        900,
        -160
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 720,
        "width": 1660,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        880,
        -180
      ],
      "typeVersion": 1,
      "id": "ff014db4-af7a-47df-b300-e68db8791f00",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "",
        "height": 740,
        "width": 800,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        20,
        -180
      ],
      "typeVersion": 1,
      "id": "ba97ef58-5f55-4cbe-8bee-c4f6c224ae3e",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "content": "# Classifica Mensagens",
        "height": 80,
        "width": 396,
        "color": 5
      },
      "id": "49245d0a-3ed7-4906-9a7e-53caf70b235a",
      "name": "Sticky Note21",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        80,
        -160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "21fd20d7-f940-4a66-91d5-5ea4c031bb50",
              "leftValue": "={{ $json.propertyName.last() }}",
              "rightValue": "={{ $('Preparar Dados').item.json.message }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b72db867-d3ba-482c-8209-af0edcb743e5",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2080,
        80
      ]
    },
    {
      "parameters": {
        "jsCode": "// Obtém os valores dos nós anteriores\n// const sessionid1 = $input.item.json.data;  // Do nó \"Gerar sessionID\"\n// const sessionid2 = $input.item.json.sessionid;  // Do nó \"Supabase\"\n\n// Retorna apenas o que existir, chamando sempre de \"sessionId\"\n// return [{ sessionId: sessionid1 || sessionid2 || null }];\n// -------------------\n\n// Captura a estrutura da mensagem recebida do Evolution API\nconst msg = $json?.messages?.[0] || {};\nconst fromMe = msg?.key?.fromMe ?? false;\n\n// Captura da mensagem de texto\nconst bodyMsg = msg?.message?.conversation || msg?.text || $json.body?.message || '';\n\n// Extrai número do WhatsApp (sem letras)\nconst remoteJid = msg?.key?.remoteJid || '';\nconst number = remoteJid.split('@')[0]?.replace(/\\D/g, '') || '';\n\n// Gera ou herda sessionId\nconst sessionId = $json.sessionId || msg?.key?.id || $execution.id;\n\n// Detecta o tipo da mensagem\nlet messageType = 'desconhecido';\nconst allTypes = Object.keys(msg?.message || {});\nif (allTypes.length > 0) {\n  messageType = allTypes[0];\n}\n\n// Lógica de filtragem: ignora se não for do usuário ou se for inválido\nlet skip = false;\nlet skipReason = '';\n\n// NOVO: Bloqueia fluxo se a mensagem for do bot OU não houver texto do usuário\nif (fromMe) {\n  skip = true;\n  skipReason = 'Mensagem enviada pelo bot (ignorada)';\n} else if (!bodyMsg || bodyMsg.trim() === '') {\n  skip = true;\n  skipReason = 'Mensagem vazia ou inválida';\n} else if (!number) {\n  skip = true;\n  skipReason = 'Número de telefone inválido';\n} else if (messageType === 'desconhecido') {\n  skip = true;\n  skipReason = 'Tipo de mensagem desconhecido';\n}\n\n// Retorna padronizado\nreturn [{\n  json: {\n    chatInput: bodyMsg.trim(),\n    sessionId,\n    number,\n    message: bodyMsg.trim(),\n    text: bodyMsg.trim(),\n    messageType,\n    skip,\n    skipReason\n  }\n}];\n\n// Só irá seguir o fluxo (ex: acionar IA) se \"skip\" for false!\n// Faça um IF ou Switch no n8n logo depois, checando se skip == false\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -160,
        140
      ],
      "id": "db810b52-3fca-426b-9a9f-4a7f8bd49f51",
      "name": "Code1"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"rules\": [\n    {\n      \"value1\": \"{{ $json.skip }}\",\n      \"operation\": \"isFalse\"\n    }\n  ],\n  \"combineOperation\": \"all\"\n}\n",
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4360,
        -80
      ],
      "id": "92e63876-1037-4c23-8ddd-977cb14462a6",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "height": 780,
        "width": 1360
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1380,
        -200
      ],
      "id": "814c3c16-5c1b-4185-88dd-f15196e5a65e",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d3e6c8a-4150-4951-90fb-2f81898dca7d",
              "name": "number",
              "value": "={{ $json.number.replace(/[^0-9]/g, '') }}",
              "type": "string"
            },
            {
              "id": "4904e424-50cf-45a5-be85-c8bbe7e52653",
              "name": "message",
              "value": "={{ $json.message }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        600,
        -160
      ],
      "id": "d37dee59-297a-4ad2-af98-e4717300375c",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "bbebf08a-59e2-466f-87f1-bdf1b95a7eeb",
              "leftValue": "={{ $json.skip }}",
              "rightValue": "false",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        320,
        -40
      ],
      "id": "87ba99b4-08ac-4b5e-9eb7-f8cb4149498e",
      "name": "If"
    },
    {
      "parameters": {
        "content": "# Atendente IA",
        "height": 80,
        "width": 276,
        "color": 5
      },
      "id": "cbe46fa7-87c1-4629-a0f7-78ac2f41171b",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2760,
        -120
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 660,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2740,
        -140
      ],
      "typeVersion": 1,
      "id": "4e883bee-1c39-4306-9d7c-a71d33e59aef",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "# Agendamento",
        "height": 80,
        "width": 283,
        "color": 5
      },
      "id": "bb2941d5-22e6-4cbc-b85a-652cf180ff8c",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2760,
        660
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 260,
        "width": 660,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2740,
        500
      ],
      "typeVersion": 1,
      "id": "bdac58af-38f2-4d13-b87a-9df89c7be372",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta quando precisar deletar um evento existente, com base no ID do evento\nsempre use o email do cliente para fazer o cancelamento.",
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "faelsouz0211@gmail.com",
          "mode": "list",
          "cachedResultName": "faelsouz0211@gmail.com"
        },
        "eventId": "={{ $fromAI('id') }}",
        "options": {}
      },
      "id": "d02507c6-1863-47ac-aa25-16d186bd4149",
      "name": "detelar_eventos",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        3100,
        520
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ZsUoUYIAhPZGGhyP",
          "name": "Google Calendar account 3"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2760,
        180
      ],
      "id": "14750fbc-9c84-4525-ab29-4e6bc1a627a7",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "faelsouz0211@gmail.com",
          "mode": "list",
          "cachedResultName": "faelsouz0211@gmail.com"
        },
        "returnAll": true,
        "options": {
          "timeMin": "={{ $fromAI('start_date') }}",
          "timeMax": "={{ $fromAI('end_date') }}",
          "query": "@"
        }
      },
      "id": "fa54e8e3-7b92-4c29-8ed1-b26ed04efb65",
      "name": "buscar_eventos",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        2780,
        520
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ZsUoUYIAhPZGGhyP",
          "name": "Google Calendar account 3"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para criar o agendamento do cliente,apenas um agendamento por horário, faça com que exista a consulta de horário na tool busca_eventos para não agendar dois clientes no mesmo horario.\nApenas uma e-mail de usuário por horário de atendimento\nEstá proibido agendar mais de uma vez.",
        "calendar": {
          "__rl": true,
          "value": "faelsouz0211@gmail.com",
          "mode": "list",
          "cachedResultName": "faelsouz0211@gmail.com"
        },
        "start": "= {{ $fromAI('start_time') }}",
        "end": "= {{ $fromAI('end_time') }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI('email_do_cliente') }}"
          ],
          "color": "3",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ (() => { \n    const value = $fromAI('tipo_servico'); \n    return value.charAt(0).toUpperCase() + value.slice(1); \n})() }} {{ $fromAI('nome_pet') }} Porte {{ $fromAI('porte') }} ",
          "location": "={{ $fromAI('local_evento') }}",
          "sendUpdates": "all",
          "summary": "={{ (() => { \n    const value = $fromAI('tipo_servico'); \n    return value.charAt(0).toUpperCase() + value.slice(1); \n})() }}: {{ $fromAI('nome_pet') }} - {{ $fromAI('nome_cliente') }} "
        }
      },
      "id": "b7dd33d2-99aa-44f0-9c9c-1023f1c1d841",
      "name": "criar_eventos",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        2940,
        520
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ZsUoUYIAhPZGGhyP",
          "name": "Google Calendar account 3"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para enviar um email para o cliente quando solcitiado e também para quando o agendamento for confirmado.",
        "sendTo": "={{ $fromAI(\"email\") }}",
        "subject": "={{ $fromAI(\"Titulo\",\"coloque aqui o titulo do email.\") }}",
        "emailType": "text",
        "message": "={{ $fromAI(\"texto\",\"coloque aqui os dados resumidos da conversa ou do agendamento, ex: nome, email, telefone, data\") }}",
        "options": {
          "appendAttribution": false,
          "senderName": "Enviado pela ",
          "replyTo": "n8nlabz@gmail.com"
        }
      },
      "id": "30d97157-a355-4444-9935-36ec56b85891",
      "name": "enviar_email",
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        3260,
        520
      ],
      "webhookId": "9342349e-7133-481c-b8ea-26f6c9267c10",
      "credentials": {
        "gmailOAuth2": {
          "id": "dusp3v1eSE7MkKo2",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $(\"Preparar Dados\").item.json.message || '' }}",
        "options": {
          "systemMessage": "=<systemData>\nData de hoje: {{ $now.weekdayLong }}, {{ $now.format('dd/MM/yyyy') }}, {{ $now.hour.toString().padStart(2, '0') }}:{{ $now.minute.toString().padStart(2, '0') }}\n</systemData>\n\n<Agent>\nNome: Aurora  \nDescrição: Especialista em atendimento e agendamentos para empresas  \nObjetivo: Continuar a conversa com o lead, sem repetir mensagens já enviadas.\n</Agent>\n\n<Instruction>\nVocê está em uma conversa via WhatsApp. Sempre continue do ponto onde parou. Se já pediu informações, aguarde o cliente responder. Só repita se ele estiver confuso.\n</Instruction>\n\n\n<Agent>\n\n  <Name>Aurora</Name>\n  <Description>Especialista em automação comercial da AIAgent Automate</Description>\n  <Language>Português Brasileiro</Language>\n\n<Recepção do Cliente>\nOlá! Tudo certo? Me chamo Aurora e sou especialista em automação comercial da AIAgent Automate 🤖. Como posso te ajudar hoje?\n</Recepção do Cliente>\n\n<CommunicationStyle>\n  <style>Consultivo</style>\n  <Guide>\n    [\n      \"Foque sempre em entender o desafio do cliente antes de oferecer uma solução.\",\n      \"Use exemplos práticos e linguagem simples, mesmo em contextos técnicos.\",\n      \"Mostre empatia e interesse genuíno no crescimento do cliente.\",\n      \"Evite termos excessivamente técnicos sem explicação clara.\",\n      \"Seja proativa ao sugerir soluções com base no que o cliente menciona.\",\n      \"Nunca force uma venda; eduque o cliente sobre os benefícios com base em dados.\",\n      \"Sempre ofereça uma próxima ação: agendar reunião, enviar apresentação, etc.\",\n      \"Evite respostas genéricas. Adapte com base no segmento e no nível do cliente.\",\n      \"Encerrar sempre perguntando se há mais algo em que pode ajudar.\"\n    ]\n  </Guide>\n</CommunicationStyle>\n\n<FieldsConfigurator>\n  [\n    \"Identificar segmento do cliente (ex: saúde, varejo, serviços) para adaptar sugestões.\",\n    \"Validar se o lead está qualificado (cargo, interesse, momento de compra).\",\n    \"Sugestão automática de casos de uso relevantes com base no setor.\",\n    \"Monitorar e registrar gatilhos de compra (ex: deseja escalar vendas, reduzir custo etc).\"\n  ]\n</FieldsConfigurator>\n\n<Validations>\n  <Validation>Validar nome, empresa e e-mail antes de seguir para próxima etapa.</Validation>\n  <Validation>Detectar leads duplicados por e-mail e alertar equipe se necessário.</Validation>\n  <Validation>Checar se o cliente já é da base antes de apresentar soluções de aquisição.</Validation>\n  <Validation>Verificar se o cliente entende a proposta de valor da IA antes de agendar reunião.</Validation>\n</Validations>\n\n<Rules>\n  <Rule>Se não entender a pergunta do cliente, peça educadamente por mais contexto.</Rule>\n  <Rule>Evite afirmar qualquer coisa sem embasamento em dados internos ou depoimentos validados.</Rule>\n  <Rule>Jamais compartilhe informações internas ou técnicas sensíveis.</Rule>\n  <Rule>Se o cliente for rude, mantenha a educação e encurte a conversa.</Rule>\n  <Rule>Se a conversa for além do escopo da automação comercial, encaminhe para um especialista.</Rule>\n  <Rule>Evite repetir a mesma informação mais de uma vez.</Rule>\n  <Rule>Use linguagem acessível a tomadores de decisão não técnicos.</Rule>\n  <Rule>Evite textos longos. Comunicação objetiva é prioridade.</Rule>\n  <Rule>Sempre indique um próximo passo claro no fim da conversa.</Rule>\n  <Rule>Se o cliente quiser agendar uma reunião, confirme e colete: nome, e-mail, telefone, cargo, empresa e horário.</Rule>\n  <Rule>O agente só deve continuar a conversa após o cliente responder no WhatsApp.</Rule>\n</Rules>\n\n<Agents>\n  <SDR>\n    <Nome>Aurora SDR</Nome>\n    <Função>Qualificar leads comerciais com base em interesse, cargo e momento de compra.</Função>\n    <Fluxo>\n      - Receber o lead\n      - Fazer perguntas de qualificação (nome, empresa, cargo, desafio)\n      - Validar interesse e repassar para agendamento se lead estiver pronto\n    </Fluxo>\n  </SDR>\n  \n  <Agendamento>\n    <Nome>Aurora Agenda</Nome>\n    <Função>Agendar reuniões com leads qualificados, considerando fuso horário de São Paulo (America/Sao_Paulo).</Função>\n    <Fluxo>\n      - Confirmar interesse do cliente\n      - Coletar: nome, e-mail, telefone, cargo, empresa e melhor horário\n      - Confirmar data/hora com timezone correto\n      - Encaminhar confirmação\n    </Fluxo>\n  </Agendamento>\n</Agents>\n\n<Roteiro>\n```markdown\n# Roteiro de Conversa – Agente Comercial B2B (Aurora – AIAgent Automate)\n\n---\n\n## 1. Saudação Inicial\n\"Olá! Tudo certo? Me chamo Aurora e sou especialista em automação comercial da AIAgent Automate 🤖. Como posso te ajudar hoje?\"\n\n---\n\n## 2. Diagnóstico Inicial (SDR)\n\n**Perguntas de qualificação (uma de cada vez):**\n- Qual o nome da sua empresa?\n- Qual o seu nome e cargo por lá?\n- Qual é o maior desafio comercial que você enfrenta hoje? (ex: captar leads, qualificar, responder rápido, escalar atendimento...)\n- Seu processo de vendas é mais B2B ou B2C?\n- Você já utiliza alguma automação atualmente?\n\n---\n\n## 3. Apresentação de Valor\n\"Entendi! Com a nossa tecnologia de agentes de IA, empresas como a sua conseguem:  \n- Reduzir até 60% do tempo de resposta  \n- Aumentar conversão de leads em até 40%  \n- Operar 24/7 sem sobrecarga humana  \nTudo isso com interações naturais, integradas a WhatsApp, CRM e muito mais.\"\n\n---\n\n## 4. Proposta de Ação\n\"Se fizer sentido, posso agendar uma reunião rápida com um especialista da AIAgent. Pode ser?\"\n\n---\n\n## 5. Agendamento (Agente Agenda)\n\"Perfeito! Para agendar, preciso de algumas informações rápidas, pode ser?\"  \n[Coleta: Nome, Empresa, E-mail, Telefone, Cargo, Melhor Horário em horário de São Paulo]\n\n---\n\n## 6. Encerramento\n\"Obrigada pela conversa! Se precisar de algo a mais, é só me chamar por aqui. Vamos te ajudar a escalar suas vendas com inteligência. 🚀\"\n\n---\n\n## 7. Esperar mensagem no WhatsApp antes de seguir a conversa.\n\n\n\n"
        }
      },
      "id": "6ac65c51-622f-4e8f-afef-61d58ef434f9",
      "name": "Atendente",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        2920,
        0
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $(\"Preparar Dados\").item.json.sessionId || $execution.id }}",
        "contextWindowLength": "={{ 50 }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        2900,
        180
      ],
      "id": "0473b491-79cb-446e-b6bf-3af19fc99333",
      "name": "Simple Memory",
      "notesInFlow": false
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "eca82cc8-dce6-4d81-a4ca-cc23ccf5e2d3",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        3860,
        560
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "dd919c65-2858-459a-9d65-a7d0a942c3e8",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        3640,
        700
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "9acd2f6d-f7ab-461a-b70e-b474a07466fc",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        3560,
        560
      ],
      "credentials": {
        "supabaseApi": {
          "id": "wKMmHUFNQJCXhQYj",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 520,
        "width": 460,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3540,
        400
      ],
      "typeVersion": 1,
      "id": "b076aedf-f68f-4646-a1f1-266debed3964",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "name": "user_documents",
        "description": "Contains all the information about prices that you can check to answer user questions."
      },
      "id": "8be2a0d3-fb72-4e33-9d2d-cf70e5a64a36",
      "name": "busca_documentos",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        3640,
        420
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c860db65-ea4e-49e4-8a12-1d36929eb26c",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        3600,
        -60
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "ca26cfa1-549c-4170-b7a3-90aa2542965a",
      "name": "Segmentos1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        3880,
        -300
      ]
    },
    {
      "parameters": {
        "amount": 1.2
      },
      "id": "fdb62d58-8cff-40b7-930f-22234ff93633",
      "name": "1,2s1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4600,
        -280
      ],
      "webhookId": "9c927c7a-1720-4ef6-997e-c64b1ba6c862"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "eea13f76-5fdd-4749-b018-0ff4c3a705bd",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        4040,
        -300
      ]
    },
    {
      "parameters": {},
      "id": "f43bd223-5103-4c36-a005-3b3f0467d4b5",
      "name": "no.op",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4740,
        -280
      ]
    },
    {
      "parameters": {},
      "id": "4803cfe2-70cd-4bef-b33f-52891f61bf6b",
      "name": "Replace Me",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4240,
        -280
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "c54a5fcd-1c3f-4472-b911-f6e1329d7d78",
      "name": "OutputParser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        3760,
        -60
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a saída no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, não é mesmo?\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\n\n### Jamais separe uma mensagem vazia.\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do whatsapp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- ~tachado~ (caso seja algo que foi excluído ou alterado)\n\t\t\t- _itálico_.(extremamente raro)\n            - `link` (usar sempre em todos os links)\n\nTudo o que for link, pode colocar entre \"`\", ou seja, na seguinte formatação: `www.link.com.br`\n"
            }
          ]
        }
      },
      "id": "ea1a0874-3bf6-4488-a74c-32b3dfd5e7b8",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        3580,
        -300
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "aiagenteautomate@gmail.com",
        "remoteJid": "={{ $('Preparar Dados').item.json.body.data.key.remoteJid }}",
        "messageText": "={{ $(\"Edit Fields2\").item.json.output }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        4460,
        -300
      ],
      "id": "6008cf0f-ae67-46ba-821b-c107a91e0a74",
      "name": "Evolution API",
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 500,
        "width": 1300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3540,
        -440
      ],
      "typeVersion": 1,
      "id": "2496c394-9d55-41cb-a1d2-137113c4370c",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "# Divisão de Mensagens Inteligente - Texto",
        "height": 80,
        "width": 736,
        "color": 5
      },
      "id": "fc7e2ae3-8ce7-4314-b165-673466dce94c",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3560,
        -420
      ]
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "id": "43d9c6dc-a089-49ae-9fc9-3f7134e02d00",
      "name": "Audio-Base64-Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        3940,
        200
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.elevenlabs.io/v1/text-to-speech/9BWtsMINqrJLrRacOk9x",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "xi-api-key",
              "value": "=SUA API KEY ELEVENLABS AQUI"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n   \"text\":\"'{{ $json.textoSemQuebrasNemEmojis }}'\",\n   \"model_id\":\"eleven_multilingual_v2\",\n   \"voice_settings\":{\n      \"stability\":0.5,\n      \"similarity_boost\":0.8,\n      \"style\":0.0,\n      \"use_speaker_boost\":true\n   }\n} ",
        "options": {}
      },
      "id": "2117abf9-8d72-4749-a2fa-d2fd9114659e",
      "name": "ElevenLabsGenerateVoice",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        3740,
        200
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "operation": "instance-connect",
        "instanceName": "aiagenteautomate@gmail.com"
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        4400,
        820
      ],
      "id": "21f9da2e-3db0-43b8-9a57-685e7a2e616a",
      "name": "Evolution API1",
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 300,
        "width": 740,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3540,
        80
      ],
      "typeVersion": 1,
      "id": "76d64470-7e91-47ab-92b7-a8e2c2e080d4",
      "name": "Sticky Note24"
    },
    {
      "parameters": {
        "content": "# Resposta em Áudio",
        "height": 80,
        "width": 376,
        "color": 5
      },
      "id": "1271d5df-f5f5-49bb-9492-cae0887c6e8b",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3560,
        100
      ]
    },
    {
      "parameters": {
        "jsCode": "// Obtém o primeiro item do fluxo\nconst item = $input.first();\n\n// Garante que há dados na entrada\nif (!item || !item.json || !item.json.output) {\n  throw new Error(\"A chave 'output' não foi encontrada no JSON de entrada.\");\n}\n\n// Processa o texto removendo todas as quebras de linha e emojis\nconst textoEntrada = item.json.output; // Use a chave correta para pegar o texto de entrada\n\n// Remove quebras de linha (\\n)\nlet textoProcessado = textoEntrada.replace(/\\n/g, \"\");\n\n// Remove emojis\ntextoProcessado = textoProcessado.replace(\n  /[\\u{1F600}-\\u{1F64F}]|[\\u{1F300}-\\u{1F5FF}]|[\\u{1F680}-\\u{1F6FF}]|[\\u{1F700}-\\u{1F77F}]|[\\u{1F780}-\\u{1F7FF}]|[\\u{1F800}-\\u{1F8FF}]|[\\u{1F900}-\\u{1F9FF}]|[\\u{1FA00}-\\u{1FA6F}]|[\\u{1FA70}-\\u{1FAFF}]|[\\u{2600}-\\u{26FF}]|[\\u{2700}-\\u{27BF}]|[\\u{FE00}-\\u{FE0F}]|[\\u{1F1E0}-\\u{1F1FF}]/gu,\n  \"\"\n);\n\n// Retorna o resultado\nreturn {\n  textoOriginal: textoEntrada,\n  textoSemQuebrasNemEmojis: textoProcessado,\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3580,
        200
      ],
      "id": "8c0d1f7d-c4e7-41df-96cf-9e4796e5f9aa",
      "name": "Code"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "id": "98e9ff5e-aca6-4cc8-9ddf-3b094d283bf2",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        3280,
        0
      ]
    },
    {
      "parameters": {
        "content": "# Busca Info no RAG",
        "height": 80,
        "width": 350,
        "color": 5
      },
      "id": "0c63907d-ead8-46ed-ad12-3041b6e00d8d",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3560,
        820
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "responder-conversa",
        "remoteJid": "={{ $('Preparar Dados').item.json.body.data.key.remoteJid }}",
        "messageText": "={{ $('Preparar Dados').item.json.body.data.message.conversation }}",
        "options_message": {}
      },
      "name": "Enviar WhatsApp1",
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        4560,
        520
      ],
      "id": "b6109c16-00e3-4419-97dc-b6535639b22e",
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "responder-conversa",
        "remoteJid": "={{ $('Webhook1').item.json.body.data.key.remoteJid }}",
        "messageText": "={{ $('Atendente').item.json.output }}",
        "options_message": {}
      },
      "name": "Enviar WhatsApp",
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        4140,
        200
      ],
      "id": "5bd3b3f3-9c7e-4367-acd9-1d82d6ad5478",
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "aiagenteautomate@gmail.com",
        "remoteJid": "={{ $json.body.data.key.remoteJid }}",
        "messageText": "={{ $json.body.data.message.conversation }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        5220,
        820
      ],
      "id": "ad886477-3b11-40d5-9094-ba9146304f4a",
      "name": "Evolution API2",
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ce98aeb3-fedb-4018-a869-40b6b5674348",
              "name": "sessionId",
              "value": "={{ $('Preparar Dados').item.json.sessionId || $execution.id }}",
              "type": "string"
            },
            {
              "id": "5ad67675-81a0-4c19-81a4-95b795fa8536",
              "name": "listaMensagens",
              "value": "={{$json.listaMensagens}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2520,
        -20
      ],
      "id": "b52a7784-f842-4fd6-ac51-a8c171cb1f6f",
      "name": "Edit Fields6"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bf499a09-69bf-4f6c-a7d3-49c2e95158d1",
              "name": "sessionId",
              "value": "={{ $('Preparar Dados').item.json.sessionId || $execution.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3580,
        1900
      ],
      "id": "e79915f8-af09-4bd0-92ad-ad96ff31195c",
      "name": "Edit Fields7"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "96603e6d-5d7a-4dba-a6fb-f3de2ac73aa5",
              "leftValue": "={{ !!$json.nome && !!$json.email && !!$json.telefone && !!$json.empresa && !!$json.cargo }}",
              "rightValue": "=!!$json.nome && !!$json.email && !!$json.telefone && !!$json.empresa && !!$json.cargo",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2680,
        60
      ],
      "id": "e30336a3-357e-48a5-ba43-987f47ab77f5",
      "name": "If1"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        3080,
        220
      ],
      "id": "2fa404c5-9946-4039-96f6-e3fcdb370012",
      "name": "Think"
    }
  ],
  "pinData": {},
  "repo_name": "backup-n8n",
  "repo_owner": "faelsou",
  "repo_path": "backups/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-05-19T06:55:14.783Z",
  "versionId": "9544b398-473b-4801-bfdd-a182b7e20362"
}