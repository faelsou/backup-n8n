{
  "active": false,
  "connections": {
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "dados_IA",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Doc Rows": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Delete Old Doc Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Document Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert into Supabase Vectorstore": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "dados_IA",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis3": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extrair Mensagem de Texto": {
      "main": [
        [
          {
            "node": "É a 1ª mensagem?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Redis3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Variáveis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Extrair Mensagem de Texto",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualizar Dados do Cliente",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extrair Mensagem de Texto",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "Atendente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Segmentos1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1,2s1": {
      "main": [
        [
          {
            "node": "Evolution API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "1,2s1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser1": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Segmentos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ElevenLabsGenerateVoice": {
      "main": [
        [
          {
            "node": "Audio-Base64-Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "ElevenLabsGenerateVoice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Atendente",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Atendente",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "1. Pegar Dados do Cliente": {
      "main": [
        [
          {
            "node": "2. Cliente Existe?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2. Cliente Existe?": {
      "main": [
        [
          {
            "node": "2a. Gerar sessionID",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Verificar Status do Cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2a. Gerar sessionID": {
      "main": [
        [
          {
            "node": "2a.1. Msg Pedir Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SessionID": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Variáveis": {
      "main": [
        [
          {
            "node": "1. Pegar Dados do Cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Atendente": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados_IA": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Audio-Base64-Extract from File": {
      "main": [
        [
          {
            "node": "Evolution API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2a.1. Msg Pedir Dados": {
      "main": [
        [
          {
            "node": "2b. Cadastrar Novo Cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "É a 1ª mensagem?": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "3. Limite < 3 pesquisas?": {
      "main": [
        [
          {
            "node": "SessionID",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Enviar Mensagem de Bloqueio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Status do Cliente": {
      "main": [
        [],
        [
          {
            "node": "3. Limite < 3 pesquisas?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualizar Dados do Cliente": {
      "main": [
        [
          {
            "node": "Msg Boas-Vindas - Pós Cadastro",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualizar Dados do Cliente1": {
      "main": [
        []
      ]
    }
  },
  "createdAt": "2025-07-09T16:50:36.232Z",
  "id": "eLicaOSSgLEfbhks",
  "isArchived": false,
  "meta": null,
  "name": "My workflow 45",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "a32fc9f0-1a15-411c-960d-8e7266a7f58f",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        340,
        1160
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').first().json.file_id }}"
              }
            ]
          }
        }
      },
      "id": "f901e1a0-313a-4a80-80eb-7a0fab437db2",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        -1480,
        1760
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "b9d510c0-0439-4431-9190-647c0f4736f3",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        -1620,
        1800
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Busca Info no RAG",
        "height": 80,
        "width": 350,
        "color": 5
      },
      "id": "f9b72a43-c2dc-4252-a089-fdf49729e617",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        40,
        1400
      ]
    },
    {
      "parameters": {
        "content": "# Ferramenta para Adicionar um Arquivo do Google Drive ao Banco de Dados Vetorial.",
        "height": 80,
        "width": 1493,
        "color": 5
      },
      "id": "1ac2a9ed-62ee-46c2-ac0b-3ab797e94763",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2960,
        1260
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "4a7b73d6-e4a4-46ab-bd57-0c82f959f8b7",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -2520,
        1540
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "AMnU78157s5pFXnN",
          "name": "Google AiAgent"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 1,
              "unit": "minutes"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1ybSLMwFbTZkVdYly9LGyE7AV4-wwBETN",
          "mode": "list",
          "cachedResultName": "FindFruit",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1ybSLMwFbTZkVdYly9LGyE7AV4-wwBETN"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "51254404-c62f-4ce4-b255-e07199237638",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -3420,
        1480
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "AMnU78157s5pFXnN",
          "name": "Google AiAgent"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1ybSLMwFbTZkVdYly9LGyE7AV4-wwBETN",
          "mode": "list",
          "cachedResultName": "FindFruit",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1ybSLMwFbTZkVdYly9LGyE7AV4-wwBETN"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "7465f921-be26-4f3f-8b9b-5443aa9392cd",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -3420,
        1660
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "AMnU78157s5pFXnN",
          "name": "Google AiAgent"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "fd2fe0cb-6c95-4074-adeb-c01b5f1d9788",
      "name": "Extract Document Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -1940,
        1720
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "4b8117ae-be36-45c6-85b0-54983fe71d2b",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        120,
        1300
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documentos",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "id": "9ca0fc9a-f27e-485f-8eb9-5ab0b1455104",
      "name": "Delete Old Doc Rows",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3060,
        1520
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "c774ed34-0d67-44b7-a537-83810f357b7c",
              "name": "originalFilename",
              "value": "={{ $json.originalFilename }}",
              "type": "string"
            },
            {
              "id": "dff39c85-b4a2-45ba-a5ff-f4b311999efc",
              "name": "sha1Checksum",
              "value": "={{ $json.sha1Checksum }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "81c77dd5-5f1c-4ace-8c80-1864d15ee7e9",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3220,
        1520
      ]
    },
    {
      "parameters": {
        "content": "# Atendente IA",
        "height": 80,
        "width": 276,
        "color": 5
      },
      "id": "79f352dd-fa27-4de3-b5f9-f9bd22233dd7",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -640,
        620
      ]
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "d5712785-21ad-4c4e-a555-a9873278250e",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -1940,
        1360
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "636ef92c-716e-4413-b39b-9917224b2a27",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -1780,
        1540
      ]
    },
    {
      "parameters": {},
      "id": "0527bd6a-af65-4c48-8dec-77558ecf2b1f",
      "name": "Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        -1420,
        1920
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "348e5406-da1c-421d-9627-dccdef195c2e",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        -1640,
        1540
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 2
        }
      },
      "id": "8be17dd8-bcae-4fd7-a430-b054c9a9e2a8",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2340,
        1540
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documentos",
          "mode": "list",
          "cachedResultName": "documentos"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "9a59de59-d9e8-47be-9de1-9620ce219a1b",
      "name": "Insert into Supabase Vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -1520,
        1540
      ],
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documentos",
          "mode": "list",
          "cachedResultName": "documentos"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "3f67176f-172d-48ad-9be6-a5fa82b9caaf",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        40,
        1160
      ],
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "4269a4c8-2488-4250-886c-627cac176af5",
      "name": "Extract from Excel",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -1940,
        1540
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 660,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -660,
        600
      ],
      "typeVersion": 1,
      "id": "80899e4a-e297-4157-bf80-9f166bc52d17",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "",
        "height": 520,
        "width": 460,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        20,
        980
      ],
      "typeVersion": 1,
      "id": "31b9e562-bdc7-458b-bd54-2b8247334626",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "",
        "height": 800,
        "width": 2300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3500,
        1240
      ],
      "typeVersion": 1,
      "id": "411649d0-4575-44a2-8810-a6ef89103d1f",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Arquivos criados em uma pasta específica > Verificar o tipo de arquivo e realizar conversão > Extrair o texto > Adicionar ao Vector Store",
        "height": 80,
        "width": 1600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3480,
        1940
      ],
      "typeVersion": 1,
      "id": "ee1eec38-80a0-43c1-8f14-26cbb2327a79",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Gatilho de Monitoramento",
        "height": 440,
        "width": 213,
        "color": 5
      },
      "id": "1c074bf6-60dd-4d5d-aa2f-600756a45913",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3460,
        1380
      ]
    },
    {
      "parameters": {
        "amount": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"Tempo de resposta picada\"] }}"
      },
      "id": "84665b7b-1a59-47c5-b14b-092a40d46c21",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1700,
        880
      ],
      "webhookId": "a36d66d6-84c2-43e2-9f10-5b2c39d1d8f2"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
        "options": {}
      },
      "id": "530532b1-ec48-40fd-a0d6-05e97fcdfed3",
      "name": "Redis1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1540,
        880
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "21fd20d7-f940-4a66-91d5-5ea4c031bb50",
              "leftValue": "={{ $json.propertyName.last() }}",
              "rightValue": "={{ $('Variáveis').item.json.mensagem }}",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "711a6854-9a87-488d-a604-190f3a048713",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1220,
        880
      ]
    },
    {
      "parameters": {},
      "id": "99bc999b-d3d3-4e5a-a56d-6dcbab71f224",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1040,
        960
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "37f63b88-4a52-4421-aa95-db9114e521bc",
              "name": "listaMensagens",
              "value": "={{ $json.propertyName[0] }}",
              "type": "string"
            },
            {
              "id": "08b2e8c0-bc00-43ef-80bd-7a86bda2ee47",
              "name": "sessionId",
              "value": "={{ $item(\"0\").$node[\"SessionID\"].json[\"sessionid\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "78806e13-1410-492a-a701-cd6a33d8fd7b",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1060,
        760
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}"
      },
      "id": "d656494f-eed6-427f-bd99-24aa6bc659d1",
      "name": "Redis2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -780,
        760
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.ogg",
          "mimeType": "application/ogg"
        }
      },
      "id": "e70d0188-3202-4817-9cc3-62e3b9b6b2df",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2760,
        880
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "fa057564-5987-4725-b32c-0798296df18e",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2900,
        880
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.png",
          "mimeType": "image/png"
        }
      },
      "id": "7c2e04e8-3c89-41c3-89fc-e06a4c4f3be0",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2720,
        1040
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6c5ccd61-afdd-4edd-9123-7a0af1fd6640",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2900,
        1040
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ade56c50-1520-4760-8df5-e99617d6d3ad",
              "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "de2a2f3d-8189-44dc-b404-85c27a0c2bb5",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2240,
        1040
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
        "messageData": "={{ $item(\"0\").$node[\"OpenAI\"].json[\"text\"] }}",
        "tail": true
      },
      "id": "ee448f09-12ef-4453-927d-b250f808b773",
      "name": "Redis3",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2220,
        880
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
        "messageData": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}, {{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "1b987a14-b332-4eed-8215-91e6831a7515",
      "name": "Redis4",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2040,
        1060
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
        "messageData": "={{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "6b5cd527-c773-4094-aa04-b92e249446d8",
      "name": "Redis5",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1880,
        980
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "50cebc66-2dbc-4c7a-a09e-83ffb0f52991",
              "name": "mensagem",
              "value": "={{ $json.body.data.message.conversation || $json.body.data.message.extendedTextMessage.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "dc507eea-da52-4c38-bfcf-974a475a0d95",
      "name": "Extrair Mensagem de Texto",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3180,
        680
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "c144f42f-ef55-4a8f-b7af-950d2377b2fd",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -2600,
        880
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Descreva todo o conteudo da imagem. Responda sem acento, sem hifens",
        "inputType": "base64",
        "options": {}
      },
      "id": "8ba34360-6efa-4d1a-9fd9-5ce42278b1eb",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -2500,
        1040
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "find-fruit",
        "options": {}
      },
      "id": "0d8d422f-f3d3-40fc-a348-a873e6eb1dfb",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -5580,
        820
      ],
      "webhookId": "9b1c7c91-9c17-4560-af84-e4c13038b34f"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c0e434dd-1268-421d-b81b-3a5e90ed9550",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "d05f56ce-0ba2-44f5-8138-9672e4018e70",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -3320,
        780
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "41f2900b-4d2c-412e-9cad-9df5940e15eb",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        80,
        520
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "948c6e09-8187-4a98-abc9-b6c5cdb82f2d",
      "name": "Segmentos1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        340,
        280
      ]
    },
    {
      "parameters": {
        "amount": 1.2
      },
      "id": "28f37b42-e85d-4220-83e5-7993becee0dc",
      "name": "1,2s1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        800,
        300
      ],
      "webhookId": "dbbe1f5c-72f5-4e34-b693-d1af0efd9c64"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "9a3093d1-cd07-4687-b1e4-88a4a6c40af1",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        520,
        280
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "d28f5623-801a-416d-8071-b875def63a6e",
      "name": "OutputParser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        240,
        520
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a saída no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, não é mesmo?\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\n\n### Jamais separe uma mensagem vazia.\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do whatsapp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- ~tachado~ (caso seja algo que foi excluído ou alterado)\n\t\t\t- _itálico_.(extremamente raro)\n            - `link` (usar sempre em todos os links)\n\nTudo o que for link, pode colocar entre \"`\", ou seja, na seguinte formatação: `www.link.com.br`\n"
            }
          ]
        }
      },
      "id": "03447971-ab57-4c07-bb54-8a89f6405bb9",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        40,
        280
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "find-fruit",
        "remoteJid": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
        "messageText": "={{ $json.output }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1040,
        300
      ],
      "id": "8c81fef4-01cf-4ea4-8c85-596d662379dc",
      "name": "Evolution API",
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Pausa para mensagens",
        "height": 140,
        "width": 376,
        "color": 5
      },
      "id": "98a4ed0b-aa0b-42f8-b923-49c679e06dc0",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2320,
        540
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 680,
        "width": 1660,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2340,
        520
      ],
      "typeVersion": 1,
      "id": "75624c44-22a3-4913-9029-47590c39a81f",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "",
        "height": 500,
        "width": 1300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        20,
        140
      ],
      "typeVersion": 1,
      "id": "de1de095-ea52-46d2-94ce-1db306678058",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "# Divisão de Mensagens Inteligente - Texto",
        "height": 80,
        "width": 736,
        "color": 5
      },
      "id": "6041c430-4c19-48ef-aeec-4c7d65219f29",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        40,
        160
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 780,
        "width": 1020,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3220,
        500
      ],
      "typeVersion": 1,
      "id": "5aea9c63-b319-48f9-9976-c085c3109b4f",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "content": "# Classifica Mensagens",
        "height": 80,
        "width": 396,
        "color": 5
      },
      "id": "2cb8badf-131d-4297-bf0b-be8e8ccea07b",
      "name": "Sticky Note21",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2880,
        560
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 600,
        "width": 1240,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -6700,
        -160
      ],
      "typeVersion": 1,
      "id": "1f8429bf-0074-4132-99fe-5fff07d10219",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "content": "# Controle de Acesso e SDR",
        "height": 80,
        "width": 596,
        "color": 5
      },
      "id": "cae8fd91-3132-4c4f-8d70-b4e784987b0a",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -6520,
        -20
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "id": "dbb9f5b7-b284-4047-a19a-e7caca0cb6c9",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -140,
        760
      ]
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "id": "2dd67a07-6721-47db-97e9-dc723bb491bb",
      "name": "Audio-Base64-Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        420,
        780
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.elevenlabs.io/v1/text-to-speech/{{ $item(\"0\").$node[\"Variáveis\"].json[\"ID_Voz_Elevenlabs\"] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "xi-api-key",
              "value": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"API_Elevenlabs\"] }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n   \"text\":\"'{{ $json.textoSemQuebrasNemEmojis }}'\",\n   \"model_id\":\"eleven_multilingual_v2\",\n   \"voice_settings\":{\n      \"stability\":0.5,\n      \"similarity_boost\":0.8,\n      \"style\":0.0,\n      \"use_speaker_boost\":true\n   }\n} ",
        "options": {}
      },
      "id": "a83c4efe-3c22-473f-a8fd-31110b8c7044",
      "name": "ElevenLabsGenerateVoice",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        220,
        780
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "resource": "messages-api",
        "operation": "send-audio",
        "instanceName": "find-fruit",
        "remoteJid": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
        "media": "={{ $item(\"0\").$node[\"Audio-Base64-Extract from File\"].json[\"data\"] }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        620,
        780
      ],
      "id": "4ff9da52-eeea-4caf-aabb-def65f3db923",
      "name": "Evolution API1",
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 300,
        "width": 740,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        20,
        660
      ],
      "typeVersion": 1,
      "id": "ab1a50cb-b42e-4951-aa79-5d5a07519ef3",
      "name": "Sticky Note24"
    },
    {
      "parameters": {
        "content": "# Resposta em Áudio",
        "height": 80,
        "width": 376,
        "color": 5
      },
      "id": "eb5ecadd-d474-4f98-af5f-5cd6cfda288f",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        40,
        680
      ]
    },
    {
      "parameters": {
        "content": "## Webhook inicio",
        "height": 280,
        "width": 420,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5600,
        720
      ],
      "typeVersion": 1,
      "id": "14654c42-25c1-4658-a3e7-21494c6b519f",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "jsCode": "// Obtém o primeiro item do fluxo\nconst item = $input.first();\n\n// Garante que há dados na entrada\nif (!item || !item.json || !item.json.output) {\n  throw new Error(\"A chave 'output' não foi encontrada no JSON de entrada.\");\n}\n\n// Processa o texto removendo todas as quebras de linha e emojis\nconst textoEntrada = item.json.output; // Use a chave correta para pegar o texto de entrada\n\n// Remove quebras de linha (\\n)\nlet textoProcessado = textoEntrada.replace(/\\n/g, \"\");\n\n// Remove emojis\ntextoProcessado = textoProcessado.replace(\n  /[\\u{1F600}-\\u{1F64F}]|[\\u{1F300}-\\u{1F5FF}]|[\\u{1F680}-\\u{1F6FF}]|[\\u{1F700}-\\u{1F77F}]|[\\u{1F780}-\\u{1F7FF}]|[\\u{1F800}-\\u{1F8FF}]|[\\u{1F900}-\\u{1F9FF}]|[\\u{1FA00}-\\u{1FA6F}]|[\\u{1FA70}-\\u{1FAFF}]|[\\u{2600}-\\u{26FF}]|[\\u{2700}-\\u{27BF}]|[\\u{FE00}-\\u{FE0F}]|[\\u{1F1E0}-\\u{1F1FF}]/gu,\n  \"\"\n);\n\n// Retorna o resultado\nreturn {\n  textoOriginal: textoEntrada,\n  textoSemQuebrasNemEmojis: textoProcessado,\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        60,
        780
      ],
      "id": "c0243826-4dd2-4ff3-aae6-92aff6a911cf",
      "name": "Code"
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini-2025-04-14",
        "options": {
          "topP": 0.9
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -660,
        900
      ],
      "id": "bd5ba9ff-23c0-42a7-8cf5-5383c8f56b5c",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Create a table to store your documents\ncreate table documentos (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -6220,
        1600
      ],
      "id": "51c73da2-cc3f-4e02-8a93-375fe0879f2e",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 280,
        "width": 260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -6280,
        1480
      ],
      "typeVersion": 1,
      "id": "b073779f-0a10-4869-a8db-ba7327c63810",
      "name": "Sticky Note31"
    },
    {
      "parameters": {
        "content": "## Cria tabela documentos",
        "height": 80,
        "width": 180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -6240,
        1500
      ],
      "typeVersion": 1,
      "id": "e9c3d1d2-8e7b-43da-b32f-6a4660691039",
      "name": "Sticky Note32"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CREATE TABLE dados_cliente (\n  id bigserial primary key,\n  name text,\n  phone text,\n  sessionid text,\n  created_at TIMESTAMPTZ,\n  consultas_realizadas integer default 0\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -6500,
        1600
      ],
      "id": "fceb89e5-4502-46db-be04-c80ff099015d",
      "name": "SQL para criar tabela cliente",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 280,
        "width": 260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -6560,
        1480
      ],
      "typeVersion": 1,
      "id": "091fe659-7588-48b9-889d-714451450d43",
      "name": "Sticky Note33"
    },
    {
      "parameters": {
        "content": "## Cria tabela dados_cliente",
        "height": 80,
        "width": 180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -6520,
        1500
      ],
      "typeVersion": 1,
      "id": "e822ac80-8ea5-4fd9-a78f-3c19ee79fd87",
      "name": "Sticky Note34"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from dados_cliente",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -6480,
        1980
      ],
      "id": "6303e302-919b-4893-b701-6b2e23e2444e",
      "name": "Postgres2",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -6560,
        1800
      ],
      "typeVersion": 1,
      "id": "29a1acb5-673a-461f-8f26-177373a1a9cd",
      "name": "Sticky Note35"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela dados_cliente",
        "height": 120,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -6520,
        1820
      ],
      "typeVersion": 1,
      "id": "12321fff-369f-4fad-858b-397704430891",
      "name": "Sticky Note36"
    },
    {
      "parameters": {
        "jsCode": "return $items(\"Set File ID\").map(item => {\n  return {\n    json: {\n      file_id: item.json.file_id,\n      file_type: item.json.file_type\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2900,
        1520
      ],
      "id": "7fe47e0d-1916-4e26-a939-f0dd890bb983",
      "name": "Code2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -2740,
        1520
      ],
      "id": "fd6e0d65-3332-4fbc-928b-69374e7423de",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from documents",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -6200,
        1980
      ],
      "id": "c5c1bc8f-7811-49b3-b2d6-d2eaa381d07b",
      "name": "Postgres3",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -6280,
        1800
      ],
      "typeVersion": 1,
      "id": "c7c4813b-5ea5-4c22-9eb1-b6133dab79e1",
      "name": "Sticky Note37"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela documentos",
        "height": 120,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -6240,
        1820
      ],
      "typeVersion": 1,
      "id": "82dfa342-e5a1-4949-b524-1e9ef3487444",
      "name": "Sticky Note38"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from n8n_chat_histories",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -5820,
        1760
      ],
      "id": "55784625-cecd-4e83-b8a0-736fed771b46",
      "name": "Postgres4",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5900,
        1600
      ],
      "typeVersion": 1,
      "id": "2c85078f-d17c-4142-aea8-a119c0d6afef",
      "name": "Sticky Note39"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela chat",
        "height": 80,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5860,
        1620
      ],
      "typeVersion": 1,
      "id": "ac923254-9ed5-47d2-8bcb-7068751a1388",
      "name": "Sticky Note40"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Edit Fields1').item.json.sessionId }}",
        "contextWindowLength": 1000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -540,
        900
      ],
      "id": "1f8dc28b-746d-43b1-83bb-8c7d62867780",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_Whats"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}"
            },
            {
              "keyName": "name",
              "condition": "eq",
              "keyValue": "={{ $json.body.data.pushName }}"
            },
            {
              "keyName": "consultas_realizadas",
              "condition": "eq",
              "keyValue": "={{ ($json.consultas_realizadas ?? 0) }}"
            },
            {
              "keyName": "status",
              "condition": "eq"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -5120,
        820
      ],
      "id": "bcc97b31-5324-4c2d-8a53-1a6c350cf59f",
      "name": "1. Pegar Dados do Cliente",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $json.length }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "larger"
              }
            },
            {
              "id": "014de201-78ae-4b7c-878d-8ec07b5677b7",
              "leftValue": "={{ $json.telefone }}{{ $('Variáveis').item.json.mobile }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "5346fbf8-c638-4f62-a8b5-e316f42a36c3",
              "leftValue": "={{ $json.status }}",
              "rightValue": "awaiting_registration",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4780,
        820
      ],
      "id": "5e3d9984-ac43-4f88-a1cc-0945f0824f4e",
      "name": "2. Cliente Existe?"
    },
    {
      "parameters": {
        "action": "generate"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -4540,
        200
      ],
      "id": "cf733e2e-6f23-4551-8087-90dff6e232f9",
      "name": "2a. Gerar sessionID"
    },
    {
      "parameters": {
        "tableId": "dados_cliente",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}"
            },
            {
              "fieldId": "sessionid",
              "fieldValue": "={{ $item(\"0\").$node[\"2a. Gerar sessionID\"].json[\"data\"] }}"
            },
            {
              "fieldId": "created_at",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "consultas_realizadas",
              "fieldValue": 0
            },
            {
              "fieldId": "status",
              "fieldValue": "awaiting_registration"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4240,
        200
      ],
      "id": "d60663fb-6abc-4b68-86c7-9eeb6233a6a0",
      "name": "2b. Cadastrar Novo Cliente",
      "retryOnFail": true,
      "maxTries": 2,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3640,
        580
      ],
      "id": "4a7d3f77-1f81-45c8-b9a0-b57982c65eb0",
      "name": "SessionID",
      "retryOnFail": true,
      "maxTries": 2,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d88c137-383f-4307-b3cc-1f6a560ea67b",
              "name": "mobile",
              "value": "={{  $json.body.data.key.remoteJid.replace(/\\D/g, '').replace(/^55(\\d{2})(\\d{8})$/, '55$19$2') }}",
              "type": "string"
            },
            {
              "id": "104b3cd0-d988-4c58-a175-2ca5465bf8c1",
              "name": "API_Elevenlabs",
              "value": "sk_f8b0546f2d0dbcbd3fa6510a3ec468d249dfdb7823311901",
              "type": "string"
            },
            {
              "id": "6065b018-8dc0-49db-8da9-f692f96e9c92",
              "name": "ID_Voz_Elevenlabs",
              "value": "=9BWtsMINqrJLrRacOk9x",
              "type": "string"
            },
            {
              "id": "4e2bdc18-93a5-4117-b94e-bcfd228a7379",
              "name": "Tempo de resposta picada",
              "value": "2",
              "type": "string"
            },
            {
              "id": "0d4a900f-af55-4472-824f-1d06a25de052",
              "name": "Instancia_Evolution",
              "value": "find-fruit",
              "type": "string"
            },
            {
              "id": "9f80f8f6-a917-4af3-b77e-fa1f93d38cca",
              "name": "URL_Evolution",
              "value": "apiwp.aiagentautomate.com.br/",
              "type": "string"
            },
            {
              "id": "c6b307cf-ac0d-4273-8895-3c601b9b909b",
              "name": "KEY_Evo",
              "value": "B8493D438D72-4C34-97CC-4C9A4A257C0A",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "6bd59a6a-ce2d-479d-b54b-d7af57a8d83d",
      "name": "Variáveis",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5360,
        820
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Variáveis').item.json.mobile }}",
        "messageData": "={{ $json.data.message.conversation }}",
        "tail": true
      },
      "id": "90aac4f0-864c-411c-807a-7593f10ddb93",
      "name": "Redis",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2220,
        700
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.listaMensagens }}",
        "options": {
          "systemMessage": "=# FindFruit 🍎\n\nVocê é o **FindFruit**, um agente inteligente especializado em identificar frutas, legumes e verduras por imagens, utilizando informações das receitas detalhadas obtidas no arquivo Receitas Findfruit método RAG (Retrieval-Augmented Generation). Ao receber uma imagem, realize uma análise completa e forneça uma resposta direta, clara e amigável conforme o modelo abaixo:\n\n✅ **[Nome da fruta/legume/verdura]** [estado: verde, maduro ou passado]!\n\n🍃 **Informações nutricionais:**\n- Carboidratos: XX g\n- Proteínas: XX g\n- Gorduras: XX g\n- Vitaminas: [Principais vitaminas, exemplo: C, A]\n\n📅 **Melhor época:** [mês inicial - mês final]\n\n🥗 **Receita sugerida:** [nome sugestivo de receita relacionada]\n\n---\n\n### 📝 Regras para resposta:\n\n- **NUNCA REPITA RESPOSTA**\n- Sempre inicie com um emoji ✅ seguido do nome do item identificado e seu estado de maturação.\n- Forneça uma tabela nutricional resumida com o emoji 🍃.\n- Informe o período ideal de consumo com o emoji 📅.\n- Sugira uma receita curta e prática relacionada ao alimento identificado com o emoji 🥗.\n- Caso não consiga identificar claramente o item, responda gentilmente: \"Desculpe, não consegui identificar claramente a imagem. Poderia enviar outra foto?\"\n- Não acrescente explicações adicionais além do formato fornecido.\n- Tool **dados_IA**:\nUse sempre essa ferramenta para obter quais quer informações das receitas no arquivo Receitas Findfruit\n\n\n"
        }
      },
      "id": "432d4be4-1392-4b80-9611-effd9c98ee0c",
      "name": "Atendente",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -500,
        760
      ]
    },
    {
      "parameters": {
        "description": "=Use sempre esse aplicativo quando precisar da uma resposata mais precisa e sem erros , não reapsse nem uma informação interna ou pensamentos, apenas conclua a mensagem de maneira correta sem delirios. "
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        -260,
        960
      ],
      "id": "618ae5f1-7d8d-48ca-bea4-d3491c1cbec6",
      "name": "Think"
    },
    {
      "parameters": {
        "name": "dados_IA",
        "description": "Contém todas as informações sobre receitas que você pode consultar para responder às perguntas dos usuários. Use sempre esta ferramenta para obter qualquer informação sobre receitas."
      },
      "id": "79731e2b-db38-4de2-bab1-2ab17234d971",
      "name": "dados_IA",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        120,
        1020
      ]
    },
    {
      "parameters": {
        "jsCode": "// Mantém só o primeiro item da lista\nreturn [items[0]];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1380,
        880
      ],
      "id": "200b2be7-633e-4510-80b1-787efa4f84cc",
      "name": "Code1"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "find-fruit",
        "remoteJid": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
        "messageText": "=Olá, {{ $('Variáveis').item.json.body.data.pushName }}! 👋 Eu sou o *Find Fruit Agent* 🍓🍌🥦, seu assistente para análise de frutas, legumes e verduras.Para começar, por favor, me informe seu *nome completo* e *e-mail*. ",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -4380,
        200
      ],
      "id": "95fdc24d-af4f-40f3-a1f0-38d869bfde10",
      "name": "2a.1. Msg Pedir Dados",
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d47b91b1-5505-4657-b204-a011517dd0ad",
              "leftValue": "={{ $json.body.data.message.conversation || $json.body.data.message.extendedTextMessage.text }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "isEmpty"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2740,
        700
      ],
      "id": "a19f21d8-516a-4bf6-840e-7fea51ff595e",
      "name": "É a 1ª mensagem?"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "d48083c6-2917-48f5-961d-721245a49c4f",
              "leftValue": "={{ $json[0].consultas_realizadas }}",
              "rightValue": 3,
              "operator": {
                "type": "number",
                "operation": "smaller"
              }
            },
            {
              "id": "a1c04c13-ae48-4429-836e-60e1dfdcdc8a",
              "leftValue": "={{ $json.consultas_realizadas }}",
              "rightValue": 3,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "or"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": true
        }
      },
      "id": "206f54bc-08f5-4117-9a49-193e457b7709",
      "name": "3. Limite < 3 pesquisas?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3900,
        820
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('2b. Cadastrar Novo Cliente').item.json.id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "consultas_realizadas",
              "fieldValue": "={{ $json.consultas_realizadas + 1 }}"
            }
          ]
        }
      },
      "id": "d48f5a43-e247-40a1-82de-56284e1ed8d0",
      "name": "Incrementar Contagem de Pesquisa",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1260,
        300
      ],
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "find-fruit",
        "remoteJid": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
        "messageText": "Você atingiu o limite de 3 pesquisas gratuitas. 😥\n\nPara continuar utilizando nosso serviço e ter acesso ilimitado a todas as receitas e funcionalidades, por favor, considere assinar um de nossos planos. 🚀\n\nAcesse: [https://seusite.com/planos]",
        "options_message": {}
      },
      "id": "a274ff81-ca6c-43e9-99ca-7cc98a087e6c",
      "name": "Enviar Mensagem de Bloqueio",
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -3600,
        1060
      ],
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0df81e2b-da7f-4424-9b19-c16e780a42ea",
                    "leftValue": "={{ $json[0].status }}",
                    "rightValue": "awaiting_registration",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "01037877-ec07-4f9a-9e11-e4905106f2f9",
                    "leftValue": "={{ $json[0].status }}",
                    "rightValue": "registered",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 1
        }
      },
      "id": "152a09fc-f27a-4c39-826a-db290bd34e60",
      "name": "Verificar Status do Cliente",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -4260,
        820
      ]
    },
    {
      "parameters": {
        "options": {
          "responseFormat": "json_object"
        }
      },
      "id": "47759d2d-cb24-4c5d-a06e-d7c346ea1a22",
      "name": "Extrair Nome e Email",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -3660,
        1380
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "name",
              "fieldValue": "={{ $json.json.name }}"
            },
            {
              "fieldId": "email",
              "fieldValue": "={{ $json.json.email }}"
            },
            {
              "fieldId": "status",
              "fieldValue": "registered"
            }
          ]
        }
      },
      "id": "2be4aff0-8b8b-443e-a810-7f8e81eff900",
      "name": "Atualizar Dados do Cliente",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3200,
        440
      ],
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "find-fruit",
        "remoteJid": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
        "messageText": "Obrigado, {{ $item(0).$node['Extrair Nome e Email'].json.json.name }}! Seu cadastro foi concluído. ✅\n\nAgora sim, estou pronto! Pode me enviar a foto da fruta, legume ou verdura que eu analiso para você. 📸",
        "options_message": {}
      },
      "id": "b4d17738-3ee0-4bd4-8ff5-c891292f9564",
      "name": "Msg Boas-Vindas - Pós Cadastro",
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -3060,
        440
      ],
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "name",
              "fieldValue": "={{ $('Variáveis').item.json.body.data.pushName }}"
            },
            {
              "fieldId": "email",
              "fieldValue": "="
            },
            {
              "fieldId": "status",
              "fieldValue": "registered"
            }
          ]
        }
      },
      "id": "7abceb9c-7e46-45b3-a0a9-1b17065e5716",
      "name": "Atualizar Dados do Cliente1",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4220,
        1760
      ],
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    }
  ],
  "pinData": {},
  "repo_name": "backup-n8n",
  "repo_owner": "faelsou",
  "repo_path": "backups/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:File Created": {
      "lastTimeChecked": "2025-07-09T18:09:01Z"
    },
    "node:File Updated": {
      "lastTimeChecked": "2025-07-09T18:09:02Z"
    }
  },
  "tags": [],
  "triggerCount": 3,
  "updatedAt": "2025-07-11T14:51:32.970Z",
  "versionId": "ea873a57-237e-4d7b-a53e-71358c39dab3"
}