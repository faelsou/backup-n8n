{
  "active": false,
  "connections": {
    "n8n": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Config": {
      "main": [
        [
          {
            "node": "Get file data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new": {
      "main": [
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Create sub path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Same file - Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Failed Flows": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data": {
      "main": [
        [
          {
            "node": "If file too large",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create sub path": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Completed Notification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Failed Flows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Starting Message": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If file too large": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Same file - Do nothing": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-02T07:49:31.478Z",
  "id": "YVNfBch9hGN8k2hz",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Backup to Github",
  "nodes": [
    {
      "parameters": {},
      "id": "4046aa91-7960-453a-8670-8d63c81d9d62",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        480,
        80
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Subworkflow",
        "height": 731.7039821513649,
        "width": 1910.7813046051347,
        "color": 6
      },
      "id": "ceba7dca-a8fd-4f46-871d-5b0fa80c7fa4",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        464
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "d9b4347c-7b07-4379-91a5-4d57a10b7b48",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        64,
        848
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "84190b1d-1f1f-4f50-9fc7-748a229d5e8f",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        880,
        192
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "fUsfeaHO0wdmKpr9",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "d0858b8a-aa29-4f63-af97-2fd12660d3fd",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        1728,
        672
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "2e93f76f-ee92-4cad-bd1c-13eeb436598c",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        688,
        544
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "9f0db724-6260-45c2-b505-87aa95ef66b4",
      "name": "If file too large",
      "type": "n8n-nodes-base.if",
      "position": [
        448,
        560
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "a6467321-3ed5-4557-bc68-05bda7691969",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        448,
        832
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"
      },
      "id": "552ec2de-d8f5-4dc7-8bb9-5e6f69bd7596",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        640,
        832
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.github_status}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "23258597-37df-4d22-a7e6-173dee9439ba",
      "name": "Check Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        1040,
        832
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "bea19c09-b882-417e-a885-f264b41f2c90",
      "name": "Same file - Do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1264,
        672
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "c9401bd2-07a9-4c43-a5de-ba6d4c289bce",
      "name": "File is different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1264,
        832
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "77aaf12e-365f-43a2-a04a-aea76723deef",
      "name": "File is new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1264,
        1024
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "={{ $('Config').item.json.repo_owner }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').item.json.repo_name }}",
          "mode": ""
        },
        "filePath": "={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "ef6706fe-bbf4-4929-8897-a43d31fe5064",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        1488,
        1024
      ],
      "typeVersion": 1,
      "webhookId": "b5a4db2b-72c9-4b0e-adaa-cf48501ad3ce",
      "credentials": {
        "githubOAuth2Api": {
          "id": "PRb1y9x4iWp22Pr5",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "mode": "",
          "value": "={{ $('Config').first().item.repo_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "",
          "value": "={{ $('Config').first().item.repo_name }}"
        },
        "filePath": "={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "2bd916a6-084b-4f12-8faa-a63e473ac4b4",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        1488,
        832
      ],
      "typeVersion": 1,
      "webhookId": "170a3250-cbfc-4c58-b135-074fd54b7897",
      "credentials": {
        "githubOAuth2Api": {
          "id": "PRb1y9x4iWp22Pr5",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "35d82d4a-d69c-4a39-adbf-a9229ba01ac8",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1088,
        192
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 1,
              "triggerAtMinute": 33
            }
          ]
        }
      },
      "id": "1a1a54dc-05a8-42d3-a69b-d2f35e5e5869",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        480,
        288
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dae43d3b-56e5-4098-b602-862ebf5cd073",
              "name": "subPath",
              "type": "string",
              "value": "={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "c93e584f-60ea-420f-9ec4-926496ddb9a4",
      "name": "Create sub path",
      "type": "n8n-nodes-base.set",
      "position": [
        848,
        832
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "content": "## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.",
        "height": 465,
        "width": 385,
        "color": 4
      },
      "id": "1bd41eb9-8818-4b5c-8146-4d28211b43ce",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -464,
        -16
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Main workflow loop",
        "height": 416.1856906618075,
        "width": 1272.6408145680155,
        "color": 7
      },
      "id": "ea688dd9-d7a1-4f73-9f6d-70649f7b789b",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        448,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "#backupfluxos",
          "mode": "name"
        },
        "text": "=:information_source:  Starting Workflow Backup [{{ $execution.id }}]",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "id": "4e11f889-6337-4847-b738-c91f9e75c15b",
      "name": "Starting Message",
      "type": "n8n-nodes-base.slack",
      "position": [
        720,
        192
      ],
      "webhookId": "c02eb407-5547-4aa0-9ebf-46dab67b63b6",
      "typeVersion": 2.2,
      "credentials": {
        "slackOAuth2Api": {
          "id": "PA8mo1WmJVkdfUdH",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": "={{ $workflow.id }}",
        "mode": "each",
        "options": {}
      },
      "id": "a87234ee-9e2e-444b-871f-678c80b98937",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        1312,
        208
      ],
      "typeVersion": 1,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "#backupfluxos",
          "mode": "name"
        },
        "text": "=✅ Backup has completed - {{ $('n8n').all().length }} workflows have been processed.",
        "otherOptions": {}
      },
      "id": "1d4beb36-798d-4e88-a634-61763990dfc1",
      "name": "Completed Notification",
      "type": "n8n-nodes-base.slack",
      "position": [
        1312,
        32
      ],
      "webhookId": "a0c6e8c8-5d71-40fa-b02b-63a7ed5726c4",
      "executeOnce": true,
      "typeVersion": 2.2,
      "credentials": {
        "slackOAuth2Api": {
          "id": "PA8mo1WmJVkdfUdH",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "#backupfluxos",
          "mode": "name"
        },
        "text": "=:x: Failed to backup {{ $('Loop Over Items').item.json.id }}",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "id": "17924e85-781b-44e1-bb0e-278e439b92ed",
      "name": "Failed Flows",
      "type": "n8n-nodes-base.slack",
      "position": [
        1504,
        224
      ],
      "webhookId": "2a092edb-de12-490f-931b-34d70e7d7696",
      "typeVersion": 2.2,
      "credentials": {
        "slackOAuth2Api": {
          "id": "PA8mo1WmJVkdfUdH",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "= {{ $json.repo_owner }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $json.repo_name }}",
          "mode": ""
        },
        "filePath": "={{ $('Config').first().item.repo_path }}{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "7da2962e-9dc7-4d3c-81d5-d5ad53f153cd",
      "name": "Get file data",
      "type": "n8n-nodes-base.github",
      "position": [
        240,
        560
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "5d4e08fc-e518-44f8-b95b-ecba53efda93",
      "credentials": {
        "githubOAuth2Api": {
          "id": "PRb1y9x4iWp22Pr5",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f6d1741-772f-462a-811f-4c334185e4f0",
              "name": "repo_owner",
              "type": "string",
              "value": "faelsou"
            },
            {
              "id": "8cac215c-4fd7-422f-9fd2-6b2d1e5e0383",
              "name": "repo_name",
              "type": "string",
              "value": "=backup-n8n"
            },
            {
              "id": "eee305e9-4164-462a-86bd-80f0d58a31ae",
              "name": "repo_path",
              "type": "string",
              "value": "=backups/"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "16c90fdc-be53-4e59-aa49-9631b259005b",
      "name": "Config",
      "type": "n8n-nodes-base.set",
      "position": [
        240,
        848
      ],
      "typeVersion": 3.4
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "createdAt": "2025-07-12T02:28:28.931Z",
          "updatedAt": "2025-07-27T08:10:18.930Z",
          "id": "fK72QsaPox42Ui4L",
          "name": "Agent FindFruit",
          "active": false,
          "isArchived": false,
          "nodes": [
            {
              "parameters": {
                "options": {}
              },
              "id": "3b481a01-ff91-4d96-8279-5d027d18b312",
              "name": "OpenAI Chat Model1",
              "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
              "typeVersion": 1,
              "position": [
                7040,
                1328
              ],
              "credentials": {
                "openAiApi": {
                  "id": "4CT8zdx4hKi3971O",
                  "name": "OpenAi account"
                }
              }
            },
            {
              "parameters": {
                "jsonMode": "expressionData",
                "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
                "options": {
                  "metadata": {
                    "metadataValues": [
                      {
                        "name": "=file_id",
                        "value": "={{ $('Set File ID').first().json.file_id }}"
                      }
                    ]
                  }
                }
              },
              "id": "1f7c28a8-a24c-4ce2-874a-1aab7eda7717",
              "name": "Default Data Loader",
              "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
              "typeVersion": 1,
              "position": [
                5488,
                2112
              ]
            },
            {
              "parameters": {
                "model": "text-embedding-3-small",
                "options": {}
              },
              "id": "24aed42b-01d9-4f7c-a479-cb10dbec6aa6",
              "name": "Embeddings OpenAI1",
              "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
              "typeVersion": 1,
              "position": [
                5344,
                2144
              ],
              "credentials": {
                "openAiApi": {
                  "id": "4CT8zdx4hKi3971O",
                  "name": "OpenAi account"
                }
              }
            },
            {
              "parameters": {
                "content": "# Busca Info no RAG",
                "height": 80,
                "width": 350,
                "color": 5
              },
              "id": "c0d09680-df72-4038-b4da-efee47f900f2",
              "name": "Sticky Note",
              "type": "n8n-nodes-base.stickyNote",
              "typeVersion": 1,
              "position": [
                6752,
                1568
              ]
            },
            {
              "parameters": {
                "content": "# Ferramenta para Adicionar um Arquivo do Google Drive ao Banco de Dados Vetorial.",
                "height": 80,
                "width": 1493,
                "color": 5
              },
              "id": "fdb172a7-26bd-4144-94d2-adb55bccc53d",
              "name": "Sticky Note1",
              "type": "n8n-nodes-base.stickyNote",
              "typeVersion": 1,
              "position": [
                3568,
                1600
              ]
            },
            {
              "parameters": {
                "operation": "download",
                "fileId": {
                  "__rl": true,
                  "value": "={{ $json.file_id }}",
                  "mode": "id"
                },
                "options": {
                  "googleFileConversion": {
                    "conversion": {
                      "docsToFormat": "text/plain"
                    }
                  }
                }
              },
              "id": "03161e21-72d9-4fe9-a638-dbd747cc768f",
              "name": "Download File",
              "type": "n8n-nodes-base.googleDrive",
              "typeVersion": 3,
              "position": [
                4448,
                1888
              ],
              "executeOnce": true,
              "credentials": {
                "googleDriveOAuth2Api": {
                  "id": "AMnU78157s5pFXnN",
                  "name": "Google AiAgent"
                }
              }
            },
            {
              "parameters": {
                "pollTimes": {
                  "item": [
                    {
                      "mode": "everyX",
                      "value": 1,
                      "unit": "minutes"
                    }
                  ]
                },
                "triggerOn": "specificFolder",
                "folderToWatch": {
                  "__rl": true,
                  "value": "1ybSLMwFbTZkVdYly9LGyE7AV4-wwBETN",
                  "mode": "list",
                  "cachedResultName": "FindFruit",
                  "cachedResultUrl": "https://drive.google.com/drive/folders/1ybSLMwFbTZkVdYly9LGyE7AV4-wwBETN"
                },
                "event": "fileCreated",
                "options": {}
              },
              "id": "171f6ecd-8baa-4443-9d93-c7dffc1a7325",
              "name": "File Created",
              "type": "n8n-nodes-base.googleDriveTrigger",
              "typeVersion": 1,
              "position": [
                3552,
                1824
              ],
              "credentials": {
                "googleDriveOAuth2Api": {
                  "id": "AMnU78157s5pFXnN",
                  "name": "Google AiAgent"
                }
              }
            },
            {
              "parameters": {
                "pollTimes": {
                  "item": [
                    {
                      "mode": "everyMinute"
                    }
                  ]
                },
                "triggerOn": "specificFolder",
                "folderToWatch": {
                  "__rl": true,
                  "value": "1ybSLMwFbTZkVdYly9LGyE7AV4-wwBETN",
                  "mode": "list",
                  "cachedResultName": "FindFruit",
                  "cachedResultUrl": "https://drive.google.com/drive/folders/1ybSLMwFbTZkVdYly9LGyE7AV4-wwBETN"
                },
                "event": "fileUpdated",
                "options": {}
              },
              "id": "d3f63d7c-60b0-49d2-b3b0-4de30cea7afa",
              "name": "File Updated",
              "type": "n8n-nodes-base.googleDriveTrigger",
              "typeVersion": 1,
              "position": [
                3552,
                2000
              ],
              "credentials": {
                "googleDriveOAuth2Api": {
                  "id": "AMnU78157s5pFXnN",
                  "name": "Google AiAgent"
                }
              }
            },
            {
              "parameters": {
                "operation": "text",
                "options": {}
              },
              "id": "a9ce1ec5-013b-46f2-b34d-705b52a25dea",
              "name": "Extract Document Text",
              "type": "n8n-nodes-base.extractFromFile",
              "typeVersion": 1,
              "position": [
                5024,
                2064
              ],
              "alwaysOutputData": true
            },
            {
              "parameters": {
                "model": "text-embedding-3-small",
                "options": {}
              },
              "id": "ee8d02fc-bc18-47e5-b8de-8a539933fe53",
              "name": "Embeddings OpenAI",
              "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
              "typeVersion": 1,
              "position": [
                6832,
                1472
              ],
              "credentials": {
                "openAiApi": {
                  "id": "4CT8zdx4hKi3971O",
                  "name": "OpenAi account"
                }
              }
            },
            {
              "parameters": {
                "operation": "delete",
                "tableId": "documentos",
                "filterType": "string",
                "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
              },
              "id": "013dc73a-92fd-4af6-ab7e-b6b9f6408798",
              "name": "Delete Old Doc Rows",
              "type": "n8n-nodes-base.supabase",
              "typeVersion": 1,
              "position": [
                3904,
                1872
              ],
              "alwaysOutputData": true,
              "credentials": {
                "supabaseApi": {
                  "id": "r2uQFvlq0GDUjDGV",
                  "name": "Supabase account teste"
                }
              }
            },
            {
              "parameters": {
                "assignments": {
                  "assignments": [
                    {
                      "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
                      "name": "file_id",
                      "value": "={{ $json.id }}",
                      "type": "string"
                    },
                    {
                      "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
                      "name": "file_type",
                      "value": "={{ $json.mimeType }}",
                      "type": "string"
                    },
                    {
                      "id": "c774ed34-0d67-44b7-a537-83810f357b7c",
                      "name": "originalFilename",
                      "value": "={{ $json.originalFilename }}",
                      "type": "string"
                    },
                    {
                      "id": "dff39c85-b4a2-45ba-a5ff-f4b311999efc",
                      "name": "sha1Checksum",
                      "value": "={{ $json.sha1Checksum }}",
                      "type": "string"
                    }
                  ]
                },
                "options": {}
              },
              "id": "44b3bdbc-8231-4b78-8b4d-a04c72657117",
              "name": "Set File ID",
              "type": "n8n-nodes-base.set",
              "typeVersion": 3.4,
              "position": [
                3744,
                1872
              ]
            },
            {
              "parameters": {
                "content": "# Atendente IA",
                "height": 80,
                "width": 276,
                "color": 5
              },
              "id": "e904a8ec-0413-4da6-84f7-772437dcb4f2",
              "name": "Sticky Note2",
              "type": "n8n-nodes-base.stickyNote",
              "typeVersion": 1,
              "position": [
                6064,
                784
              ]
            },
            {
              "parameters": {
                "operation": "pdf",
                "options": {}
              },
              "id": "e1b00b54-564b-4be4-b699-c735d3a3de75",
              "name": "Extract PDF Text",
              "type": "n8n-nodes-base.extractFromFile",
              "typeVersion": 1,
              "position": [
                5024,
                1712
              ]
            },
            {
              "parameters": {
                "aggregate": "aggregateAllItemData",
                "options": {}
              },
              "id": "a53a935c-f1dc-478b-a0ff-3b4b28e131f8",
              "name": "Aggregate",
              "type": "n8n-nodes-base.aggregate",
              "typeVersion": 1,
              "position": [
                5184,
                1888
              ]
            },
            {
              "parameters": {},
              "id": "4bab1ab7-8cba-482e-92d6-af1dde6a1d1b",
              "name": "Character Text Splitter",
              "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
              "typeVersion": 1,
              "position": [
                5552,
                2272
              ]
            },
            {
              "parameters": {
                "fieldsToSummarize": {
                  "values": [
                    {
                      "aggregation": "concatenate",
                      "field": "data"
                    }
                  ]
                },
                "options": {}
              },
              "id": "4d59e55f-c7c4-40f3-bd70-9e81a37820ae",
              "name": "Summarize",
              "type": "n8n-nodes-base.summarize",
              "typeVersion": 1,
              "position": [
                5328,
                1888
              ]
            },
            {
              "parameters": {
                "rules": {
                  "values": [
                    {
                      "conditions": {
                        "options": {
                          "caseSensitive": true,
                          "leftValue": "",
                          "typeValidation": "strict",
                          "version": 1
                        },
                        "conditions": [
                          {
                            "leftValue": "={{ $json.file_type }}",
                            "rightValue": "application/pdf",
                            "operator": {
                              "type": "string",
                              "operation": "equals"
                            }
                          }
                        ],
                        "combinator": "and"
                      }
                    },
                    {
                      "conditions": {
                        "options": {
                          "caseSensitive": true,
                          "leftValue": "",
                          "typeValidation": "strict",
                          "version": 1
                        },
                        "conditions": [
                          {
                            "id": "2ae7faa7-a936-4621-a680-60c512163034",
                            "leftValue": "={{ $json.file_type }}",
                            "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                            "operator": {
                              "type": "string",
                              "operation": "equals",
                              "name": "filter.operator.equals"
                            }
                          }
                        ],
                        "combinator": "and"
                      }
                    },
                    {
                      "conditions": {
                        "options": {
                          "caseSensitive": true,
                          "leftValue": "",
                          "typeValidation": "strict",
                          "version": 1
                        },
                        "conditions": [
                          {
                            "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                            "leftValue": "={{ $json.file_type }}",
                            "rightValue": "application/vnd.google-apps.document",
                            "operator": {
                              "type": "string",
                              "operation": "equals",
                              "name": "filter.operator.equals"
                            }
                          }
                        ],
                        "combinator": "and"
                      }
                    }
                  ]
                },
                "options": {
                  "fallbackOutput": 2
                }
              },
              "id": "f3362301-dd8f-4590-a435-87a9464a09c0",
              "name": "Switch",
              "type": "n8n-nodes-base.switch",
              "typeVersion": 3,
              "position": [
                4624,
                1888
              ]
            },
            {
              "parameters": {
                "mode": "insert",
                "tableName": {
                  "__rl": true,
                  "value": "documentos",
                  "mode": "list",
                  "cachedResultName": "documentos"
                },
                "options": {
                  "queryName": "match_documents"
                }
              },
              "id": "3f38816f-c8cb-429b-9b9a-843ad6a16873",
              "name": "Insert into Supabase Vectorstore",
              "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
              "typeVersion": 1,
              "position": [
                5440,
                1888
              ],
              "credentials": {
                "supabaseApi": {
                  "id": "r2uQFvlq0GDUjDGV",
                  "name": "Supabase account teste"
                }
              }
            },
            {
              "parameters": {
                "tableName": {
                  "__rl": true,
                  "value": "documentos",
                  "mode": "list",
                  "cachedResultName": "documentos"
                },
                "options": {
                  "queryName": "match_documents"
                }
              },
              "id": "3fc9d552-9615-4fe6-a96b-4d8fbdbeee2f",
              "name": "Supabase Vector Store",
              "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
              "typeVersion": 1,
              "position": [
                6752,
                1328
              ],
              "credentials": {
                "supabaseApi": {
                  "id": "r2uQFvlq0GDUjDGV",
                  "name": "Supabase account teste"
                }
              }
            },
            {
              "parameters": {
                "operation": "xlsx",
                "options": {}
              },
              "id": "de97793b-5b73-4d14-88ea-9f5c0026519a",
              "name": "Extract from Excel",
              "type": "n8n-nodes-base.extractFromFile",
              "typeVersion": 1,
              "position": [
                5024,
                1888
              ]
            },
            {
              "parameters": {
                "content": "",
                "height": 620,
                "width": 660,
                "color": 5
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                6048,
                768
              ],
              "typeVersion": 1,
              "id": "434ff423-69cf-41f3-917e-22425b166726",
              "name": "Sticky Note4"
            },
            {
              "parameters": {
                "content": "",
                "height": 520,
                "width": 460,
                "color": 3
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                6720,
                1152
              ],
              "typeVersion": 1,
              "id": "d9f78ef2-18a8-4a68-835b-98152af51717",
              "name": "Sticky Note5"
            },
            {
              "parameters": {
                "content": "",
                "height": 800,
                "width": 2300,
                "color": 3
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                3472,
                1584
              ],
              "typeVersion": 1,
              "id": "cdc9c78d-a74c-4e4d-9679-5bbbfd9c8aee",
              "name": "Sticky Note6"
            },
            {
              "parameters": {
                "content": "## Arquivos criados em uma pasta específica > Verificar o tipo de arquivo e realizar conversão > Extrair o texto > Adicionar ao Vector Store",
                "height": 80,
                "width": 1600,
                "color": 5
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                3488,
                2288
              ],
              "typeVersion": 1,
              "id": "214bf4fc-ce47-4a9e-9434-495c3f2e4312",
              "name": "Sticky Note12"
            },
            {
              "parameters": {
                "content": "## Gatilho de Monitoramento",
                "height": 440,
                "width": 213,
                "color": 5
              },
              "id": "5c1fcca3-6b17-4fe0-bdcf-678cd5be1ef9",
              "name": "Sticky Note10",
              "type": "n8n-nodes-base.stickyNote",
              "typeVersion": 1,
              "position": [
                3504,
                1728
              ]
            },
            {
              "parameters": {
                "amount": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"Tempo de resposta picada\"] }}"
              },
              "id": "3c60336d-3da4-41b4-9c10-6e159d01d1a5",
              "name": "Wait",
              "type": "n8n-nodes-base.wait",
              "typeVersion": 1.1,
              "position": [
                5008,
                1040
              ],
              "webhookId": "a36d66d6-84c2-43e2-9f10-5b2c39d1d8f2"
            },
            {
              "parameters": {
                "operation": "get",
                "key": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
                "options": {}
              },
              "id": "a1357d52-fb65-42a2-be72-93de2926832d",
              "name": "Redis1",
              "type": "n8n-nodes-base.redis",
              "typeVersion": 1,
              "position": [
                5168,
                1040
              ],
              "credentials": {
                "redis": {
                  "id": "3aF3lSIIig1BrDmo",
                  "name": "Redis account 2"
                }
              }
            },
            {
              "parameters": {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "21fd20d7-f940-4a66-91d5-5ea4c031bb50",
                      "leftValue": "={{ $json.propertyName.last() }}",
                      "rightValue": "={{ $('Variáveis').item.json.mensagem }}",
                      "operator": {
                        "type": "string",
                        "operation": "exists",
                        "singleValue": true
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "options": {}
              },
              "id": "123f54fa-ed51-4ea9-993c-5ffaf6968265",
              "name": "If",
              "type": "n8n-nodes-base.if",
              "typeVersion": 2.2,
              "position": [
                5488,
                1040
              ]
            },
            {
              "parameters": {},
              "id": "76be9cff-56c1-4839-87e0-a3a7f16e6080",
              "name": "No Operation, do nothing",
              "type": "n8n-nodes-base.noOp",
              "typeVersion": 1,
              "position": [
                5664,
                1120
              ]
            },
            {
              "parameters": {
                "assignments": {
                  "assignments": [
                    {
                      "id": "37f63b88-4a52-4421-aa95-db9114e521bc",
                      "name": "listaMensagens",
                      "value": "={{ $json.propertyName[0] }}",
                      "type": "string"
                    },
                    {
                      "id": "08b2e8c0-bc00-43ef-80bd-7a86bda2ee47",
                      "name": "sessionId",
                      "value": "={{ $item(\"0\").$node[\"SessionID\"].json[\"sessionid\"] }}",
                      "type": "string"
                    }
                  ]
                },
                "options": {}
              },
              "id": "64b6b2ad-546b-4c5a-bff5-c511e043916f",
              "name": "Edit Fields1",
              "type": "n8n-nodes-base.set",
              "typeVersion": 3.4,
              "position": [
                5648,
                928
              ]
            },
            {
              "parameters": {
                "operation": "delete",
                "key": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}"
              },
              "id": "370352a3-edae-434e-8a99-39908957965e",
              "name": "Redis2",
              "type": "n8n-nodes-base.redis",
              "typeVersion": 1,
              "position": [
                5920,
                928
              ],
              "credentials": {
                "redis": {
                  "id": "3aF3lSIIig1BrDmo",
                  "name": "Redis account 2"
                }
              }
            },
            {
              "parameters": {
                "operation": "toBinary",
                "sourceProperty": "data",
                "options": {
                  "fileName": "file.ogg",
                  "mimeType": "application/ogg"
                }
              },
              "id": "fe8404e5-555b-48cf-92d8-57ef75470211",
              "name": "Convert to File",
              "type": "n8n-nodes-base.convertToFile",
              "typeVersion": 1.1,
              "position": [
                3952,
                1040
              ]
            },
            {
              "parameters": {
                "assignments": {
                  "assignments": [
                    {
                      "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
                      "name": "data",
                      "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
                      "type": "string"
                    }
                  ]
                },
                "options": {}
              },
              "id": "10b93282-0af1-4389-8d8e-61262b1605b3",
              "name": "Edit Fields",
              "type": "n8n-nodes-base.set",
              "typeVersion": 3.4,
              "position": [
                3808,
                1040
              ]
            },
            {
              "parameters": {
                "operation": "toBinary",
                "sourceProperty": "data",
                "options": {
                  "fileName": "file.png",
                  "mimeType": "image/png"
                }
              },
              "id": "a2ef943d-ce86-4426-85be-005d84c57c3c",
              "name": "Convert to File1",
              "type": "n8n-nodes-base.convertToFile",
              "typeVersion": 1.1,
              "position": [
                3984,
                1200
              ]
            },
            {
              "parameters": {
                "assignments": {
                  "assignments": [
                    {
                      "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
                      "name": "data",
                      "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
                      "type": "string"
                    }
                  ]
                },
                "options": {}
              },
              "id": "63855d80-115a-4f2f-bac2-aab244d7215b",
              "name": "Edit Fields3",
              "type": "n8n-nodes-base.set",
              "typeVersion": 3.4,
              "position": [
                3808,
                1200
              ]
            },
            {
              "parameters": {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 1
                  },
                  "conditions": [
                    {
                      "id": "ade56c50-1520-4760-8df5-e99617d6d3ad",
                      "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}",
                      "rightValue": "",
                      "operator": {
                        "type": "string",
                        "operation": "empty",
                        "singleValue": true
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "options": {}
              },
              "id": "9aeff885-623e-4d5d-a192-0e9227e4d992",
              "name": "If3",
              "type": "n8n-nodes-base.if",
              "typeVersion": 2,
              "position": [
                4464,
                1200
              ]
            },
            {
              "parameters": {
                "operation": "push",
                "list": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
                "messageData": "={{ $item(\"0\").$node[\"OpenAI\"].json[\"text\"] }}",
                "tail": true
              },
              "id": "a043594e-9f92-41e9-809f-74b26802212e",
              "name": "Redis3",
              "type": "n8n-nodes-base.redis",
              "typeVersion": 1,
              "position": [
                4480,
                1040
              ],
              "credentials": {
                "redis": {
                  "id": "3aF3lSIIig1BrDmo",
                  "name": "Redis account 2"
                }
              }
            },
            {
              "parameters": {
                "operation": "push",
                "list": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
                "messageData": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}, {{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
                "tail": true
              },
              "id": "181c23cd-1fd2-41c4-b381-a0347b77ac0f",
              "name": "Redis4",
              "type": "n8n-nodes-base.redis",
              "typeVersion": 1,
              "position": [
                4672,
                1232
              ],
              "credentials": {
                "redis": {
                  "id": "3aF3lSIIig1BrDmo",
                  "name": "Redis account 2"
                }
              }
            },
            {
              "parameters": {
                "operation": "push",
                "list": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
                "messageData": "={{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
                "tail": true
              },
              "id": "ac5e87f0-96ee-4491-9a9e-f82fc9b932bf",
              "name": "Redis5",
              "type": "n8n-nodes-base.redis",
              "typeVersion": 1,
              "position": [
                4832,
                1152
              ],
              "credentials": {
                "redis": {
                  "id": "3aF3lSIIig1BrDmo",
                  "name": "Redis account 2"
                }
              }
            },
            {
              "parameters": {
                "assignments": {
                  "assignments": [
                    {
                      "id": "50cebc66-2dbc-4c7a-a09e-83ffb0f52991",
                      "name": "mensagem",
                      "value": "={{ $json.body.data.message.conversation || $json.body.data.message.extendedTextMessage.text }}",
                      "type": "string"
                    }
                  ]
                },
                "options": {}
              },
              "id": "30d2b60d-eba3-45c1-a18d-e123852268dc",
              "name": "Extrair Mensagem de Texto",
              "type": "n8n-nodes-base.set",
              "typeVersion": 3.4,
              "position": [
                3600,
                880
              ]
            },
            {
              "parameters": {
                "resource": "audio",
                "operation": "transcribe",
                "options": {}
              },
              "id": "75922cee-d41a-4765-92e1-d365be680e1a",
              "name": "OpenAI",
              "type": "@n8n/n8n-nodes-langchain.openAi",
              "typeVersion": 1.6,
              "position": [
                4112,
                1040
              ],
              "credentials": {
                "openAiApi": {
                  "id": "4CT8zdx4hKi3971O",
                  "name": "OpenAi account"
                }
              }
            },
            {
              "parameters": {
                "resource": "image",
                "operation": "analyze",
                "modelId": {
                  "__rl": true,
                  "value": "gpt-4o-mini",
                  "mode": "list",
                  "cachedResultName": "GPT-4O-MINI"
                },
                "text": "Descreva todo o conteudo da imagem. Responda sem acento, sem hifens",
                "inputType": "base64",
                "options": {}
              },
              "id": "487bfdef-50a3-4dec-97f4-2e0b204bba00",
              "name": "OpenAI1",
              "type": "@n8n/n8n-nodes-langchain.openAi",
              "typeVersion": 1.6,
              "position": [
                4208,
                1200
              ],
              "credentials": {
                "openAiApi": {
                  "id": "4CT8zdx4hKi3971O",
                  "name": "OpenAi account"
                }
              }
            },
            {
              "parameters": {
                "httpMethod": "POST",
                "path": "find-fruit",
                "options": {}
              },
              "id": "afb74f0a-007c-42b8-80a7-14807aefb282",
              "name": "Webhook",
              "type": "n8n-nodes-base.webhook",
              "typeVersion": 2,
              "position": [
                1120,
                992
              ],
              "webhookId": "9b1c7c91-9c17-4560-af84-e4c13038b34f"
            },
            {
              "parameters": {
                "rules": {
                  "values": [
                    {
                      "conditions": {
                        "options": {
                          "caseSensitive": true,
                          "leftValue": "",
                          "typeValidation": "strict",
                          "version": 1
                        },
                        "conditions": [
                          {
                            "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                            "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                            "rightValue": "extendedTextMessage",
                            "operator": {
                              "type": "string",
                              "operation": "equals",
                              "name": "filter.operator.equals"
                            }
                          }
                        ],
                        "combinator": "and"
                      },
                      "renameOutput": true,
                      "outputKey": "text"
                    },
                    {
                      "conditions": {
                        "options": {
                          "caseSensitive": true,
                          "leftValue": "",
                          "typeValidation": "strict",
                          "version": 1
                        },
                        "conditions": [
                          {
                            "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                            "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                            "rightValue": "conversation",
                            "operator": {
                              "type": "string",
                              "operation": "equals",
                              "name": "filter.operator.equals"
                            }
                          }
                        ],
                        "combinator": "and"
                      },
                      "renameOutput": true,
                      "outputKey": "text"
                    },
                    {
                      "conditions": {
                        "options": {
                          "caseSensitive": true,
                          "leftValue": "",
                          "typeValidation": "strict",
                          "version": 1
                        },
                        "conditions": [
                          {
                            "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                            "rightValue": "audioMessage",
                            "operator": {
                              "type": "string",
                              "operation": "equals"
                            }
                          }
                        ],
                        "combinator": "and"
                      },
                      "renameOutput": true,
                      "outputKey": "audio"
                    },
                    {
                      "conditions": {
                        "options": {
                          "caseSensitive": true,
                          "leftValue": "",
                          "typeValidation": "strict",
                          "version": 1
                        },
                        "conditions": [
                          {
                            "id": "c0e434dd-1268-421d-b81b-3a5e90ed9550",
                            "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                            "rightValue": "imageMessage",
                            "operator": {
                              "type": "string",
                              "operation": "equals",
                              "name": "filter.operator.equals"
                            }
                          }
                        ],
                        "combinator": "and"
                      },
                      "renameOutput": true,
                      "outputKey": "image"
                    }
                  ]
                },
                "options": {}
              },
              "id": "afa351d3-136e-4ebf-803c-961c29dc8610",
              "name": "Switch1",
              "type": "n8n-nodes-base.switch",
              "typeVersion": 3,
              "position": [
                3200,
                944
              ]
            },
            {
              "parameters": {
                "options": {}
              },
              "id": "07e3e7d2-e63f-4554-82bf-9f51a5c17330",
              "name": "OpenAI3",
              "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
              "typeVersion": 1,
              "position": [
                6784,
                688
              ],
              "credentials": {
                "openAiApi": {
                  "id": "4CT8zdx4hKi3971O",
                  "name": "OpenAi account"
                }
              }
            },
            {
              "parameters": {
                "fieldToSplitOut": "output.messages",
                "options": {
                  "destinationFieldName": "output"
                }
              },
              "id": "a8ebbc7f-a850-4f33-a389-54aacbff774f",
              "name": "Segmentos1",
              "type": "n8n-nodes-base.splitOut",
              "typeVersion": 1,
              "position": [
                7040,
                448
              ]
            },
            {
              "parameters": {
                "amount": 1.2
              },
              "id": "3969b60c-d7cc-4771-a906-f887b92a83e0",
              "name": "1,2s1",
              "type": "n8n-nodes-base.wait",
              "typeVersion": 1.1,
              "position": [
                7504,
                464
              ],
              "webhookId": "dbbe1f5c-72f5-4e34-b693-d1af0efd9c64"
            },
            {
              "parameters": {
                "batchSize": 15,
                "options": {}
              },
              "id": "cf84a5ed-8c96-4a72-8520-774f05fdf5d8",
              "name": "Loop Over Items3",
              "type": "n8n-nodes-base.splitInBatches",
              "typeVersion": 3,
              "position": [
                7232,
                448
              ]
            },
            {
              "parameters": {
                "schemaType": "manual",
                "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
              },
              "id": "c228dcb2-edab-4cff-b8af-2edff80cbde8",
              "name": "OutputParser1",
              "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
              "typeVersion": 1.2,
              "position": [
                6944,
                688
              ]
            },
            {
              "parameters": {
                "promptType": "define",
                "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
                "hasOutputParser": true,
                "messages": {
                  "messageValues": [
                    {
                      "message": "=Por favor, gere a saída no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, não é mesmo?\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\n\n### Jamais separe uma mensagem vazia.\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do whatsapp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- ~tachado~ (caso seja algo que foi excluído ou alterado)\n\t\t\t- _itálico_.(extremamente raro)\n            - `link` (usar sempre em todos os links)\n\nTudo o que for link, pode colocar entre \"`\", ou seja, na seguinte formatação: `www.link.com.br`\n"
                    }
                  ]
                }
              },
              "id": "15412486-7ad5-456c-8310-8676c1ec24c3",
              "name": "Parser  Chain",
              "type": "@n8n/n8n-nodes-langchain.chainLlm",
              "typeVersion": 1.4,
              "position": [
                6752,
                448
              ]
            },
            {
              "parameters": {
                "resource": "messages-api",
                "instanceName": "find-fruit",
                "remoteJid": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
                "messageText": "={{ $json.output }}",
                "options_message": {}
              },
              "type": "n8n-nodes-evolution-api.evolutionApi",
              "typeVersion": 1,
              "position": [
                7744,
                464
              ],
              "id": "353f4f47-2278-4176-bbe4-f30c92d00c16",
              "name": "Evolution API",
              "credentials": {
                "evolutionApi": {
                  "id": "vBZUmfwmCqpNUkEJ",
                  "name": "Evolution account"
                }
              }
            },
            {
              "parameters": {
                "content": "# Pausa para mensagens",
                "height": 140,
                "width": 376,
                "color": 5
              },
              "id": "5e09e968-3ba3-4120-9475-799aa4174fb9",
              "name": "Sticky Note3",
              "type": "n8n-nodes-base.stickyNote",
              "typeVersion": 1,
              "position": [
                4608,
                704
              ]
            },
            {
              "parameters": {
                "content": "",
                "height": 680,
                "width": 1660,
                "color": 2
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                4368,
                688
              ],
              "typeVersion": 1,
              "id": "dcbfcc63-82a0-4312-acf3-038167729e32",
              "name": "Sticky Note17"
            },
            {
              "parameters": {
                "content": "",
                "height": 500,
                "width": 1540,
                "color": 3
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                6720,
                304
              ],
              "typeVersion": 1,
              "id": "4c6cd031-366a-47c2-a758-04dbb86e57bd",
              "name": "Sticky Note18"
            },
            {
              "parameters": {
                "content": "# Divisão de Mensagens Inteligente - Texto",
                "height": 80,
                "width": 736,
                "color": 5
              },
              "id": "d936b3df-1d62-4587-8b86-1101a0bb8017",
              "name": "Sticky Note19",
              "type": "n8n-nodes-base.stickyNote",
              "typeVersion": 1,
              "position": [
                6752,
                320
              ]
            },
            {
              "parameters": {
                "content": "",
                "height": 700,
                "width": 1020,
                "color": 3
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                3488,
                672
              ],
              "typeVersion": 1,
              "id": "7217d6d7-5705-4c7c-b1a2-3959c49a5ec5",
              "name": "Sticky Note20"
            },
            {
              "parameters": {
                "content": "# Classifica Mensagens",
                "height": 80,
                "width": 396,
                "color": 5
              },
              "id": "55716fda-1ffc-4c8c-bce0-d4523fffcee0",
              "name": "Sticky Note21",
              "type": "n8n-nodes-base.stickyNote",
              "typeVersion": 1,
              "position": [
                3824,
                720
              ]
            },
            {
              "parameters": {
                "content": "",
                "height": 380,
                "width": 1920,
                "color": 5
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                1520,
                864
              ],
              "typeVersion": 1,
              "id": "522bd898-ce85-4396-b9b5-87d428d95d9f",
              "name": "Sticky Note22"
            },
            {
              "parameters": {
                "content": "## Mensagem de Bloqueio\n",
                "height": 260,
                "width": 396,
                "color": 5
              },
              "id": "28a2e01b-8f87-4432-b054-e03c03a4f2da",
              "name": "Sticky Note23",
              "type": "n8n-nodes-base.stickyNote",
              "typeVersion": 1,
              "position": [
                2864,
                1328
              ]
            },
            {
              "parameters": {
                "rules": {
                  "values": [
                    {
                      "conditions": {
                        "options": {
                          "caseSensitive": true,
                          "leftValue": "",
                          "typeValidation": "strict",
                          "version": 1
                        },
                        "conditions": [
                          {
                            "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                            "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                            "rightValue": "conversation",
                            "operator": {
                              "type": "string",
                              "operation": "equals",
                              "name": "filter.operator.equals"
                            }
                          }
                        ],
                        "combinator": "and"
                      },
                      "renameOutput": true,
                      "outputKey": "text"
                    },
                    {
                      "conditions": {
                        "options": {
                          "caseSensitive": true,
                          "leftValue": "",
                          "typeValidation": "strict",
                          "version": 1
                        },
                        "conditions": [
                          {
                            "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                            "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                            "rightValue": "imageMessage",
                            "operator": {
                              "type": "string",
                              "operation": "equals",
                              "name": "filter.operator.equals"
                            }
                          }
                        ],
                        "combinator": "and"
                      },
                      "renameOutput": true,
                      "outputKey": "text"
                    },
                    {
                      "conditions": {
                        "options": {
                          "caseSensitive": true,
                          "leftValue": "",
                          "typeValidation": "strict",
                          "version": 1
                        },
                        "conditions": [
                          {
                            "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                            "rightValue": "audioMessage",
                            "operator": {
                              "type": "string",
                              "operation": "equals"
                            }
                          }
                        ],
                        "combinator": "and"
                      },
                      "renameOutput": true,
                      "outputKey": "audio"
                    }
                  ]
                },
                "options": {}
              },
              "id": "1a109f4a-892f-49c3-87cc-800459cfeba3",
              "name": "Switch3",
              "type": "n8n-nodes-base.switch",
              "typeVersion": 3,
              "position": [
                6560,
                928
              ]
            },
            {
              "parameters": {
                "operation": "binaryToPropery",
                "options": {}
              },
              "id": "611d5c91-b9e0-4d43-9aee-a2c4aed8505b",
              "name": "Audio-Base64-Extract from File",
              "type": "n8n-nodes-base.extractFromFile",
              "typeVersion": 1,
              "position": [
                7120,
                944
              ]
            },
            {
              "parameters": {
                "method": "POST",
                "url": "=https://api.elevenlabs.io/v1/text-to-speech/{{ $item(\"0\").$node[\"Variáveis\"].json[\"ID_Voz_Elevenlabs\"] }}",
                "sendHeaders": true,
                "headerParameters": {
                  "parameters": [
                    {
                      "name": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "name": "xi-api-key",
                      "value": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"API_Elevenlabs\"] }}"
                    }
                  ]
                },
                "sendBody": true,
                "specifyBody": "json",
                "jsonBody": "={\n   \"text\":\"'{{ $json.textoSemQuebrasNemEmojis }}'\",\n   \"model_id\":\"eleven_multilingual_v2\",\n   \"voice_settings\":{\n      \"stability\":0.5,\n      \"similarity_boost\":0.8,\n      \"style\":0.0,\n      \"use_speaker_boost\":true\n   }\n} ",
                "options": {}
              },
              "id": "abd575ed-37b7-496a-b648-0d81991e6eaa",
              "name": "ElevenLabsGenerateVoice",
              "type": "n8n-nodes-base.httpRequest",
              "position": [
                6928,
                944
              ],
              "typeVersion": 4.2
            },
            {
              "parameters": {
                "resource": "messages-api",
                "operation": "send-audio",
                "instanceName": "find-fruit",
                "remoteJid": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
                "media": "={{ $item(\"0\").$node[\"Audio-Base64-Extract from File\"].json[\"data\"] }}",
                "options_message": {}
              },
              "type": "n8n-nodes-evolution-api.evolutionApi",
              "typeVersion": 1,
              "position": [
                7328,
                944
              ],
              "id": "d692f697-38d7-4724-a02e-d0c33e84ebfd",
              "name": "Evolution API1",
              "credentials": {
                "evolutionApi": {
                  "id": "vBZUmfwmCqpNUkEJ",
                  "name": "Evolution account"
                }
              }
            },
            {
              "parameters": {
                "content": "",
                "height": 300,
                "width": 740,
                "color": 3
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                6720,
                832
              ],
              "typeVersion": 1,
              "id": "46156150-2ea0-4a3f-a1a4-30ea025b3eb2",
              "name": "Sticky Note24"
            },
            {
              "parameters": {
                "content": "# Resposta em Áudio",
                "height": 80,
                "width": 376,
                "color": 5
              },
              "id": "e9eac049-4ed9-41c5-aa91-474fb1d51ba0",
              "name": "Sticky Note25",
              "type": "n8n-nodes-base.stickyNote",
              "typeVersion": 1,
              "position": [
                6752,
                848
              ]
            },
            {
              "parameters": {
                "content": "## Webhook inicio",
                "height": 280,
                "width": 420,
                "color": 4
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                1104,
                880
              ],
              "typeVersion": 1,
              "id": "0fa549d8-3870-4010-b88c-96b1b80c4341",
              "name": "Sticky Note26"
            },
            {
              "parameters": {
                "jsCode": "// Obtém o primeiro item do fluxo\nconst item = $input.first();\n\n// Garante que há dados na entrada\nif (!item || !item.json || !item.json.output) {\n  throw new Error(\"A chave 'output' não foi encontrada no JSON de entrada.\");\n}\n\n// Processa o texto removendo todas as quebras de linha e emojis\nconst textoEntrada = item.json.output; // Use a chave correta para pegar o texto de entrada\n\n// Remove quebras de linha (\\n)\nlet textoProcessado = textoEntrada.replace(/\\n/g, \"\");\n\n// Remove emojis\ntextoProcessado = textoProcessado.replace(\n  /[\\u{1F600}-\\u{1F64F}]|[\\u{1F300}-\\u{1F5FF}]|[\\u{1F680}-\\u{1F6FF}]|[\\u{1F700}-\\u{1F77F}]|[\\u{1F780}-\\u{1F7FF}]|[\\u{1F800}-\\u{1F8FF}]|[\\u{1F900}-\\u{1F9FF}]|[\\u{1FA00}-\\u{1FA6F}]|[\\u{1FA70}-\\u{1FAFF}]|[\\u{2600}-\\u{26FF}]|[\\u{2700}-\\u{27BF}]|[\\u{FE00}-\\u{FE0F}]|[\\u{1F1E0}-\\u{1F1FF}]/gu,\n  \"\"\n);\n\n// Retorna o resultado\nreturn {\n  textoOriginal: textoEntrada,\n  textoSemQuebrasNemEmojis: textoProcessado,\n};\n"
              },
              "type": "n8n-nodes-base.code",
              "typeVersion": 2,
              "position": [
                6768,
                944
              ],
              "id": "c19c4797-ad38-4705-96a1-8ecb3b3fad0a",
              "name": "Code"
            },
            {
              "parameters": {
                "model": "gpt-4",
                "options": {
                  "topP": 0.9
                }
              },
              "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
              "typeVersion": 1,
              "position": [
                6048,
                1072
              ],
              "id": "bf9b8f6f-0159-481f-adb9-83993d3194d4",
              "name": "OpenAI Chat Model",
              "credentials": {
                "openAiApi": {
                  "id": "4CT8zdx4hKi3971O",
                  "name": "OpenAi account"
                }
              }
            },
            {
              "parameters": {
                "operation": "executeQuery",
                "query": "-- Create a table to store your documents\ncreate table documentos (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n);",
                "options": {}
              },
              "type": "n8n-nodes-base.postgres",
              "typeVersion": 2.5,
              "position": [
                480,
                1760
              ],
              "id": "5457f6df-1e43-4216-976d-ee1d77f4d543",
              "name": "Postgres",
              "credentials": {
                "postgres": {
                  "id": "F9YTJESL5BceDOve",
                  "name": "Postgres Teste"
                }
              }
            },
            {
              "parameters": {
                "content": "",
                "height": 280,
                "width": 260,
                "color": 4
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                432,
                1648
              ],
              "typeVersion": 1,
              "id": "545287b1-b8ee-4a53-8a40-259467f0489f",
              "name": "Sticky Note31"
            },
            {
              "parameters": {
                "content": "## Cria tabela documentos",
                "height": 80,
                "width": 180,
                "color": 5
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                464,
                1664
              ],
              "typeVersion": 1,
              "id": "9bbb6698-95d1-4c6f-8e9a-2f4be449fd9c",
              "name": "Sticky Note32"
            },
            {
              "parameters": {
                "operation": "executeQuery",
                "query": "CREATE TABLE dados_cliente (\n  id bigserial primary key,\n  name text,\n  phone text,\n  sessionid text,\n  created_at TIMESTAMPTZ,\n  consultas_realizadas integer default 0\n);",
                "options": {}
              },
              "type": "n8n-nodes-base.postgres",
              "typeVersion": 2.5,
              "position": [
                208,
                1760
              ],
              "id": "9c27e22e-6f11-4f73-8952-844a6214d00b",
              "name": "SQL para criar tabela cliente",
              "credentials": {
                "postgres": {
                  "id": "F9YTJESL5BceDOve",
                  "name": "Postgres Teste"
                }
              }
            },
            {
              "parameters": {
                "content": "",
                "height": 280,
                "width": 260,
                "color": 4
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                144,
                1648
              ],
              "typeVersion": 1,
              "id": "8a151e1d-ccba-4cdd-9816-9b35621367e7",
              "name": "Sticky Note33"
            },
            {
              "parameters": {
                "content": "## Cria tabela dados_cliente",
                "height": 80,
                "width": 180,
                "color": 5
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                192,
                1664
              ],
              "typeVersion": 1,
              "id": "a594125c-7c91-49c3-ae1c-800c397d27e6",
              "name": "Sticky Note34"
            },
            {
              "parameters": {
                "operation": "executeQuery",
                "query": "delete from dados_cliente",
                "options": {}
              },
              "type": "n8n-nodes-base.postgres",
              "typeVersion": 2.5,
              "position": [
                224,
                2144
              ],
              "id": "5050dd8c-a352-47b1-a6a1-19a18805db9a",
              "name": "Postgres2",
              "credentials": {
                "postgres": {
                  "id": "F9YTJESL5BceDOve",
                  "name": "Postgres Teste"
                }
              }
            },
            {
              "parameters": {
                "content": "",
                "height": 340,
                "width": 260,
                "color": 3
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                144,
                1968
              ],
              "typeVersion": 1,
              "id": "5ae434ca-b2f5-4384-8089-443d7272a218",
              "name": "Sticky Note35"
            },
            {
              "parameters": {
                "content": "## Deleta dados tabela dados_cliente",
                "height": 120,
                "width": 200,
                "color": 5
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                192,
                1984
              ],
              "typeVersion": 1,
              "id": "0351e520-995c-4d26-9353-5993170ceef6",
              "name": "Sticky Note36"
            },
            {
              "parameters": {
                "jsCode": "return $items(\"Set File ID\").map(item => {\n  return {\n    json: {\n      file_id: item.json.file_id,\n      file_type: item.json.file_type\n    }\n  };\n});"
              },
              "type": "n8n-nodes-base.code",
              "typeVersion": 2,
              "position": [
                4064,
                1872
              ],
              "id": "76b333d3-ec17-4067-b56c-867fd190ad77",
              "name": "Code2"
            },
            {
              "parameters": {
                "options": {}
              },
              "type": "n8n-nodes-base.splitInBatches",
              "typeVersion": 3,
              "position": [
                4224,
                1872
              ],
              "id": "922b7435-9247-4ed1-972a-48fa6abd0344",
              "name": "Loop Over Items"
            },
            {
              "parameters": {
                "operation": "executeQuery",
                "query": "delete from documents",
                "options": {}
              },
              "type": "n8n-nodes-base.postgres",
              "typeVersion": 2.5,
              "position": [
                512,
                2144
              ],
              "id": "11d4b0e6-56e4-49df-8c6b-94bf72c3d6dd",
              "name": "Postgres3",
              "credentials": {
                "postgres": {
                  "id": "F9YTJESL5BceDOve",
                  "name": "Postgres Teste"
                }
              }
            },
            {
              "parameters": {
                "content": "",
                "height": 340,
                "width": 260,
                "color": 3
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                432,
                1968
              ],
              "typeVersion": 1,
              "id": "d7b86d1a-3745-491b-9fd8-e7625863049f",
              "name": "Sticky Note37"
            },
            {
              "parameters": {
                "content": "## Deleta dados tabela documentos",
                "height": 120,
                "width": 200,
                "color": 5
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                464,
                1984
              ],
              "typeVersion": 1,
              "id": "156bb03b-fecc-44f2-94d5-0e3a6909c76c",
              "name": "Sticky Note38"
            },
            {
              "parameters": {
                "operation": "executeQuery",
                "query": "delete from n8n_chat_histories",
                "options": {}
              },
              "type": "n8n-nodes-base.postgres",
              "typeVersion": 2.5,
              "position": [
                880,
                1920
              ],
              "id": "6b3b7d34-966b-4e63-8373-9cc90b193cc2",
              "name": "Postgres4",
              "credentials": {
                "postgres": {
                  "id": "F9YTJESL5BceDOve",
                  "name": "Postgres Teste"
                }
              }
            },
            {
              "parameters": {
                "content": "",
                "height": 340,
                "width": 260,
                "color": 3
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                800,
                1760
              ],
              "typeVersion": 1,
              "id": "967e38bf-1c27-44f5-ac59-fd67cf273471",
              "name": "Sticky Note39"
            },
            {
              "parameters": {
                "content": "## Deleta dados tabela chat",
                "height": 80,
                "width": 200,
                "color": 5
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                848,
                1792
              ],
              "typeVersion": 1,
              "id": "d5853ccd-56e5-452e-a320-be3b6cb45eea",
              "name": "Sticky Note40"
            },
            {
              "parameters": {
                "sessionIdType": "customKey",
                "sessionKey": "={{ $('Edit Fields1').item.json.sessionId }}",
                "contextWindowLength": 1000
              },
              "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
              "typeVersion": 1.3,
              "position": [
                6160,
                1072
              ],
              "id": "aa5e3e7b-da18-4848-b44f-fec2af275380",
              "name": "Postgres Chat Memory",
              "credentials": {
                "postgres": {
                  "id": "CbbTX7ryuVXsyhIG",
                  "name": "Postgres_Whats"
                }
              }
            },
            {
              "parameters": {
                "operation": "getAll",
                "tableId": "dados_cliente",
                "filters": {
                  "conditions": [
                    {
                      "keyName": "telefone",
                      "condition": "eq",
                      "keyValue": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}"
                    }
                  ]
                }
              },
              "type": "n8n-nodes-base.supabase",
              "typeVersion": 1,
              "position": [
                1584,
                992
              ],
              "id": "4e99117d-75a9-4d62-8a22-7f8590c689bf",
              "name": "1. Pegar Dados do Cliente",
              "alwaysOutputData": true,
              "credentials": {
                "supabaseApi": {
                  "id": "r2uQFvlq0GDUjDGV",
                  "name": "Supabase account teste"
                }
              }
            },
            {
              "parameters": {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
                      "leftValue": "={{ $json.telefone }}",
                      "rightValue": 0,
                      "operator": {
                        "type": "string",
                        "operation": "exists",
                        "singleValue": true
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "options": {}
              },
              "type": "n8n-nodes-base.if",
              "typeVersion": 2.2,
              "position": [
                1824,
                992
              ],
              "id": "f5881408-059b-4eb8-9859-c27da6085b88",
              "name": "2. Cliente Existe?"
            },
            {
              "parameters": {
                "action": "generate"
              },
              "type": "n8n-nodes-base.crypto",
              "typeVersion": 1,
              "position": [
                2080,
                1408
              ],
              "id": "38db2d96-0ee2-4665-ba03-8c91307be2ab",
              "name": "2a. Gerar sessionID"
            },
            {
              "parameters": {
                "tableId": "dados_cliente",
                "fieldsUi": {
                  "fieldValues": [
                    {
                      "fieldId": "telefone",
                      "fieldValue": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}"
                    },
                    {
                      "fieldId": "sessionid",
                      "fieldValue": "={{ $item(\"0\").$node[\"2a. Gerar sessionID\"].json[\"data\"] }}"
                    },
                    {
                      "fieldId": "created_at",
                      "fieldValue": "={{ $now }}"
                    },
                    {
                      "fieldId": "consultas_realizadas",
                      "fieldValue": 0
                    },
                    {
                      "fieldId": "status",
                      "fieldValue": "awaiting_registration"
                    },
                    {
                      "fieldId": "name",
                      "fieldValue": "={{ $('Variáveis').item.json.body.data.pushName }}"
                    }
                  ]
                }
              },
              "type": "n8n-nodes-base.supabase",
              "typeVersion": 1,
              "position": [
                2464,
                1408
              ],
              "id": "9558f278-3b98-4832-99fb-05c2c7c7bda4",
              "name": "2b. Cadastrar Novo Cliente",
              "retryOnFail": true,
              "maxTries": 2,
              "credentials": {
                "supabaseApi": {
                  "id": "r2uQFvlq0GDUjDGV",
                  "name": "Supabase account teste"
                }
              }
            },
            {
              "parameters": {
                "operation": "get",
                "tableId": "dados_cliente",
                "filters": {
                  "conditions": [
                    {
                      "keyName": "telefone",
                      "keyValue": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}"
                    }
                  ]
                }
              },
              "type": "n8n-nodes-base.supabase",
              "typeVersion": 1,
              "position": [
                2960,
                960
              ],
              "id": "fa5f90e8-1f54-4f65-9b2e-0abb1f4c6e4a",
              "name": "SessionID",
              "retryOnFail": true,
              "maxTries": 2,
              "credentials": {
                "supabaseApi": {
                  "id": "r2uQFvlq0GDUjDGV",
                  "name": "Supabase account teste"
                }
              }
            },
            {
              "parameters": {
                "assignments": {
                  "assignments": [
                    {
                      "id": "8d88c137-383f-4307-b3cc-1f6a560ea67b",
                      "name": "mobile",
                      "value": "={{  $json.body.data.key.remoteJid.replace(/\\D/g, '').replace(/^55(\\d{2})(\\d{8})$/, '55$19$2') }}",
                      "type": "string"
                    },
                    {
                      "id": "104b3cd0-d988-4c58-a175-2ca5465bf8c1",
                      "name": "API_Elevenlabs",
                      "value": "sk_f8b0546f2d0dbcbd3fa6510a3ec468d249dfdb7823311901",
                      "type": "string"
                    },
                    {
                      "id": "6065b018-8dc0-49db-8da9-f692f96e9c92",
                      "name": "ID_Voz_Elevenlabs",
                      "value": "=9BWtsMINqrJLrRacOk9x",
                      "type": "string"
                    },
                    {
                      "id": "4e2bdc18-93a5-4117-b94e-bcfd228a7379",
                      "name": "Tempo de resposta picada",
                      "value": "2",
                      "type": "string"
                    },
                    {
                      "id": "0d4a900f-af55-4472-824f-1d06a25de052",
                      "name": "Instancia_Evolution",
                      "value": "find-fruit",
                      "type": "string"
                    },
                    {
                      "id": "9f80f8f6-a917-4af3-b77e-fa1f93d38cca",
                      "name": "URL_Evolution",
                      "value": "apiwp.aiagentautomate.com.br/",
                      "type": "string"
                    },
                    {
                      "id": "c6b307cf-ac0d-4273-8895-3c601b9b909b",
                      "name": "KEY_Evo",
                      "value": "B8493D438D72-4C34-97CC-4C9A4A257C0A",
                      "type": "string"
                    }
                  ]
                },
                "includeOtherFields": true,
                "options": {}
              },
              "id": "5800ab05-10e0-4d9f-aab0-608b12a967d1",
              "name": "Variáveis",
              "type": "n8n-nodes-base.set",
              "typeVersion": 3.4,
              "position": [
                1344,
                992
              ],
              "alwaysOutputData": true
            },
            {
              "parameters": {
                "operation": "push",
                "list": "={{ $('Variáveis').item.json.mobile }}",
                "messageData": "={{ $json.data.message.conversation }}",
                "tail": true
              },
              "id": "3c60793d-de92-4b94-a70e-d1c431c87efe",
              "name": "Redis",
              "type": "n8n-nodes-base.redis",
              "typeVersion": 1,
              "position": [
                4480,
                864
              ],
              "credentials": {
                "redis": {
                  "id": "3aF3lSIIig1BrDmo",
                  "name": "Redis account 2"
                }
              }
            },
            {
              "parameters": {
                "promptType": "define",
                "text": "={{ $json.listaMensagens }}",
                "options": {
                  "systemMessage": "=# FindFruit 🍎\n\nVocê é o FindFruit 🍎, especialista em frutas, legumes e verduras. Sua tarefa é:\n1. Receber uma descrição (ou imagem) de uma fruta.\n2. Responder com o nome, maturação (verde, maduro ou passado), descrição nutricional e receita.\n\nSe a descrição for insuficiente para identificar com segurança, dê a melhor estimativa possível com base no texto recebido.\n\n\n✅ **[Nome da fruta/legume/verdura]** [estado: verde, maduro ou passado]!\n\n🍃 **Informações nutricionais:**\n- Carboidratos: XX g\n- Proteínas: XX g\n- Gorduras: XX g\n- Vitaminas: [Principais vitaminas, exemplo: C, A]\n\n📅 **Melhor época:** [mês inicial - mês final]\n\n🥗 **Receita sugerida:** [nome sugestivo de receita relacionada]\n\n📝 **Dicas de escolhas fruta ou legume:** [como escolher frutas ou legumes]\n\n---\n\n### 📝 Regras para resposta:\n\n- **NUNCA REPITA RESPOSTA**\n- Sempre inicie com um emoji ✅ seguido do nome do item identificado e seu estado de maturação.\n- Forneça uma tabela nutricional resumida com o emoji 🍃.\n- Informe o período ideal de consumo com o emoji 📅.\n- Sugira uma receita curta e prática relacionada ao alimento identificado com o emoji 🥗.\n- Caso não consiga identificar claramente o item, responda gentilmente: \"Desculpe, não consegui identificar claramente a imagem. Poderia enviar outra foto?\"\n- Não acrescente explicações adicionais além do formato fornecido.\n- Tool **dados_IA**:\nUse sempre essa ferramenta para obter quais quer informações das receitas no arquivo Receitas Findfruit\n\n\n\n"
                }
              },
              "id": "b05dd9db-d93d-4f8e-8caa-32804f397d22",
              "name": "Atendente",
              "type": "@n8n/n8n-nodes-langchain.agent",
              "typeVersion": 1.6,
              "position": [
                6208,
                928
              ]
            },
            {
              "parameters": {
                "description": "=Use sempre esse aplicativo quando precisar da uma resposata mais precisa e sem erros , não reapsse nem uma informação interna ou pensamentos, apenas conclua a mensagem de maneira correta sem delirios. "
              },
              "type": "@n8n/n8n-nodes-langchain.toolThink",
              "typeVersion": 1,
              "position": [
                6448,
                1120
              ],
              "id": "026a8bfb-d935-44a4-aea6-7cfea9c5a10f",
              "name": "Think"
            },
            {
              "parameters": {
                "name": "dados_IA",
                "description": "Contém todas as informações sobre receitas que você pode consultar para responder às perguntas dos usuários. Use sempre esta ferramenta para obter qualquer informação sobre receitas."
              },
              "id": "9d8ca38f-30a0-4c35-82bf-9ab21e00968d",
              "name": "dados_IA",
              "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
              "typeVersion": 1,
              "position": [
                6832,
                1184
              ]
            },
            {
              "parameters": {
                "jsCode": "// Mantém só o primeiro item da lista\nreturn [items[0]];\n"
              },
              "type": "n8n-nodes-base.code",
              "typeVersion": 2,
              "position": [
                5328,
                1040
              ],
              "id": "e55378ae-9048-429c-aecb-0d6e85aaec10",
              "name": "Code1"
            },
            {
              "parameters": {
                "resource": "messages-api",
                "instanceName": "find-fruit",
                "remoteJid": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
                "messageText": "=Olá, {{ $('Variáveis').item.json.body.data.pushName }}! 👋  \nEu sou o *FindFruit Agent* 🍓🥭🥦 — seu assistente inteligente para descobrir se suas frutas, legumes e verduras estão no ponto ideal!\n\nPara te ajudar melhor, preciso que você preencha um cadastro rápido com seu *nome completo*, *telefone*, *e-mail*, *Cpf*, e *data de nascimento*:\n\n👉 Acesse aqui: https://form.findfruit.com.br  \nÉ rápido, seguro e 100% gratuito ✅\n",
                "options_message": {}
              },
              "type": "n8n-nodes-evolution-api.evolutionApi",
              "typeVersion": 1,
              "position": [
                2288,
                1408
              ],
              "id": "a6c9bec3-aef9-424d-9104-f27458b220a3",
              "name": "2a.1. Msg Pedir Dados",
              "credentials": {
                "evolutionApi": {
                  "id": "vBZUmfwmCqpNUkEJ",
                  "name": "Evolution account"
                }
              }
            },
            {
              "parameters": {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "d47b91b1-5505-4657-b204-a011517dd0ad",
                      "leftValue": "={{ $json.body.data.message.conversation || $json.body.data.message.extendedTextMessage.text }}",
                      "rightValue": "",
                      "operator": {
                        "type": "string",
                        "operation": "isEmpty"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "options": {}
              },
              "type": "n8n-nodes-base.if",
              "typeVersion": 2.2,
              "position": [
                3968,
                864
              ],
              "id": "b5c93ebc-78e7-429d-9707-229b30ba2a64",
              "name": "É a 1ª mensagem?"
            },
            {
              "parameters": {
                "conditions": {
                  "options": {
                    "caseSensitive": false,
                    "leftValue": "",
                    "typeValidation": "loose",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "d48083c6-2917-48f5-961d-721245a49c4f",
                      "leftValue": "={{ $json[0].consultas_realizadas }}",
                      "rightValue": 3,
                      "operator": {
                        "type": "number",
                        "operation": "smaller"
                      }
                    },
                    {
                      "id": "a1c04c13-ae48-4429-836e-60e1dfdcdc8a",
                      "leftValue": "={{ $json.consultas_realizadas }}",
                      "rightValue": 3,
                      "operator": {
                        "type": "number",
                        "operation": "lt"
                      }
                    }
                  ],
                  "combinator": "or"
                },
                "looseTypeValidation": true,
                "options": {
                  "ignoreCase": true
                }
              },
              "id": "1e75b7f5-dc17-489e-9b62-7c45541f773e",
              "name": "3. Limite < 3 pesquisas?",
              "type": "n8n-nodes-base.if",
              "typeVersion": 2.2,
              "position": [
                2448,
                992
              ]
            },
            {
              "parameters": {
                "operation": "update",
                "tableId": "dados_cliente",
                "filters": {
                  "conditions": [
                    {
                      "keyName": "telefone",
                      "condition": "eq",
                      "keyValue": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}"
                    }
                  ]
                },
                "fieldsUi": {
                  "fieldValues": [
                    {
                      "fieldId": "consultas_realizadas",
                      "fieldValue": "={{ $('3. Limite < 3 pesquisas?').item.json.consultas_realizadas + 1 }}"
                    }
                  ]
                }
              },
              "id": "943df989-4b89-4910-9272-b427e05ab122",
              "name": "Incrementar Contagem de Pesquisa",
              "type": "n8n-nodes-base.supabase",
              "typeVersion": 1,
              "position": [
                8048,
                624
              ],
              "credentials": {
                "supabaseApi": {
                  "id": "r2uQFvlq0GDUjDGV",
                  "name": "Supabase account teste"
                }
              }
            },
            {
              "parameters": {
                "resource": "messages-api",
                "instanceName": "find-fruit",
                "remoteJid": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
                "messageText": "Você atingiu o limite de 3 pesquisas gratuitas. 😥 Para continuar utilizando nosso serviço e ter acesso ilimitado a todas as receitas e funcionalidades, por favor, considere assinar um de nossos planos. 🚀Acesse: `https://findfruit.com.br/`",
                "options_message": {}
              },
              "id": "d05f2663-b2e6-48fc-9b0d-d6f4e7b42419",
              "name": "Enviar Mensagem de Bloqueio",
              "type": "n8n-nodes-evolution-api.evolutionApi",
              "typeVersion": 1,
              "position": [
                2992,
                1408
              ],
              "credentials": {
                "evolutionApi": {
                  "id": "vBZUmfwmCqpNUkEJ",
                  "name": "Evolution account"
                }
              }
            },
            {
              "parameters": {
                "rules": {
                  "values": [
                    {
                      "conditions": {
                        "options": {
                          "caseSensitive": true,
                          "leftValue": "",
                          "typeValidation": "strict",
                          "version": 1
                        },
                        "conditions": [
                          {
                            "id": "0df81e2b-da7f-4424-9b19-c16e780a42ea",
                            "leftValue": "={{ $json.status }}",
                            "rightValue": "awaiting_registration",
                            "operator": {
                              "type": "string",
                              "operation": "equals"
                            }
                          }
                        ],
                        "combinator": "and"
                      }
                    },
                    {
                      "conditions": {
                        "options": {
                          "caseSensitive": true,
                          "leftValue": "",
                          "typeValidation": "strict",
                          "version": 1
                        },
                        "conditions": [
                          {
                            "id": "01037877-ec07-4f9a-9e11-e4905106f2f9",
                            "leftValue": "={{ $json.status }}",
                            "rightValue": "registered",
                            "operator": {
                              "type": "string",
                              "operation": "equals"
                            }
                          }
                        ],
                        "combinator": "and"
                      }
                    }
                  ]
                },
                "options": {
                  "fallbackOutput": "none"
                }
              },
              "id": "fe0aa0fb-9f2a-491c-bdf6-251208aa2554",
              "name": "Verificar Status do Cliente",
              "type": "n8n-nodes-base.switch",
              "typeVersion": 3,
              "position": [
                2128,
                960
              ]
            },
            {
              "parameters": {
                "operation": "update",
                "tableId": "dados_cliente",
                "filters": {
                  "conditions": [
                    {
                      "keyName": "telefone",
                      "condition": "eq",
                      "keyValue": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}"
                    }
                  ]
                },
                "fieldsUi": {
                  "fieldValues": [
                    {
                      "fieldId": "name",
                      "fieldValue": "={{ $json.json.name }}"
                    },
                    {
                      "fieldId": "email",
                      "fieldValue": "={{ $json.json.email }}"
                    },
                    {
                      "fieldId": "status",
                      "fieldValue": "registered"
                    }
                  ]
                }
              },
              "id": "25b0d520-1aac-4b81-9862-99187f80698b",
              "name": "Atualizar Dados do Cliente",
              "type": "n8n-nodes-base.supabase",
              "typeVersion": 1,
              "position": [
                2448,
                624
              ],
              "credentials": {
                "supabaseApi": {
                  "id": "r2uQFvlq0GDUjDGV",
                  "name": "Supabase account teste"
                }
              }
            },
            {
              "parameters": {
                "resource": "messages-api",
                "instanceName": "find-fruit",
                "remoteJid": "={{ $item(\"0\").$node[\"Variáveis\"].json[\"mobile\"] }}",
                "messageText": "=Obrigada, {{ $json.name }}! Seu cadastro foi concluído. ✅\n\nVamos lá, é bem simples: 🍓🍌🥦\nVocê terá 3 pesquisas gratuitas.\nMe envie uma foto nítida de um item e eu te direi: 📈 Se está madura,verde ou passado ✅ Informações nutricionais 📆 Qual a melhor época do ano para comprar 🍽️ Sugestões de receitas e preparo 🏪 Dicas de como conservar em casa 💡 Curiosidades divertidas 📸 **Estou pronta! Pode me enviar a foto nitida.**\n",
                "options_message": {}
              },
              "id": "9c9569f5-de0e-4be4-a4c2-37d761c95aee",
              "name": "Msg Boas-Vindas - Pós Cadastro",
              "type": "n8n-nodes-evolution-api.evolutionApi",
              "typeVersion": 1,
              "position": [
                2640,
                624
              ],
              "credentials": {
                "evolutionApi": {
                  "id": "vBZUmfwmCqpNUkEJ",
                  "name": "Evolution account"
                }
              }
            },
            {
              "parameters": {
                "jsCode": "return [{\n  id: $json.id,\n  consultas_realizadas: $json.consultas_realizadas + 1\n}];\n"
              },
              "type": "n8n-nodes-base.code",
              "typeVersion": 2,
              "position": [
                2672,
                960
              ],
              "id": "073a8515-5991-40eb-b5a9-780f2abc3a94",
              "name": "Code3"
            },
            {
              "parameters": {
                "content": "## Atualizar Cadastro mensagem de Boas vindas",
                "height": 260,
                "width": 560
              },
              "type": "n8n-nodes-base.stickyNote",
              "typeVersion": 1,
              "position": [
                2352,
                544
              ],
              "id": "d86919bb-ff18-4568-89f8-166a84fcbdf0",
              "name": "Sticky Note7"
            },
            {
              "parameters": {
                "content": "## Solicitar dados inicial",
                "height": 260,
                "width": 640,
                "color": 4
              },
              "type": "n8n-nodes-base.stickyNote",
              "typeVersion": 1,
              "position": [
                2032,
                1328
              ],
              "id": "f9c0f886-407c-4697-8dff-2619e389d6de",
              "name": "Sticky Note8"
            }
          ],
          "connections": {
            "OpenAI Chat Model1": {
              "ai_languageModel": [
                [
                  {
                    "node": "dados_IA",
                    "type": "ai_languageModel",
                    "index": 0
                  }
                ]
              ]
            },
            "Default Data Loader": {
              "ai_document": [
                [
                  {
                    "node": "Insert into Supabase Vectorstore",
                    "type": "ai_document",
                    "index": 0
                  }
                ]
              ]
            },
            "Embeddings OpenAI1": {
              "ai_embedding": [
                [
                  {
                    "node": "Insert into Supabase Vectorstore",
                    "type": "ai_embedding",
                    "index": 0
                  }
                ]
              ]
            },
            "Download File": {
              "main": [
                [
                  {
                    "node": "Switch",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "File Created": {
              "main": [
                [
                  {
                    "node": "Set File ID",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "File Updated": {
              "main": [
                [
                  {
                    "node": "Set File ID",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Extract Document Text": {
              "main": [
                [
                  {
                    "node": "Insert into Supabase Vectorstore",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Embeddings OpenAI": {
              "ai_embedding": [
                [
                  {
                    "node": "Supabase Vector Store",
                    "type": "ai_embedding",
                    "index": 0
                  }
                ]
              ]
            },
            "Delete Old Doc Rows": {
              "main": [
                [
                  {
                    "node": "Code2",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Set File ID": {
              "main": [
                [
                  {
                    "node": "Delete Old Doc Rows",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Extract PDF Text": {
              "main": [
                [
                  {
                    "node": "Insert into Supabase Vectorstore",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Aggregate": {
              "main": [
                [
                  {
                    "node": "Summarize",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Character Text Splitter": {
              "ai_textSplitter": [
                [
                  {
                    "node": "Default Data Loader",
                    "type": "ai_textSplitter",
                    "index": 0
                  }
                ]
              ]
            },
            "Summarize": {
              "main": [
                [
                  {
                    "node": "Insert into Supabase Vectorstore",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Switch": {
              "main": [
                [
                  {
                    "node": "Extract PDF Text",
                    "type": "main",
                    "index": 0
                  }
                ],
                [
                  {
                    "node": "Extract from Excel",
                    "type": "main",
                    "index": 0
                  }
                ],
                [
                  {
                    "node": "Extract Document Text",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Insert into Supabase Vectorstore": {
              "main": [
                [
                  {
                    "node": "Loop Over Items",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Supabase Vector Store": {
              "ai_vectorStore": [
                [
                  {
                    "node": "dados_IA",
                    "type": "ai_vectorStore",
                    "index": 0
                  }
                ]
              ]
            },
            "Extract from Excel": {
              "main": [
                [
                  {
                    "node": "Aggregate",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Wait": {
              "main": [
                [
                  {
                    "node": "Redis1",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Redis1": {
              "main": [
                [
                  {
                    "node": "Code1",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "If": {
              "main": [
                [
                  {
                    "node": "Edit Fields1",
                    "type": "main",
                    "index": 0
                  }
                ],
                [
                  {
                    "node": "No Operation, do nothing",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Edit Fields1": {
              "main": [
                [
                  {
                    "node": "Redis2",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Convert to File": {
              "main": [
                [
                  {
                    "node": "OpenAI",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Edit Fields": {
              "main": [
                [
                  {
                    "node": "Convert to File",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Convert to File1": {
              "main": [
                [
                  {
                    "node": "OpenAI1",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Edit Fields3": {
              "main": [
                [
                  {
                    "node": "Convert to File1",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "If3": {
              "main": [
                [
                  {
                    "node": "Redis5",
                    "type": "main",
                    "index": 0
                  }
                ],
                [
                  {
                    "node": "Redis4",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Redis3": {
              "main": [
                [
                  {
                    "node": "Wait",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Redis4": {
              "main": [
                [
                  {
                    "node": "Wait",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Redis5": {
              "main": [
                [
                  {
                    "node": "Wait",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "OpenAI": {
              "main": [
                [
                  {
                    "node": "Redis3",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "OpenAI1": {
              "main": [
                [
                  {
                    "node": "If3",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Webhook": {
              "main": [
                [
                  {
                    "node": "Variáveis",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Switch1": {
              "main": [
                [
                  {
                    "node": "Extrair Mensagem de Texto",
                    "type": "main",
                    "index": 0
                  }
                ],
                [
                  {
                    "node": "Extrair Mensagem de Texto",
                    "type": "main",
                    "index": 0
                  }
                ],
                [
                  {
                    "node": "Edit Fields",
                    "type": "main",
                    "index": 0
                  }
                ],
                [
                  {
                    "node": "Edit Fields3",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Redis2": {
              "main": [
                [
                  {
                    "node": "Atendente",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "OpenAI3": {
              "ai_languageModel": [
                [
                  {
                    "node": "Parser  Chain",
                    "type": "ai_languageModel",
                    "index": 0
                  }
                ]
              ]
            },
            "Segmentos1": {
              "main": [
                [
                  {
                    "node": "Loop Over Items3",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "1,2s1": {
              "main": [
                [
                  {
                    "node": "Evolution API",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Loop Over Items3": {
              "main": [
                [],
                [
                  {
                    "node": "1,2s1",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "OutputParser1": {
              "ai_outputParser": [
                [
                  {
                    "node": "Parser  Chain",
                    "type": "ai_outputParser",
                    "index": 0
                  }
                ]
              ]
            },
            "Parser  Chain": {
              "main": [
                [
                  {
                    "node": "Segmentos1",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Evolution API": {
              "main": [
                [
                  {
                    "node": "Incrementar Contagem de Pesquisa",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Switch3": {
              "main": [
                [
                  {
                    "node": "Parser  Chain",
                    "type": "main",
                    "index": 0
                  }
                ],
                [
                  {
                    "node": "Parser  Chain",
                    "type": "main",
                    "index": 0
                  }
                ],
                [
                  {
                    "node": "Code",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "ElevenLabsGenerateVoice": {
              "main": [
                [
                  {
                    "node": "Audio-Base64-Extract from File",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Evolution API1": {
              "main": [
                [
                  {
                    "node": "Incrementar Contagem de Pesquisa",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Code": {
              "main": [
                [
                  {
                    "node": "ElevenLabsGenerateVoice",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "OpenAI Chat Model": {
              "ai_languageModel": [
                [
                  {
                    "node": "Atendente",
                    "type": "ai_languageModel",
                    "index": 0
                  }
                ]
              ]
            },
            "Code2": {
              "main": [
                [
                  {
                    "node": "Loop Over Items",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Loop Over Items": {
              "main": [
                [],
                [
                  {
                    "node": "Download File",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Postgres Chat Memory": {
              "ai_memory": [
                [
                  {
                    "node": "Atendente",
                    "type": "ai_memory",
                    "index": 0
                  }
                ]
              ]
            },
            "1. Pegar Dados do Cliente": {
              "main": [
                [
                  {
                    "node": "2. Cliente Existe?",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "2. Cliente Existe?": {
              "main": [
                [
                  {
                    "node": "Verificar Status do Cliente",
                    "type": "main",
                    "index": 0
                  }
                ],
                [
                  {
                    "node": "2a. Gerar sessionID",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "2a. Gerar sessionID": {
              "main": [
                [
                  {
                    "node": "2a.1. Msg Pedir Dados",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "SessionID": {
              "main": [
                [
                  {
                    "node": "Switch1",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Variáveis": {
              "main": [
                [
                  {
                    "node": "1. Pegar Dados do Cliente",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Redis": {
              "main": [
                [
                  {
                    "node": "Wait",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Think": {
              "ai_tool": [
                [
                  {
                    "node": "Atendente",
                    "type": "ai_tool",
                    "index": 0
                  }
                ]
              ]
            },
            "Atendente": {
              "main": [
                [
                  {
                    "node": "Switch3",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "dados_IA": {
              "ai_tool": [
                [
                  {
                    "node": "Atendente",
                    "type": "ai_tool",
                    "index": 0
                  }
                ]
              ]
            },
            "Audio-Base64-Extract from File": {
              "main": [
                [
                  {
                    "node": "Evolution API1",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Code1": {
              "main": [
                [
                  {
                    "node": "If",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "2a.1. Msg Pedir Dados": {
              "main": [
                [
                  {
                    "node": "2b. Cadastrar Novo Cliente",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "É a 1ª mensagem?": {
              "main": [
                [
                  {
                    "node": "Redis",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "3. Limite < 3 pesquisas?": {
              "main": [
                [
                  {
                    "node": "Code3",
                    "type": "main",
                    "index": 0
                  }
                ],
                [
                  {
                    "node": "Enviar Mensagem de Bloqueio",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Verificar Status do Cliente": {
              "main": [
                [
                  {
                    "node": "Atualizar Dados do Cliente",
                    "type": "main",
                    "index": 0
                  }
                ],
                [
                  {
                    "node": "3. Limite < 3 pesquisas?",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Atualizar Dados do Cliente": {
              "main": [
                [
                  {
                    "node": "Msg Boas-Vindas - Pós Cadastro",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Extrair Mensagem de Texto": {
              "main": [
                [
                  {
                    "node": "É a 1ª mensagem?",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Code3": {
              "main": [
                [
                  {
                    "node": "SessionID",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            }
          },
          "settings": {
            "executionOrder": "v1"
          },
          "staticData": {
            "node:File Created": {
              "lastTimeChecked": "2025-07-26T03:52:34Z"
            },
            "node:File Updated": {
              "lastTimeChecked": "2025-07-26T03:52:34Z"
            }
          },
          "meta": {
            "templateCredsSetupCompleted": true
          },
          "pinData": {
            "Webhook": [
              {
                "json": {
                  "headers": {
                    "host": "n8n.aiagentautomate.com.br",
                    "user-agent": "axios/1.7.9",
                    "content-length": "154772",
                    "accept-encoding": "gzip, compress, deflate, br",
                    "content-type": "application/json",
                    "x-forwarded-for": "172.18.0.1",
                    "x-forwarded-host": "n8n.aiagentautomate.com.br",
                    "x-forwarded-port": "443",
                    "x-forwarded-proto": "https",
                    "x-forwarded-server": "bffe728326c9",
                    "x-real-ip": "172.18.0.1"
                  },
                  "params": {},
                  "query": {},
                  "body": {
                    "event": "messages.upsert",
                    "instance": "find-fruit",
                    "data": {
                      "key": {
                        "remoteJid": "5511952313944@s.whatsapp.net",
                        "fromMe": false,
                        "id": "3A416E97D5F6D7815DF5"
                      },
                      "pushName": "Rafael de Souza",
                      "status": "DELIVERY_ACK",
                      "message": {
                        "imageMessage": {
                          "url": "https://mmg.whatsapp.net/o1/v/t24/f2/m233/AQPddhmxyltZEpYsL8rbwTQ_EJERNhV3XF8Q18hsDUlfuz14mszhzQ5yEcbOAE3IBlZl4JzKkEEai6p71BAwskcngyuYLUxPiyhm6kG0WA?ccb=9-4&oh=01_Q5Aa2AGhoShqlst-vVwXxwb-IwM9uDK88cNj5J7ij0j83MJexg&oe=68ABD648&_nc_sid=e6ed6c&mms3=true",
                          "mimetype": "image/jpeg",
                          "fileSha256": "XZPThX6u6Qorr7BaXnDco6/UVEEffy657eho0izgnWk=",
                          "fileLength": "113799",
                          "height": 1600,
                          "width": 1152,
                          "mediaKey": "xM/gctWd1RMNUUKyaz+VIkvF5Davb42meMCqdpwc5UE=",
                          "fileEncSha256": "zfn3ApMzR9lW2O48o6Lr50wkcj1oj0d+A/6PggFkoqk=",
                          "directPath": "/o1/v/t24/f2/m233/AQPddhmxyltZEpYsL8rbwTQ_EJERNhV3XF8Q18hsDUlfuz14mszhzQ5yEcbOAE3IBlZl4JzKkEEai6p71BAwskcngyuYLUxPiyhm6kG0WA?ccb=9-4&oh=01_Q5Aa2AGhoShqlst-vVwXxwb-IwM9uDK88cNj5J7ij0j83MJexg&oe=68ABD648&_nc_sid=e6ed6c",
                          "mediaKeyTimestamp": "1753501814",
                          "jpegThumbnail": "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDABsSFBcUERsXFhceHBsgKEIrKCUlKFE6PTBCYFVlZF9VXVtqeJmBanGQc1tdhbWGkJ6jq62rZ4C8ybqmx5moq6T/2wBDARweHigjKE4rK06kbl1upKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKT/wgARCABIAEgDASIAAhEBAxEB/8QAGgAAAgMBAQAAAAAAAAAAAAAAAAECAwUEBv/EABkBAAMBAQEAAAAAAAAAAAAAAAABAwQCBf/aAAwDAQACEAMQAAAAxASY4yAm2FakgQDSEJy1KdLLWxdUI9cWL6/z+ieeI0cQTiG3oZ+l5mjouov74jjbWDVZBI1zrhMZpa3mNrFXVt4nJ9PmL+DZNgW5QAJgi2sE2gagAz//xAAdEQABBAMBAQAAAAAAAAAAAAABAAIDERAhMSAy/9oACAECAQE/AMX4lkPAm7FlRP3RweJ/UwqP6zLEbsJoKjZWz5GP/8QAHBEAAgICAwAAAAAAAAAAAAAAAAECEBEgMUFR/9oACAEDAQE/ANox9GSXdKmPi1LIyT3/AP/EACYQAAICAgEDBAMBAQAAAAAAAAECABEDIQQSMUEFIlFxE2GRELH/2gAIAQEAAT8AJ1PEB3udjPN1FFjcYbqbBg71Cb7f4BACRFxu+gpM6XQ0VMIs3D3/AHDsxe3xCB1TGjO/SonG4iLXULMxYVQWVFT8mB26Sn9nN9MDIcmEUfj5jKVYhhsTQM87hI7ThY6ANbMwpbAw47SDie5WC/cIoVPWMP48/WBpoTQjCt3MYvIJxwOkATAtARN9vEHaOLE9dFIlTp8mEgr+5j1kE4hsCILExLTXeoDH7T13IOpEEXZomNXiH2sDOHmtRW5iawIjVFbVzNkCIWJoCczKc+Znv6lCrHeGETj5nwvdWPicflo6rTC/iJlUkWRMvMxYx7sg+pzvUGz2i2E/7AT4gG6ujBuMpH1F2IdbEDt0WGP9lljdkmGwaI7wiu0A90///gADAP/Z",
                          "contextInfo": {},
                          "firstScanSidecar": "Tg1m6babA00nXw==",
                          "firstScanLength": 15191,
                          "scansSidecar": "Tg1m6babA00nX/EcNLbyHRlYnPgtl0OztQMqbSuah3uAnvY0CAWSAQ==",
                          "scanLengths": [
                            15191,
                            35406,
                            28161,
                            35039
                          ],
                          "midQualityFileSha256": "GEaS5p3c/M6ZBYqgcmlPAef0WQm0pb6s1CgP8/40Cq8="
                        },
                        "messageContextInfo": {
                          "deviceListMetadata": {
                            "senderKeyHash": "yIvAnSxnVBl4rw==",
                            "senderTimestamp": "1752764574",
                            "recipientKeyHash": "KaOaXEpL2Dc/JA==",
                            "recipientTimestamp": "1752777700"
                          },
                          "deviceListMetadataVersion": 2,
                          "messageSecret": "C56YFKtZochiXQp4rMAQcbO18NDzBW/Xx+5ADRnnogA="
                        },
                        "base64": ""
                      },
                      "contextInfo": {},
                      "messageType": "imageMessage",
                      "messageTimestamp": 1753501815,
                      "instanceId": "1df7046d-8023-48cd-9ea7-464761018d89",
                      "source": "ios"
                    },
                    "destination": "https://n8n.aiagentautomate.com.br/webhook/find-fruit",
                    "date_time": "2025-07-26T00:50:16.983Z",
                    "sender": "5511945237617@s.whatsapp.net",
                    "server_url": "https://apiwp.aiagentautomate.com.br",
                    "apikey": "DC3D2990281D-4252-AD6B-F694262DA012"
                  },
                  "webhookUrl": "https://n8n.aiagentautomate.com.br/webhook/find-fruit",
                  "executionMode": "production"
                }
              }
            ]
          },
          "versionId": "d50f7fd7-595f-4a04-b4bd-5ac09eb4e312",
          "triggerCount": 3,
          "tags": []
        }
      }
    ]
  },
  "repo_name": "backup-n8n",
  "repo_owner": "faelsou",
  "repo_path": "backups/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-02T09:10:15.251Z",
  "versionId": "2c40592c-73d2-4e82-8fa3-4fa62826ed37"
}