{
  "active": false,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get Error Executions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Error Executions": {
      "main": [
        [
          {
            "node": "Process Error Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Error Data": {
      "main": [
        [
          {
            "node": "Send to Grafana Annotations",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Metrics to Prometheus",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check if Errors Exist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Errors Exist": {
      "main": [
        [
          {
            "node": "Send Slack Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-27T05:45:20.505Z",
  "id": "qq0k2RUffIeZKm6Q",
  "isArchived": false,
  "meta": null,
  "name": "My workflow 50",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        -720,
        112
      ],
      "id": "b3297eed-f4f2-45c7-8194-620de1b075bf"
    },
    {
      "parameters": {
        "url": "https://n8n.aiagentautomate.com.br/api/v1/executions",
        "authentication": "headerAuth",
        "options": {}
      },
      "name": "Get Error Executions",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -480,
        112
      ],
      "id": "703d5768-7115-4058-b32b-fd374ebf832c"
    },
    {
      "parameters": {
        "jsCode": "const executions = $input.all()[0].json.data;\nconst workflows = [\n  'fK72QsaPox42Ui4L',\n  'jXLIuZiweyM1bLmU', \n  'J6MqVOb89CbBc908',\n  'Ni5jM9qyUtw312d1',\n  'UA349KZrY4Fet0tr'\n];\n\nconst errorStats = {};\nconst now = new Date();\nconst fiveMinutesAgo = new Date(now.getTime() - 5 * 60 * 1000);\n\n// Inicializar stats para todos os workflows\nworkflows.forEach(workflowId => {\n  errorStats[workflowId] = {\n    workflow_id: workflowId,\n    error_count: 0,\n    last_error: null,\n    status: 'healthy'\n  };\n});\n\n// Processar execuções com erro\nexecutions.forEach(execution => {\n  const workflowId = execution.workflowId;\n  const executionTime = new Date(execution.startedAt);\n  \n  // Verificar se o erro foi nos últimos 5 minutos\n  if (executionTime >= fiveMinutesAgo && workflows.includes(workflowId)) {\n    errorStats[workflowId].error_count++;\n    errorStats[workflowId].status = 'error';\n    \n    if (!errorStats[workflowId].last_error || \n        new Date(execution.startedAt) > new Date(errorStats[workflowId].last_error)) {\n      errorStats[workflowId].last_error = execution.startedAt;\n    }\n  }\n});\n\n// Converter para array para output\nconst result = Object.values(errorStats).map(stat => ({\n  ...stat,\n  timestamp: now.toISOString(),\n  metric_name: 'workflow_error_status',\n  error_rate: stat.error_count > 0 ? (stat.error_count / 1) : 0\n}));\n\nreturn result;"
      },
      "name": "Process Error Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -240,
        112
      ],
      "id": "7e804403-5324-4409-a627-6e09e846cb92"
    },
    {
      "parameters": {
        "url": "http://SEU_GRAFANA_URL:3000/api/annotations",
        "authentication": "basicAuth",
        "options": {}
      },
      "name": "Send to Grafana Annotations",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        0,
        0
      ],
      "executeOnce": false,
      "id": "7e353727-d35e-4e28-bb5b-e8eae8e7a3e7"
    },
    {
      "parameters": {
        "url": "http://SEU_PROMETHEUS_PUSHGATEWAY:9091/metrics/job/n8n_monitoring",
        "options": {}
      },
      "name": "Send Metrics to Prometheus",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        0,
        208
      ],
      "executeOnce": false,
      "id": "04e98059-54b6-4e6a-b600-e79b17e0ae45"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.error_count }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combineOperation": "any"
        },
        "options": {}
      },
      "name": "Check if Errors Exist",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        0,
        416
      ],
      "id": "c08fc8dd-decb-4093-9f30-350824803fa8"
    },
    {
      "parameters": {
        "url": "https://hooks.slack.com/services/SEU/SLACK/WEBHOOK",
        "options": {}
      },
      "name": "Send Slack Alert",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        256,
        400
      ],
      "id": "3e487c14-193c-49a7-afd7-d63e78831c10"
    },
    {
      "parameters": {},
      "name": "Set Success Metrics",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2.1,
      "position": [
        240,
        112
      ],
      "id": "1dac058f-ea44-4a6e-9b7a-3e3165d1e0d2"
    },
    {
      "parameters": {},
      "name": "Set Error Metrics",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2.1,
      "position": [
        -240,
        512
      ],
      "id": "cadddc7f-d6dc-4dec-acd3-db316e3597ec"
    },
    {
      "parameters": {},
      "name": "Error Trigger",
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        -480,
        512
      ],
      "id": "1b934c4b-057c-4fbb-bedb-2a06dccf0f08"
    }
  ],
  "pinData": {},
  "repo_name": "backup-n8n",
  "repo_owner": "faelsou",
  "repo_path": "backups/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-07-27T05:39:49.819Z",
      "updatedAt": "2025-07-27T05:39:49.819Z",
      "id": "VQoXsflhaeiNk7MH",
      "name": "monitoring"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-07-27T05:45:20.505Z",
  "versionId": "911b881c-2ca2-4f55-9240-b1c2d6063d98"
}