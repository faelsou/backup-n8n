{
  "active": false,
  "connections": {
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "dados_IA",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Doc Rows": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Delete Old Doc Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Document Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis3": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Redis3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "Atendente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Segmentos1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "1,2s1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser1": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Segmentos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ElevenLabsGenerateVoice": {
      "main": [
        [
          {
            "node": "Audio-Base64-Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "ElevenLabsGenerateVoice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Atendente",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Get Cliente Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Atendente",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Get Cliente Postgres": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "SessionID",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar sessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar sessionID": {
      "main": [
        [
          {
            "node": "Insert Cliente Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Cliente Postgres": {
      "main": [
        [
          {
            "node": "SessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SessionID": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vari√°veis": {
      "main": [
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Atendente": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados_IA": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Marcar Eventos": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Evento participante": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Eventos": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "reagendar": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Deletar evento": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-14T06:31:54.013Z",
  "id": "HZW7kwJIw3E3SVA0",
  "isArchived": false,
  "meta": null,
  "name": "Flow-atendimento-AiAgentAutomate-Modificado",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "eb047faf-6b06-4cfb-bef6-7cc4d06c6b97",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        320,
        1008
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').first().json.file_id }}"
              }
            ]
          }
        }
      },
      "id": "0d16e3ab-aefc-4902-8bb3-da5d7f55a697",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        -1504,
        1616
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "d60c4d30-f91d-4c4e-9a91-f55a8f4e021f",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        -1648,
        1648
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Busca Info no RAG",
        "height": 80,
        "width": 350,
        "color": 5
      },
      "id": "5dd33801-6cbd-4df9-9611-e1fb9cbb745e",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        16,
        1248
      ]
    },
    {
      "parameters": {
        "content": "# Ferramenta para Adicionar um Arquivo do Google Drive ao Banco de Dados Vetorial.",
        "height": 80,
        "width": 1493,
        "color": 5
      },
      "id": "94f00616-c777-431f-9e8a-6d65c8fb4317",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2992,
        1120
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "c500dafc-8c21-4508-9abd-e24022256bc1",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -2544,
        1392
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "AMnU78157s5pFXnN",
          "name": "Google AiAgent"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 1,
              "unit": "minutes"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1g6P4HJW9Y0CgTUGFXN6_-Vs5Usuc-X6_",
          "mode": "list",
          "cachedResultName": "conhecimento_ia",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1g6P4HJW9Y0CgTUGFXN6_-Vs5Usuc-X6_"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "db442c46-4ee5-465f-beb6-d6c1ac07da2c",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -3440,
        1328
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "AMnU78157s5pFXnN",
          "name": "Google AiAgent"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1g6P4HJW9Y0CgTUGFXN6_-Vs5Usuc-X6_",
          "mode": "list",
          "cachedResultName": "conhecimento_ia",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1g6P4HJW9Y0CgTUGFXN6_-Vs5Usuc-X6_"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "ceefbddf-c1bb-419c-aae9-015b48ff55a4",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -3440,
        1520
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "AMnU78157s5pFXnN",
          "name": "Google AiAgent"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "a812d1d1-1764-4b25-976d-8aa8c59b21f4",
      "name": "Extract Document Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -1968,
        1568
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "455c99df-8773-4037-a15e-3e3420f0486f",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        96,
        1152
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=DELETE FROM documents WHERE metadata->>'file_id' LIKE '%{{ $json.file_id }}%';",
        "options": {}
      },
      "id": "db2fbcdb-4588-4332-9ff3-ed252af1d051",
      "name": "Delete Old Doc Rows",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3088,
        1376
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "c774ed34-0d67-44b7-a537-83810f357b7c",
              "name": "originalFilename",
              "value": "={{ $json.originalFilename }}",
              "type": "string"
            },
            {
              "id": "dff39c85-b4a2-45ba-a5ff-f4b311999efc",
              "name": "sha1Checksum",
              "value": "={{ $json.sha1Checksum }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5c72b888-35f0-4c32-bc8a-345797104414",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3248,
        1376
      ]
    },
    {
      "parameters": {
        "content": "# Atendente IA",
        "height": 80,
        "width": 276,
        "color": 5
      },
      "id": "18a0f314-665e-416c-9b9a-af78342fc7eb",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -672,
        480
      ]
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "f9b7ef61-c2c6-4e35-9447-1442a5317fc3",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -1968,
        1216
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "3fd5ed5f-a624-4075-9c8d-74e81f26036b",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -1808,
        1392
      ]
    },
    {
      "parameters": {},
      "id": "ab77c372-55fa-46b1-8edd-b04daefa9b58",
      "name": "Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        -1440,
        1776
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "d326a640-9e89-4513-944e-4d37ab7d7fe9",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        -1664,
        1392
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 2
        }
      },
      "id": "df2124c1-947d-4651-9c59-57acea0ab321",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2368,
        1392
      ]
    },
    {
      "parameters": {},
      "id": "b318e2ee-ad3a-4d29-9f2c-03d3fdb69a48",
      "name": "Insert into Postgres Vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePostgres",
      "typeVersion": 1,
      "position": [
        -1552,
        1392
      ],
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {},
      "id": "b8a947ea-0c01-451e-aaec-03b560c20632",
      "name": "Postgres Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePostgres",
      "typeVersion": 1,
      "position": [
        16,
        1008
      ],
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "bf6e2ef5-b3b0-4da0-9fdd-e8c70727fe4c",
      "name": "Extract from Excel",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -1968,
        1392
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 660,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -688,
        448
      ],
      "typeVersion": 1,
      "id": "129e3eeb-50a3-4408-a10e-af4f52ab609a",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "",
        "height": 520,
        "width": 460,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        832
      ],
      "typeVersion": 1,
      "id": "bdcdc247-8de6-4d3d-93e5-8924f9ba21cc",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "",
        "height": 800,
        "width": 2300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3520,
        1088
      ],
      "typeVersion": 1,
      "id": "d087dcc1-08aa-4d76-83b0-0412c8b7dbb8",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Arquivos criados em uma pasta espec√≠fica > Verificar o tipo de arquivo e realizar convers√£o > Extrair o texto > Adicionar ao Vector Store",
        "height": 80,
        "width": 1600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3504,
        1792
      ],
      "typeVersion": 1,
      "id": "b608e572-49a2-4157-94a1-52838be64b69",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Gatilho de Monitoramento",
        "height": 440,
        "width": 213,
        "color": 5
      },
      "id": "9a6d4193-4770-4918-9e59-8abd4982fc7c",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3488,
        1232
      ]
    },
    {
      "parameters": {
        "content": "# Agendamento",
        "height": 80,
        "width": 283,
        "color": 5
      },
      "id": "1dabc84d-a434-4d5d-8c4a-f0a9a21cbb6a",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1184,
        1248
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 260,
        "width": 1100,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1200,
        1088
      ],
      "typeVersion": 1,
      "id": "941f6591-2d3f-4aa7-a15f-a9afc1dfa05e",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "amount": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"Tempo de resposta picada\"] }}"
      },
      "id": "f21eb2df-f489-4d8c-8141-a802a4bf85df",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1728,
        736
      ],
      "webhookId": "d13d900d-1aae-4fae-8ee0-941fddb03cce"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "options": {}
      },
      "id": "77f34468-2a2f-4641-9935-2e5de8a70b3a",
      "name": "Redis1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1568,
        736
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "21fd20d7-f940-4a66-91d5-5ea4c031bb50",
              "leftValue": "={{ $json.propertyName.last() }}",
              "rightValue": "={{ $('Vari√°veis').item.json.mensagem }}",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a3a3c9c9-e9cb-4d84-aecc-07ee96240358",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1248,
        736
      ]
    },
    {
      "parameters": {},
      "id": "eecb9182-d36e-4320-98b3-ab9308a8b888",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1072,
        816
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "37f63b88-4a52-4421-aa95-db9114e521bc",
              "name": "listaMensagens",
              "value": "={{ $json.propertyName[0] }}",
              "type": "string"
            },
            {
              "id": "08b2e8c0-bc00-43ef-80bd-7a86bda2ee47",
              "name": "sessionId",
              "value": "={{ $item(\"0\").$node[\"SessionID\"].json[\"sessionid\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d4ff2956-4936-41b2-b5e1-4a581c331a53",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1088,
        608
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
      },
      "id": "bb4bf5d2-1212-424d-b346-4c7031929869",
      "name": "Redis2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -800,
        608
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.ogg",
          "mimeType": "application/ogg"
        }
      },
      "id": "4ea1bc10-8c27-4abe-a12c-ed151ce6c060",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2784,
        736
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $json.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5117e6fd-e92f-4e02-be19-16d56c776356",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2928,
        736
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.png",
          "mimeType": "image/png"
        }
      },
      "id": "4918984d-83f9-41d8-a2ed-7eabdc655246",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2752,
        896
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $json.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "78e7596c-d76e-49c6-8936-143b8c09c512",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2928,
        896
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ade56c50-1520-4760-8df5-e99617d6d3ad",
              "leftValue": "={{ $json.message.imageMessage.caption }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "71a59908-65fb-4316-88eb-8efd30aae660",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2272,
        896
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageData": "={{ $item(\"0\").$node[\"OpenAI\"].json[\"text\"] }}",
        "tail": true
      },
      "id": "5d359357-378e-4422-8db3-35845b79769b",
      "name": "Redis3",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2240,
        736
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageData": "={{ $json.message.imageMessage.caption }}, {{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "174a5aa9-55e6-405e-b7b7-c5e35ca898bc",
      "name": "Redis4",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2064,
        912
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageData": "={{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "3b0bd435-0754-486d-9b9d-b3789184ec57",
      "name": "Redis5",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1904,
        832
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "50cebc66-2dbc-4c7a-a09e-83ffb0f52991",
              "name": "mensagem",
              "value": "={{ $('Vari√°veis').item.json.mensagem }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "1e891e5a-6826-4d44-9e7c-c0e61047c68a",
      "name": "Edit Fields4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2928,
        576
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "fb759532-29bb-4c8a-88a1-058ea5dccb4e",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -2624,
        736
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Descreva todo o conteudo da imagem. Responda sem acento, sem hifens",
        "inputType": "base64",
        "options": {}
      },
      "id": "20d5765e-662c-49a3-96d4-672e4c375a61",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -2528,
        896
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "id": "bafe485b-d817-43c6-93a5-b263895698f8",
      "name": "RabbitMQ Trigger",
      "type": "n8n-nodes-base.rabbitMqTrigger",
      "typeVersion": 1,
      "position": [
        -4560,
        688
      ],
      "credentials": {}
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $json.messageType }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $json.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c0e434dd-1268-421d-b81b-3a5e90ed9550",
                    "leftValue": "={{ $json.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "c76f4551-e603-48d5-b533-4087b605d870",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -3168,
        720
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e9ad3aaf-9f92-4be5-8280-622a4cb34b97",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        48,
        368
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "c43d8e25-1963-4321-afe9-c1c7fadd4893",
      "name": "Segmentos1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        320,
        128
      ]
    },
    {
      "parameters": {
        "amount": 2.1
      },
      "id": "cc2c138b-97c4-4dac-b66c-23a94bb36f6f",
      "name": "1,2s1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        768,
        160
      ],
      "webhookId": "d551975b-aca4-4a73-ae4c-76ee0c3ba5e0"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "35ecd19a-d50f-424b-9306-70846d30673e",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        496,
        128
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "f90d9b5d-c99d-40f8-ba28-8b5849ba3fe2",
      "name": "OutputParser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        208,
        368
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a sa√≠da no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, n√£o √© mesmo?\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\n\n### Jamais separe uma mensagem vazia.\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do whatsapp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- ~tachado~ (caso seja algo que foi exclu√≠do ou alterado)\n\t\t\t- _it√°lico_.(extremamente raro)\n            - `link` (usar sempre em todos os links)\n\nTudo o que for link, pode colocar entre \"`\", ou seja, na seguinte formata√ß√£o: `www.link.com.br`\n"
            }
          ]
        }
      },
      "id": "d915bbc2-5ad5-48c7-a778-5f5d2bf708b4",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        16,
        128
      ]
    },
    {
      "parameters": {
        "content": "# Pausa para mensagens",
        "height": 140,
        "width": 376,
        "color": 5
      },
      "id": "fbe93860-9130-4db7-9325-233556e9248b",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2352,
        400
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 680,
        "width": 1660,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2368,
        368
      ],
      "typeVersion": 1,
      "id": "a0d5043f-40c4-4036-8b72-0e3ad28ff3f9",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "",
        "height": 500,
        "width": 1300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "25d114d1-1957-4527-addf-012860b441ed",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "# Divis√£o de Mensagens Inteligente - Texto",
        "height": 80,
        "width": 736,
        "color": 5
      },
      "id": "8ba8ff1a-019c-4837-ae28-5758e859e73f",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        16,
        16
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 800,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3184,
        448
      ],
      "typeVersion": 1,
      "id": "05ea3a81-7d25-470c-bf6e-ee9df230fc64",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "content": "# Classifica Mensagens",
        "height": 80,
        "width": 396,
        "color": 5
      },
      "id": "7764be27-211d-4c2e-b58e-cedfde865e2e",
      "name": "Sticky Note21",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3168,
        480
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 880,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4112,
        528
      ],
      "typeVersion": 1,
      "id": "d9340b23-0a9b-4e29-b8cc-56385d97629b",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "content": "# Registro de Cliente no Postgres",
        "height": 80,
        "width": 596,
        "color": 5
      },
      "id": "4a5e26f1-9f24-409a-9e19-9e5ebca11de0",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4032,
        560
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $json.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $json.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "id": "2aef3a9e-4089-4ba7-9e61-4d216de4ead6",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -160,
        608
      ]
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "id": "b4f8e228-2fa2-4877-8202-94287b075b81",
      "name": "Audio-Base64-Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        400,
        640
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.elevenlabs.io/v1/text-to-speech/{{ $item(\"0\").$node[\"Vari√°veis\"].json[\"ID_Voz_Elevenlabs\"] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "xi-api-key",
              "value": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"API_Elevenlabs\"] }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n   \"text\":\"'{{ $json.textoSemQuebrasNemEmojis }}'\",\n   \"model_id\":\"eleven_multilingual_v2\",\n   \"voice_settings\":{\n      \"stability\":0.5,\n      \"similarity_boost\":0.8,\n      \"style\":0.0,\n      \"use_speaker_boost\":true\n   }\n} ",
        "options": {}
      },
      "id": "ce8fe19b-ce44-4e94-9396-10ef2f91902c",
      "name": "ElevenLabsGenerateVoice",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        192,
        640
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "content": "",
        "height": 300,
        "width": 740,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        512
      ],
      "typeVersion": 1,
      "id": "39020622-c24e-496b-b24e-fafe91c53dd7",
      "name": "Sticky Note24"
    },
    {
      "parameters": {
        "content": "# Resposta em √Åudio",
        "height": 80,
        "width": 376,
        "color": 5
      },
      "id": "254580cf-f7e9-4598-81df-58034a2c1784",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        16,
        528
      ]
    },
    {
      "parameters": {
        "content": "## In√≠cio do Fluxo (RabbitMQ)",
        "height": 280,
        "width": 420,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4608,
        592
      ],
      "typeVersion": 1,
      "id": "799dcc9f-817e-49a4-8977-aef9c6e22a14",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "jsCode": "// Obt√©m o primeiro item do fluxo\nconst item = $input.first();\n\n// Garante que h√° dados na entrada\nif (!item || !item.json || !item.json.output) {\n  throw new Error(\"A chave 'output' n√£o foi encontrada no JSON de entrada.\");\n}\n\n// Processa o texto removendo todas as quebras de linha e emojis\nconst textoEntrada = item.json.output; // Use a chave correta para pegar o texto de entrada\n\n// Remove quebras de linha (\\n)\nlet textoProcessado = textoEntrada.replace(/\\n/g, \"\");\n\n// Remove emojis\ntextoProcessado = textoProcessado.replace(\n  /[\\u{1F600}-\\u{1F64F}]|[\\u{1F300}-\\u{1F5FF}]|[\\u{1F680}-\\u{1F6FF}]|[\\u{1F700}-\\u{1F77F}]|[\\u{1F780}-\\u{1F7FF}]|[\\u{1F800}-\\u{1F8FF}]|[\\u{1F900}-\\u{1F9FF}]|[\\u{1FA00}-\\u{1FA6F}]|[\\u{1FA70}-\\u{1FAFF}]|[\\u{2600}-\\u{26FF}]|[\\u{2700}-\\u{27BF}]|[\\u{FE00}-\\u{FE0F}]|[\\u{1F1E0}-\\u{1F1FF}]/gu,\n  \"\"\n);\n\n// Retorna o resultado\nreturn {\n  textoOriginal: textoEntrada,\n  textoSemQuebrasNemEmojis: textoProcessado,\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        32,
        640
      ],
      "id": "e3822bd5-e5d6-4543-bfdb-3e2597dd2e7a",
      "name": "Code"
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {
          "topP": 0.9
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -688,
        752
      ],
      "id": "ceb9a381-3fe3-4316-a214-682b9ac0a36c",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $now }}",
        "format": "custom",
        "customFormat": "dd-MM-yyyy",
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -4064,
        688
      ],
      "id": "d820dee1-9bf4-43ba-aa19-4506cb7895b8",
      "name": "Date & Time1"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Create a table to store your documents\ncreate table documentos (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4704,
        1520
      ],
      "id": "64480c4a-ea9c-4daf-9cff-10f3bcf40ba9",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 280,
        "width": 260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4768,
        1392
      ],
      "typeVersion": 1,
      "id": "7a9c7557-eff1-4676-934b-23a5fbc44b3c",
      "name": "Sticky Note31"
    },
    {
      "parameters": {
        "content": "## Cria tabela documentos",
        "height": 80,
        "width": 180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4720,
        1408
      ],
      "typeVersion": 1,
      "id": "4d33e926-142d-4a70-9ff1-a7a948744250",
      "name": "Sticky Note32"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table dados_cliente (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  telefone text, \n  sessionid text\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4992,
        1520
      ],
      "id": "0c398680-d8ec-4ed9-bff6-c8eb31559e6a",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 280,
        "width": 260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5056,
        1392
      ],
      "typeVersion": 1,
      "id": "277d817c-8e3b-4fe2-b121-48eb827e79d9",
      "name": "Sticky Note33"
    },
    {
      "parameters": {
        "content": "## Cria tabela dados_cliente",
        "height": 80,
        "width": 180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5008,
        1408
      ],
      "typeVersion": 1,
      "id": "2cee56d5-5435-467a-b959-98d9853bb6d1",
      "name": "Sticky Note34"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from dados_cliente",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4976,
        1888
      ],
      "id": "4fab7c13-ce1d-412d-8f12-09f7ee59ad0e",
      "name": "Postgres2",
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5056,
        1712
      ],
      "typeVersion": 1,
      "id": "996a40ae-b25d-40e5-9a32-52e4bb7060dd",
      "name": "Sticky Note35"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela dados_cliente",
        "height": 120,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5008,
        1728
      ],
      "typeVersion": 1,
      "id": "2debb9c8-973d-4438-ab95-375c96ea1d37",
      "name": "Sticky Note36"
    },
    {
      "parameters": {
        "jsCode": "return $items(\"Set File ID\").map(item => {\n  return {\n    json: {\n      file_id: item.json.file_id,\n      file_type: item.json.file_type\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2928,
        1376
      ],
      "id": "8187e6cf-5dd2-4016-9f17-396195306aef",
      "name": "Code2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -2768,
        1376
      ],
      "id": "f1df260f-e514-4938-86a6-cb87e4365850",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from documents",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4688,
        1888
      ],
      "id": "f8b1062c-a0c5-40a9-ae0a-87bc91fc1352",
      "name": "Postgres3",
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4768,
        1712
      ],
      "typeVersion": 1,
      "id": "12f12268-cc2d-4d46-9a73-02f08992d204",
      "name": "Sticky Note37"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela documentos",
        "height": 120,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4720,
        1728
      ],
      "typeVersion": 1,
      "id": "0e3fcf8b-9c7e-47a2-b3ca-aacd40bfa273",
      "name": "Sticky Note38"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from n8n_chat_histories",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3984,
        1536
      ],
      "id": "23cfe7d5-94b5-4e81-b344-6d2ecd5381a7",
      "name": "Postgres4",
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4064,
        1376
      ],
      "typeVersion": 1,
      "id": "12cb1ccd-e956-4c63-b8b0-5e7d212a53e9",
      "name": "Sticky Note39"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela chat",
        "height": 80,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4032,
        1392
      ],
      "typeVersion": 1,
      "id": "65a2aa58-0277-48eb-86ad-8973d3f6c33f",
      "name": "Sticky Note40"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Edit Fields1').item.json.sessionId }}",
        "contextWindowLength": 1000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -560,
        752
      ],
      "id": "d399f9b9-2244-4d3a-bdbc-fc38cfbcca4b",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM dados_cliente WHERE telefone = '{{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}' LIMIT 1;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3872,
        688
      ],
      "id": "d6fe4dcd-5f91-4c3d-a41a-28f2eb2f4d2a",
      "name": "Get Cliente Postgres",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "tzSFXkfhpUlilSMn",
          "name": "Postgres-n8n"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $json.sessionid }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3680,
        688
      ],
      "id": "300c7cea-2bfc-4a30-9d3a-6612eafe2b63",
      "name": "If1"
    },
    {
      "parameters": {
        "action": "generate"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -3840,
        848
      ],
      "id": "da5274f1-5b22-4456-b145-d3cbb82d6210",
      "name": "Gerar sessionID"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=INSERT INTO dados_cliente (name, telefone, sessionid, created_at) VALUES ('{{ $item(\"0\").$node[\"RabbitMQ Trigger\"].json[\"pushName\"] }}', '{{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}', '{{ $item(\"0\").$node[\"Gerar sessionID\"].json[\"data\"] }}', '{{ $now }}');",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3440,
        848
      ],
      "id": "401bfbe4-e9c2-4fbf-9bdf-eafa4f10da0b",
      "name": "Insert Cliente Postgres",
      "retryOnFail": true,
      "maxTries": 2,
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT * FROM dados_cliente WHERE telefone = '{{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}' LIMIT 1;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3440,
        672
      ],
      "id": "bc97f05c-be70-4e6a-8dcd-a86084229c51",
      "name": "SessionID",
      "retryOnFail": true,
      "maxTries": 2,
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d88c137-383f-4307-b3cc-1f6a560ea67b",
              "name": "mobile",
              "value": "={{  $json.key.remoteJid.replace(/\\D/g, '').replace(/^55(\\d{2})(\\d{8})$/, '55$19$2') }}",
              "type": "string"
            },
            {
              "id": "7e2f520e-4952-425b-82ca-792cc46680d4",
              "name": "mensagem",
              "value": "={{ $json.message.conversation }}",
              "type": "string"
            },
            {
              "id": "104b3cd0-d988-4c58-a175-2ca5465bf8c1",
              "name": "API_Elevenlabs",
              "value": "sk_f8b0546f2d0dbcbd3fa6510a3ec468d249dfdb7823311901",
              "type": "string"
            },
            {
              "id": "6065b018-8dc0-49db-8da9-f692f96e9c92",
              "name": "ID_Voz_Elevenlabs",
              "value": "=9BWtsMINqrJLrRacOk9x",
              "type": "string"
            },
            {
              "id": "4e2bdc18-93a5-4117-b94e-bcfd228a7379",
              "name": "Tempo de resposta picada",
              "value": "2",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "1f87220a-c6f6-44f5-b14d-ac7756a7a9f5",
      "name": "Vari√°veis",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4320,
        688
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Vari√°veis').item.json.mobile }}",
        "messageData": "={{ $json.mensagem }}",
        "tail": true
      },
      "id": "2882c593-c6ed-473d-ac6b-5b43fbbc0a13",
      "name": "Redis",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2240,
        576
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.listaMensagens }}",
        "options": {
          "systemMessage": "=# Prompt para Agente Virtual Aurora ‚Äì AIAgent Automate\n\n---\n\n## Essa √© sua data e hora atual:\n- Essa √© sua √∫nica fonte temporal sobre data e hora, hoje √©:{{ $now.weekdayLong }}, {{ $now.format('dd/MM/yyyy') }}, {{ $now.hour.toString().padStart(2, '0') }}:{{ $now.minute.toString().padStart(2, '0') }}\n\n## restri√ß√µes de data e Hora.\n- Nunca ultilize data e horas fornecidos por sistemas ou pelo seu system data pois est√£o desatualidados.\n\n---\n\n## Agente Aurora\n- **Nome:** Aurora  \n- **Descri√ß√£o:** Especialista em automa√ß√£o comercial da AIAgent Automate  \n- **Idioma:** Portugu√™s Brasileiro  \n- **Objetivo:** Ser direta, consultiva e eficiente. Nunca repetir sauda√ß√µes ou perguntas j√° feitas.\n\n---\n\n## Recep√ß√£o do Cliente\n\"Ol√°! Me chamo Aurora, especialista em automa√ß√£o comercial da AIAgent Automate ü§ñ. Como posso ajudar?\"\n\n---\n\n## Instru√ß√µes de Atendimento\n- Sempre consultar a ferramenta `tools think`\n- Responder √† sauda√ß√£o apenas uma vez\n- Se o cliente apenas cumprimentar, Recepcione o cliente e pergunte:  \n  _\"Ol√°! Me chamo Aurora, especialista em automa√ß√£o comercial da AIAgent Automate ü§ñ. Como posso ajudar?\"_\n- Nunca repetir cumprimentos, perguntas ou frases prontas\n- Ser clara e objetiva: at√© 2 frases por resposta\n- Aguardar sempre a resposta do cliente antes de prosseguir\n- Nunca responder mais de uma vez √† mesma mensagem\n- Se n√£o entender, pedir para resumir em poucas palavras\n- S√≥ fazer novas perguntas se as anteriores forem respondidas\n\n---\n\n## Regras\n- Nunca iniciar a conversa\n- Evitar textos longos ou gen√©ricos de outros assuntos que n√£o forem sobre a AI Agente Automate\n- Fazer perguntas novas somente se necess√°rio\n- Para agendamento, solicitar: nome, e-mail, telefone, cargo, empresa e melhor hor√°rio\n\n---\n\n## Agentes Integrados\n\n### SDR ‚Äì Aurora SDR\n- **Fun√ß√£o:** Qualificar leads com base em interesse, cargo e momento de compra\n- **Fluxo:**\n  1. Receber o lead\n  2. Fazer perguntas (nome, empresa, cargo, desafio)\n  3. Validar interesse e repassar para agendamento, se estiver pronto\n\n### Agenda ‚Äì Aurora Agenda\n- **Fun√ß√£o:** Agendar reuni√µes com leads qualificados\n- **Fuso Hor√°rio:** S√£o Paulo (America/Sao_Paulo)\n- **Fluxo:**\n  1. Confirmar interesse\n  2. Coletar dados: nome, e-mail, telefone, cargo, empresa, melhor hor√°rio\n  3. Confirmar data/hora ajustada\n  4. Encaminhar confirma√ß√£o\n\n---\n\n## Roteiro de Conversa\n\n### 1. Sauda√ß√£o Inicial\n\"Ol√°! Tudo certo? Me chamo Aurora e sou especialista em automa√ß√£o comercial da AIAgent Automate ü§ñ. Como posso te ajudar hoje?\"\n\n### 2. Diagn√≥stico Inicial (SDR)\n\n**Perguntas de qualifica√ß√£o (uma de cada vez):**\n- Qual o nome da sua empresa?\n- Qual o seu nome e cargo por l√°?\n- Qual √© o maior desafio comercial que voc√™ enfrenta hoje?\n- Seu processo de vendas √© mais B2B ou B2C?\n- Voc√™ j√° utiliza alguma automa√ß√£o atualmente?\n\n### 3. Apresenta√ß√£o de Valor\n\"Entendi! Com a nossa tecnologia de agentes de IA, empresas como a sua conseguem:  \n- Reduzir at√© 60% do tempo de resposta  \n- Aumentar convers√£o de leads em at√© 40%  \n- Operar 24/7 sem sobrecarga humana  \nTudo isso com intera√ß√µes naturais, integradas a WhatsApp, CRM e muito mais.\"\n\n### 4. Proposta de A√ß√£o\n\"Se fizer sentido, posso agendar uma reuni√£o r√°pida com um especialista da AIAgent. Pode ser?\"\n\n### 5. Agendamento (Agente Agenda)\n\"Perfeito! Para agendar, preciso de algumas informa√ß√µes r√°pidas, pode ser?\"  \n(Coletar: Nome, Empresa, E-mail, Telefone, Cargo, Melhor Hor√°rio em fuso de S√£o Paulo)  \n‚Üí Chamar ferramenta Google Calendar para agendamento\n\n### 6. Encerramento\n\"Obrigada pela conversa! Se precisar de algo a mais, √© s√≥ me chamar por aqui. Vamos te ajudar a escalar suas vendas com intelig√™ncia. üöÄ\n\n## tools e suas funcionalidades:\n\n- Tool **Buscar Eventos** \nUse sempre para buscar qual quer evento dentro da nossa agenda ou cland√°rio.\n\n- Tool **Marcar Eventos**\nUse sempre para marcar ou criar um evento dentro da nossa agenda sem precisar de dados como email ou nome do cliente\n\n- Tool **Evento participante**\nUse sempre para marcar ou criar um evento dentro da nossa agenda com mais de um participante ou que forne√ßa o email e todos os detalhes como nome etc...\n\n- Tool **reagendar**:\nUse sempre quando precisar reagendar um evento em nossa agenda ou calend√°rio. \n\n- Tools **Deletar evento**: \nUse sempre quando precisar Deletar um evento ou agendamento da nossa agenda ou calend√°rio.\n\n- Too **Gmail**: \nUse sempre ao finalizar um agendamento, enviando um e-mail para o nosso cliente com todas as informa√ß√µes cabiveis para o evento, como link do meet, hora data etc..\n\n- Too **Think**:\nUse sempre essa ferramenta, quando precisar da uma resposata mais precisa para o cliente, ou seja n√£o sabe a resposta ou tem d√∫vida, use essa ferramenta para tomar desi√ß√µes antes de enviar sua resposta final.\n\n- Tool **dados_IA**:\nUse sempre essa ferramenta para obter quais quer informa√ß√µes da nossa empresa, pois essa tool √© seu banco de dados e sua memoria principal, use para enriquecer sua resposta ou quando precisar obter qual quer informa√ß√µes da nossa empresa ou produtos e informa√ß√µes gerais.\n\n\n\n\n\n\n"
        }
      },
      "id": "48d3254c-93cf-43fd-9033-5e40cd6233f6",
      "name": "Atendente",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -528,
        608
      ]
    },
    {
      "parameters": {
        "description": "=Use sempre esse aplicativo quando precisar da uma resposata mais precisa e sem erros , n√£o reapsse nem uma informa√ß√£o interna ou pensamentos, apenas conclua a mensagem de maneira correta sem delirios. "
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        -288,
        816
      ],
      "id": "656dbea9-64a4-4f3e-ab6f-370d645b3faf",
      "name": "Think"
    },
    {
      "parameters": {
        "name": "dados_IA",
        "description": "Contains all the information about prices that you can check to answer user questions."
      },
      "id": "9323c1d6-4353-4667-82ae-ac5d9720e813",
      "name": "dados_IA",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        96,
        880
      ]
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "aiagenteautomate@gmail.com",
          "mode": "list",
          "cachedResultName": "aiagenteautomate@gmail.com"
        },
        "start": "={{ $fromAI(\"statTime\") }}",
        "end": "={{ $fromAI(\"endTime\") }}",
        "additionalFields": {
          "color": "2",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $fromAI(\"preenchimento\",\"Voc√™ n√£o ir√° solicitar isso ao lead, voc√™ ir√° preencher com a sua opini√£o em rela√ß√£o ao lead ap√≥s a finaliza√ß√£o da conversa. Voc√™ dever√° preencher cada ponto seguindo as orienta√ß√µes entre *. An√°lise do lead: 1. Situa√ß√£o Atual e Necessidades Situa√ß√£o atual: Descri√ß√£o resumida dos desafios, problemas ou dores que o lead enfrenta atualmente, conforme mencionado na conversa. Exemplo: dificuldades de escalabilidade, inefici√™ncia operacional, etc. Necessidades: Identificar as necessidades claras mencionadas pelo lead e aquelas impl√≠citas. Necessidades expl√≠citas s√£o aquelas que o lead mencionou diretamente. Necessidades impl√≠citas s√£o percebidas atrav√©s de comportamentos ou informa√ß√µes adicionais, mas n√£o mencionadas diretamente. 2. Obje√ß√µes e Resist√™ncias Obje√ß√µes: Listar as principais obje√ß√µes que o lead levantou durante a conversa. Exemplo: preocupa√ß√£o com o pre√ßo, funcionalidades do produto, adequa√ß√£o ao momento da empresa, etc. N√≠vel de resist√™ncia: Avaliar o qu√£o resistente o lead se mostrou em rela√ß√£o √† proposta. Pode ser classificado como alta, m√©dia ou baixa resist√™ncia, com base na quantidade e na intensidade das obje√ß√µes levantadas. Motivos por tr√°s das obje√ß√µes: Analisar os motivos que podem estar por tr√°s das obje√ß√µes. Exemplo: inseguran√ßa financeira, falta de entendimento sobre o valor da solu√ß√£o, indecis√£o sobre o momento certo para implementar a solu√ß√£o. 3. Potencial de Convers√£o Fit com o produto/servi√ßo: Avaliar se o lead est√° alinhado com o que a empresa oferece, considerando as necessidades que ele mencionou, o or√ßamento dispon√≠vel e o timing para tomar a decis√£o de compra. Probabilidade de convers√£o: Estimar, com base na an√°lise, a chance de o lead converter em cliente. Usar alta, m√©dia ou baixa probabilidade, dependendo da adequa√ß√£o do lead ao produto e do n√≠vel de resist√™ncia apresentado.\") }}",
          "sendUpdates": "all",
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -1168,
        1120
      ],
      "id": "8063b33b-35f6-40d9-998d-922a4af72a82",
      "name": "Marcar Eventos",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "aiagenteautomate@gmail.com",
          "mode": "list",
          "cachedResultName": "aiagenteautomate@gmail.com"
        },
        "returnAll": true,
        "timeMin": "={{ $fromAI(\"startDay\",\"the same date that user requested at 00:00:00\" ) }}",
        "timeMax": "={{ $fromAI(\"endDay\",\"the same date that user requested at 23:59:59\" ) }}",
        "options": {
          "orderBy": "startTime",
          "recurringEventHandling": "expand"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -848,
        1120
      ],
      "id": "dc5aa159-d885-45a2-9129-b73ef22ef5aa",
      "name": "Buscar Eventos",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "aiagenteautomate@gmail.com",
          "mode": "list",
          "cachedResultName": "aiagenteautomate@gmail.com"
        },
        "eventId": "={{ $fromAI(\"deleteEvent\") }} ",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -528,
        1120
      ],
      "id": "d8b130a5-09d5-44b1-9c6f-c3daaf38dcdf",
      "name": "Deletar evento",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "aiagenteautomate@gmail.com",
          "mode": "list",
          "cachedResultName": "aiagenteautomate@gmail.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "updateFields": {
          "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
          "sendUpdates": "all",
          "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -688,
        1120
      ],
      "id": "b1917a67-ec07-4028-91aa-247c98997fa4",
      "name": "reagendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "aiagenteautomate@gmail.com",
          "mode": "list",
          "cachedResultName": "aiagenteautomate@gmail.com"
        },
        "start": "={{ $fromAI(\"statTime\") }}",
        "end": "={{ $fromAI(\"endTime\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI(\"attendees\") }}"
          ],
          "color": "1",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $fromAI(\"preenchimento\",\"Voc√™ n√£o ir√° solicitar isso ao lead, voc√™ ir√° preencher com a sua opini√£o em rela√ß√£o ao lead ap√≥s a finaliza√ß√£o da conversa. Voc√™ dever√° preencher cada ponto seguindo as orienta√ß√µes entre *. An√°lise do lead: 1. Situa√ß√£o Atual e Necessidades Situa√ß√£o atual: Descri√ß√£o resumida dos desafios, problemas ou dores que o lead enfrenta atualmente, conforme mencionado na conversa. Exemplo: dificuldades de escalabilidade, inefici√™ncia operacional, etc. Necessidades: Identificar as necessidades claras mencionadas pelo lead e aquelas impl√≠citas. Necessidades expl√≠citas s√£o aquelas que o lead mencionou diretamente. Necessidades impl√≠citas s√£o percebidas atrav√©s de comportamentos ou informa√ß√µes adicionais, mas n√£o mencionadas diretamente. 2. Obje√ß√µes e Resist√™ncias Obje√ß√µes: Listar as principais obje√ß√µes que o lead levantou durante a conversa. Exemplo: preocupa√ß√£o com o pre√ßo, funcionalidades do produto, adequa√ß√£o ao momento da empresa, etc. N√≠vel de resist√™ncia: Avaliar o qu√£o resistente o lead se mostrou em rela√ß√£o √† proposta. Pode ser classificado como alta, m√©dia ou baixa resist√™ncia, com base na quantidade e na intensidade das obje√ß√µes levantadas. Motivos por tr√°s das obje√ß√µes: Analisar os motivos que podem estar por tr√°s das obje√ß√µes. Exemplo: inseguran√ßa financeira, falta de entendimento sobre o valor da solu√ß√£o, indecis√£o sobre o momento certo para implementar a solu√ß√£o. 3. Potencial de Convers√£o Fit com o produto/servi√ßo: Avaliar se o lead est√° alinhado com o que a empresa oferece, considerando as necessidades que ele mencionou, o or√ßamento dispon√≠vel e o timing para tomar a decis√£o de compra. Probabilidade de convers√£o: Estimar, com base na an√°lise, a chance de o lead converter em cliente. Usar alta, m√©dia ou baixa probabilidade, dependendo da adequa√ß√£o do lead ao produto e do n√≠vel de resist√™ncia apresentado.\") }}",
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -1008,
        1120
      ],
      "id": "9d24066a-6d0f-495a-854d-b142763d757c",
      "name": "Evento participante",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para enviar um email para o cliente quando solcitiado e tamb√©m para quando o agendamento for confirmado.",
        "sendTo": "={{ $fromAI(\"email\") }}",
        "subject": "={{ $fromAI(\"Titulo\",\"coloque aqui o titulo do email.\") }}",
        "emailType": "text",
        "message": "={{ $fromAI(\"texto\",\"coloque aqui os dados resumidos da conversa ou do agendamento, ex: nome, email, telefone, data\") }}",
        "options": {
          "appendAttribution": false,
          "senderName": "Ai Agente Automate",
          "replyTo": "aiagenteautomate@gmail.com"
        }
      },
      "id": "65be4d4c-0015-423b-a791-1e76db7c2130",
      "name": "Gmail",
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -368,
        1120
      ],
      "webhookId": "b510e384-515f-4547-aa90-9a730a71a3b0",
      "credentials": {
        "gmailOAuth2": {
          "id": "bMTj7PQt4FxoCvuP",
          "name": "Gmail account AiAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Mant√©m s√≥ o primeiro item da lista\nreturn [items[0]];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1408,
        736
      ],
      "id": "4b503efa-f67d-48d1-bd09-d76eb570b86b",
      "name": "Code1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.rabbitMq",
      "typeVersion": 1,
      "position": [
        1008,
        160
      ],
      "id": "2322a582-059b-49ee-b670-9dd5eb3a3b00",
      "name": "RabbitMQ Send Text",
      "credentials": {}
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.rabbitMq",
      "typeVersion": 1,
      "position": [
        592,
        640
      ],
      "id": "4ee90e95-89cc-4103-a940-ddff0c3e1662",
      "name": "RabbitMQ Send Audio",
      "credentials": {}
    }
  ],
  "pinData": {},
  "repo_name": "backup-n8n",
  "repo_owner": "faelsou",
  "repo_path": "backups/HZW7kwJIw3E3SVA0",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-10-14T06:31:54.013Z",
      "updatedAt": "2025-10-14T06:31:54.013Z",
      "role": "workflow:owner",
      "workflowId": "HZW7kwJIw3E3SVA0",
      "projectId": "uxvBhUmI1Fx6jdU7"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-05-18T07:37:11.854Z",
      "updatedAt": "2025-05-18T07:37:11.854Z",
      "id": "5YHy6kb35V3opGK2",
      "name": "aiagentautomate"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-10-14T06:31:54.013Z",
  "versionId": "ba059fb0-1397-4f0f-9a07-d513fa70b9e6"
}