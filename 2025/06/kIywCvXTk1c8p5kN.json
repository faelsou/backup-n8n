{
  "active": false,
  "connections": {
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "dados_IA",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Doc Rows": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Delete Old Doc Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Document Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "dados_IA",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Get Redis History",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Redis History": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Is New Message": {
      "main": [
        [
          {
            "node": "Set History and Session",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop: Same Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set History and Session": {
      "main": [
        [
          {
            "node": "Clear Redis History",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clear Redis History": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Redis Add Image Only",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis Add Image+Cap",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Add Audio Msg": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Add Image+Cap": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Add Image Only": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Mensagem": {
      "main": [
        [
          {
            "node": "Redis Add Text Msg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Redis Add Audio Msg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Vari√°veis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Message Type": {
      "main": [
        [
          {
            "node": "Set Mensagem",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Mensagem",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Segmentos1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1,2s1": {
      "main": [
        [
          {
            "node": "Evolution API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "1,2s1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser1": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Segmentos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Output Type": {
      "main": [
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio-Base64-Extract from File": {
      "main": [
        [
          {
            "node": "Evolution API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ElevenLabsGenerateVoice": {
      "main": [
        [
          {
            "node": "Audio-Base64-Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "ElevenLabsGenerateVoice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert into Supabase Vectorstore": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Has Session": {
      "main": [
        [
          {
            "node": "Verificar Status Cliente",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar sessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar sessionID": {
      "main": [
        [
          {
            "node": "Create New Client",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create New Client": {
      "main": [
        [
          {
            "node": "Verificar Status Cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vari√°veis": {
      "main": [
        [
          {
            "node": "Verificar Status Cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Add Text Msg": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Agente SDR",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Agente Closer",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Agente Onboarding",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "dados_IA": {
      "ai_tool": [
        [
          {
            "node": "Agente SDR",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Agente Closer",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Agente Onboarding",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Marcar Eventos": {
      "ai_tool": [
        [
          {
            "node": "Agente SDR",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Eventos": {
      "ai_tool": [
        [
          {
            "node": "Agente SDR",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Deletar evento": {
      "ai_tool": [
        [
          {
            "node": "Agente SDR",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "reagendar": {
      "ai_tool": [
        [
          {
            "node": "Agente SDR",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Evento participante": {
      "ai_tool": [
        [
          {
            "node": "Agente SDR",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "ai_tool": [
        [
          {
            "node": "Agente SDR",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Agente Onboarding",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If Is New Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Status Cliente": {
      "main": [
        [
          {
            "node": "If Has Session",
            "type": "main",
            "index": 0
          },
          {
            "node": "If Humano Ativo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch por Status": {
      "main": [
        [
          {
            "node": "Agente SDR",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Agente Onboarding",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agente SDR": {
      "main": [
        [
          {
            "node": "Switch Output Type",
            "type": "main",
            "index": 0
          },
          {
            "node": "Agente Closer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agente Closer": {
      "main": [
        [
          {
            "node": "Switch Output Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agente Onboarding": {
      "main": [
        [
          {
            "node": "Switch Output Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Agente SDR",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Agente Closer",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Agente Onboarding",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Gatilho: Transbordo Humano": {
      "main": [
        [
          {
            "node": "Seta Flag Humano Ativo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Seta Flag Humano Ativo": {
      "main": [
        [
          {
            "node": "Notifica Equipe Humana",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Humano Ativo": {
      "main": [
        [
          {
            "node": "Stop: Humano na conversa",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Message Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Agente SDR",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Agente Closer",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Agente Onboarding",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Switch por Status",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch por Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Agente SDR",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-29T04:47:12.518Z",
  "id": "kIywCvXTk1c8p5kN",
  "isArchived": false,
  "meta": null,
  "name": "Atendimento IA-Studio",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "f12ed205-511d-4057-830b-c3b54112407c",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4160,
        2020
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').first().json.file_id }}"
              }
            ]
          }
        }
      },
      "id": "8e23c25e-eb35-446e-96bc-f819fd1f91dc",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        -1860,
        1920
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "46cc208f-5531-4a0d-b884-ef00ab918f53",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        -2000,
        1960
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Busca Info no RAG",
        "height": 80,
        "width": 350,
        "color": 5
      },
      "id": "7ae8a554-7ac6-43cf-93aa-7f93fdb8eab0",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3640,
        2260
      ]
    },
    {
      "parameters": {
        "content": "# Ferramenta para Adicionar um Arquivo do Google Drive ao Banco de Dados Vetorial.",
        "height": 80,
        "width": 1493,
        "color": 5
      },
      "id": "f7ca894a-94b6-441c-886c-e710e5ea94d6",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3340,
        1420
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "b332b14a-03cc-416f-abad-86498fa6fb9a",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -2900,
        1700
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "AMnU78157s5pFXnN",
          "name": "Google AiAgent"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 1,
              "unit": "minutes"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1g6P4HJW9Y0CgTUGFXN6_-Vs5Usuc-X6_",
          "mode": "list",
          "cachedResultName": "conhecimento_ia",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1g6P4HJW9Y0CgTUGFXN6_-Vs5Usuc-X6_"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "342e5371-1630-4737-ab2f-9fdb93a54ec9",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -3800,
        1640
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "AMnU78157s5pFXnN",
          "name": "Google AiAgent"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1g6P4HJW9Y0CgTUGFXN6_-Vs5Usuc-X6_",
          "mode": "list",
          "cachedResultName": "conhecimento_ia",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1g6P4HJW9Y0CgTUGFXN6_-Vs5Usuc-X6_"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "5c0a6118-46f1-45a5-9496-210025a69c9c",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -3800,
        1820
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "AMnU78157s5pFXnN",
          "name": "Google AiAgent"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "8a55958f-b12f-40d4-ab93-405eb988ef54",
      "name": "Extract Document Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -2320,
        1880
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "abe4f733-b869-4ab2-9a80-4ed1dc44b07f",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        3940,
        2160
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documentos",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "id": "3377b47b-b768-4dbf-a4de-f9fdc4c3c218",
      "name": "Delete Old Doc Rows",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3440,
        1680
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "M658CwP1x5QAYDSu",
          "name": "Supabase teste"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "c774ed34-0d67-44b7-a537-83810f357b7c",
              "name": "originalFilename",
              "value": "={{ $json.originalFilename }}",
              "type": "string"
            },
            {
              "id": "dff39c85-b4a2-45ba-a5ff-f4b311999efc",
              "name": "sha1Checksum",
              "value": "={{ $json.sha1Checksum }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "18f34126-ffc9-4d47-ad8a-ee6bc08b2963",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3600,
        1680
      ]
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "c0955e19-93b3-45e8-b636-0e16d06f9bbf",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -2320,
        1520
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "9e5047e4-3406-4459-ba05-b2a3c5587255",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -2160,
        1700
      ]
    },
    {
      "parameters": {},
      "id": "599445a6-b1e7-44a4-8122-1db8e03261ca",
      "name": "Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        -1800,
        2080
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "d0eb8e25-8b49-4c55-ac95-c2b14caa92c8",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        -2020,
        1700
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 2
        }
      },
      "id": "bd311dab-4086-44b4-86f2-677ea69a8324",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2720,
        1700
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documentos",
          "mode": "list",
          "cachedResultName": "documentos"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "e1e36eea-3c89-4f67-a25c-dcf8f8f2775e",
      "name": "Insert into Supabase Vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -1900,
        1700
      ],
      "credentials": {
        "supabaseApi": {
          "id": "M658CwP1x5QAYDSu",
          "name": "Supabase teste"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documentos",
          "mode": "list",
          "cachedResultName": "documentos"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "316a23df-795c-45d7-ad79-42c8a007a6d8",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        3860,
        2020
      ],
      "credentials": {
        "supabaseApi": {
          "id": "M658CwP1x5QAYDSu",
          "name": "Supabase teste"
        }
      }
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "6caed443-18f1-4273-9ece-084673764764",
      "name": "Extract from Excel",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -2320,
        1700
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 520,
        "width": 460,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3600,
        1840
      ],
      "typeVersion": 1,
      "id": "2dfe045b-5522-4bb5-b12b-a457d1d2af5e",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "",
        "height": 800,
        "width": 2300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3880,
        1400
      ],
      "typeVersion": 1,
      "id": "9772580c-31e8-4800-a513-e17c6643a86a",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Arquivos criados em uma pasta espec√≠fica > Verificar o tipo de arquivo e realizar convers√£o > Extrair o texto > Adicionar ao Vector Store",
        "height": 80,
        "width": 1600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3860,
        2100
      ],
      "typeVersion": 1,
      "id": "d0d82483-b4bf-40fc-8024-171cbc96654e",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Gatilho de Monitoramento",
        "height": 440,
        "width": 213,
        "color": 5
      },
      "id": "a504bbe5-3f1a-47d5-9e1e-c22505592ee3",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3840,
        1540
      ]
    },
    {
      "parameters": {
        "content": "# Agendamento",
        "height": 80,
        "width": 283,
        "color": 5
      },
      "id": "057e032a-9e64-497e-b6cc-daead3de67cb",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        1160
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 260,
        "width": 1100,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        80,
        1000
      ],
      "typeVersion": 1,
      "id": "d04f8b7d-5a0b-4c10-94e4-30b07a6d6712",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "amount": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"Tempo de resposta picada\"] }}"
      },
      "id": "8f00deb5-9791-4c68-a60d-9c908d5a0dda",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1180,
        520
      ],
      "webhookId": "d13d900d-1aae-4fae-8ee0-941fddb03cce"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "options": {}
      },
      "id": "1e797538-a9e4-4eaa-82dd-102516a527e2",
      "name": "Get Redis History",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1020,
        520
      ],
      "credentials": {
        "redis": {
          "id": "25nYh9vN5nDeicvy",
          "name": "Redis AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "21fd20d7-f940-4a66-91d5-5ea4c031bb50",
              "leftValue": "={{ $json.propertyName.last() }}",
              "rightValue": "={{ $('Vari√°veis').item.json.mensagem }}",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5876dde9-2c9d-46f3-8bd0-6c2cdcf18d4f",
      "name": "If Is New Message",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -700,
        520
      ]
    },
    {
      "parameters": {},
      "id": "126b0125-bfb7-4ee3-bbf0-caf1b5d1d073",
      "name": "Stop: Same Message",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -540,
        600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "37f63b88-4a52-4421-aa95-db9114e521bc",
              "name": "listaMensagens",
              "value": "={{ $json.propertyName.join('\\n') }}",
              "type": "string"
            },
            {
              "id": "08b2e8c0-bc00-43ef-80bd-7a86bda2ee47",
              "name": "sessionId",
              "value": "={{ $item(\"0\").$node[\"Verificar Status Cliente\"].json[\"sessionid\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5a2d4830-be8b-4d0d-ba95-c8219983562b",
      "name": "Set History and Session",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -460,
        360
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
      },
      "id": "1a8e401d-9012-489e-9f8a-45678a816d30",
      "name": "Clear Redis History",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -280,
        360
      ],
      "credentials": {
        "redis": {
          "id": "25nYh9vN5nDeicvy",
          "name": "Redis AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.ogg",
          "mimeType": "application/ogg"
        }
      },
      "id": "e071d9c6-642b-48d4-badd-cb2a23531409",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2600,
        520
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "7766ab37-12cf-4912-962d-e222f850bd2d",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2740,
        520
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.png",
          "mimeType": "image/png"
        }
      },
      "id": "a0ac15fa-9636-4854-b461-db11ad47455d",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2560,
        680
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "622ea80c-d078-4815-ae54-3201b388e8c9",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2740,
        680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ade56c50-1520-4760-8df5-e99617d6d3ad",
              "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fd738fb9-1f54-4285-bd4c-f0d8a81f8c8d",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1740,
        680
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageData": "={{ $item(\"0\").$node[\"OpenAI\"].json[\"text\"] || \"\" }}",
        "tail": true
      },
      "id": "b4cc3193-a001-49e8-876d-3d6a0ecca8c8",
      "name": "Redis Add Audio Msg",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1780,
        520
      ],
      "credentials": {
        "redis": {
          "id": "25nYh9vN5nDeicvy",
          "name": "Redis AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageData": "={{ [($('Webhook').item.json?.body?.data?.message?.imageMessage?.caption), (($json.content || '').replace(/\\n/g, \"\\\\n\").replace(/['\\\"]/g, '').trim())].filter(Boolean).join(', ') }}",
        "tail": true
      },
      "id": "857ec83f-be8e-4561-9c51-a80ff3d2a79a",
      "name": "Redis Add Image+Cap",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1520,
        720
      ],
      "credentials": {
        "redis": {
          "id": "25nYh9vN5nDeicvy",
          "name": "Redis AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageData": "={{ ($json.content || \"\").replace(/\\n/g, \"\\\\n\").replace(/['\\\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "a761800d-91c0-43e1-afbc-a80050a235a6",
      "name": "Redis Add Image Only",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1200,
        660
      ],
      "credentials": {
        "redis": {
          "id": "25nYh9vN5nDeicvy",
          "name": "Redis AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "50cebc66-2dbc-4c7a-a09e-83ffb0f52991",
              "name": "mensagem",
              "value": "={{ $json.mensagem }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6df4941f-fa71-429e-9796-6f817b724fc1",
      "name": "Set Mensagem",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2740,
        360
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "5573f4f7-9bf6-4f0b-9aca-4bdfa9ad4e20",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -2440,
        520
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Descreva todo o conteudo da imagem. Responda sem acento, sem hifens",
        "inputType": "base64",
        "options": {}
      },
      "id": "85a71889-2936-42f8-82ae-18f710764903",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -2340,
        680
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "responde-cliente",
        "options": {}
      },
      "id": "efa46435-bcc5-4e91-aa80-db5fdde67500",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -5380,
        600
      ],
      "webhookId": "adba3aa9-53f0-4c68-ab26-2ce132ee5b90"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c0e434dd-1268-421d-b81b-3a5e90ed9550",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "3e3a3d83-d7bb-4dbb-82c4-064f2228d31d",
      "name": "Switch Message Type",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2920,
        500
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "154695b1-c751-47b6-ad75-2a9ff81e5c0b",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2540,
        1840
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "6d7ea090-b21a-4bb5-9296-45c4c5f75c50",
      "name": "Segmentos1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2800,
        1600
      ]
    },
    {
      "parameters": {
        "amount": 2.1
      },
      "id": "189381dd-a759-4de8-9003-2376030e455a",
      "name": "1,2s1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3260,
        1620
      ],
      "webhookId": "d551975b-aca4-4a73-ae4c-76ee0c3ba5e0"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "9d0e419c-bce3-4ff2-90f6-778eb3f3f84a",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2980,
        1600
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "86bed63e-a3b6-46d0-86df-c06786f78cc4",
      "name": "OutputParser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        2700,
        1840
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a sa√≠da no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, n√£o √© mesmo?\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\n\n### Jamais separe uma mensagem vazia.\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do whatsapp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- ~tachado~ (caso seja algo que foi exclu√≠do ou alterado)\n\t\t\t- _it√°lico_.(extremamente raro)\n            - `link` (usar sempre em todos os links)\n\nTudo o que for link, pode colocar entre \"`\", ou seja, na seguinte formata√ß√£o: `www.link.com.br`\n"
            }
          ]
        }
      },
      "id": "5a32dca2-f438-4a57-9b42-8bcb7f10f161",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        2500,
        1600
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "aiagentautomate",
        "remoteJid": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageText": "={{ $json.output }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        3500,
        1620
      ],
      "id": "48a37ff5-4c54-4ced-a6f8-bfc0dff62d04",
      "name": "Evolution API",
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Pausa para mensagens",
        "height": 140,
        "width": 376,
        "color": 5
      },
      "id": "3bd96398-77cc-4023-929b-c0f2da35a152",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1820,
        180
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 680,
        "width": 1660,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1840,
        200
      ],
      "typeVersion": 1,
      "id": "2035edb2-9f37-4faf-88d0-7f9205f90c9e",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "",
        "height": 500,
        "width": 1300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2180,
        1560
      ],
      "typeVersion": 1,
      "id": "c07f9d2a-58c8-4c3f-a4a2-7a7416091c7d",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "# Divis√£o de Mensagens Inteligente - Texto",
        "height": 80,
        "width": 736,
        "color": 5
      },
      "id": "0172eb27-dd31-4e19-bdce-0b8019a4a135",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2280,
        1480
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 880,
        "width": 1540,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3480,
        160
      ],
      "typeVersion": 1,
      "id": "978ace2e-f69d-474c-ae16-b6d235662673",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "content": "# L√≥gica de Roteamento e Processamento de Mensagens",
        "height": 140,
        "width": 640,
        "color": 5
      },
      "id": "aca46907-eea1-49c0-81d0-196050bfd8f0",
      "name": "Sticky Note21",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3440,
        200
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 540,
        "width": 1220,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4920,
        440
      ],
      "typeVersion": 1,
      "id": "5604c59c-80ff-4547-8672-03a89161b29c",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "content": "# L√≥gica de Sess√£o e Status do Cliente",
        "height": 120,
        "width": 596,
        "color": 5
      },
      "id": "94e40cb7-84fc-4b57-8db0-8930e9ef3367",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4900,
        460
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "contains",
                      "name": "filter.operator.contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "id": "84d4c61d-db4c-48f5-9453-b9efe8f7d37f",
      "name": "Switch Output Type",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        2280,
        1860
      ]
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "id": "22b30cf2-68bd-41d9-a18d-70489e18484f",
      "name": "Audio-Base64-Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2880,
        2320
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.elevenlabs.io/v1/text-to-speech/{{ $item(\"0\").$node[\"Vari√°veis\"].json[\"ID_Voz_Elevenlabs\"] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "xi-api-key",
              "value": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"API_Elevenlabs\"] }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n   \"text\":\"'{{ $json.textoSemQuebrasNemEmojis }}'\",\n   \"model_id\":\"eleven_multilingual_v2\",\n   \"voice_settings\":{\n      \"stability\":0.5,\n      \"similarity_boost\":0.8,\n      \"style\":0.0,\n      \"use_speaker_boost\":true\n   }\n} ",
        "options": {}
      },
      "id": "2f77a4c6-d9df-455d-87c1-95e87beb53de",
      "name": "ElevenLabsGenerateVoice",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2720,
        2320
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "resource": "messages-api",
        "operation": "send-audio",
        "instanceName": "aiagentautomate",
        "remoteJid": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "media": "={{ $item(\"0\").$node[\"Audio-Base64-Extract from File\"].json[\"data\"] }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        3100,
        2320
      ],
      "id": "7ec081ca-49f7-4834-b6a4-e35898dc2ed8",
      "name": "Evolution API1",
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 300,
        "width": 740,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2260,
        2180
      ],
      "typeVersion": 1,
      "id": "6275bda9-8cc9-4cf6-8906-54129f16d66b",
      "name": "Sticky Note24"
    },
    {
      "parameters": {
        "content": "# Resposta em √Åudio",
        "height": 80,
        "width": 376,
        "color": 5
      },
      "id": "81cb6bff-9791-4e22-837a-ffb6aa77f032",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2320,
        2200
      ]
    },
    {
      "parameters": {
        "content": "## Webhook inicio",
        "height": 280,
        "width": 420,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5420,
        500
      ],
      "typeVersion": 1,
      "id": "e18166e9-c2a8-45b6-90a7-cf16f1c234e8",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "jsCode": "// Obt√©m o primeiro item do fluxo\nconst item = $input.first();\n\n// Garante que h√° dados na entrada\nif (!item || !item.json || !item.json.output) {\n  throw new Error(\"A chave 'output' n√£o foi encontrada no JSON de entrada.\");\n}\n\n// Processa o texto removendo todas as quebras de linha e emojis\nconst textoEntrada = item.json.output; // Use a chave correta para pegar o texto de entrada\n\n// Remove quebras de linha (\\n)\nlet textoProcessado = textoEntrada.replace(/\\n/g, \"\");\n\n// Remove emojis\ntextoProcessado = textoProcessado.replace(\n  /[\\u{1F600}-\\u{1F64F}]|[\\u{1F300}-\\u{1F5FF}]|[\\u{1F680}-\\u{1F6FF}]|[\\u{1F700}-\\u{1F77F}]|[\\u{1F780}-\\u{1F7FF}]|[\\u{1F800}-\\u{1F8FF}]|[\\u{1F900}-\\u{1F9FF}]|[\\u{1FA00}-\\u{1FA6F}]|[\\u{1FA70}-\\u{1FAFF}]|[\\u{2600}-\\u{26FF}]|[\\u{2700}-\\u{27BF}]|[\\u{FE00}-\\u{FE0F}]|[\\u{1F1E0}-\\u{1F1FF}]/gu,\n  \"\"\n);\n\n// Retorna o resultado\nreturn {\n  textoOriginal: textoEntrada,\n  textoSemQuebrasNemEmojis: textoProcessado,\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2560,
        2320
      ],
      "id": "ba31d033-7bb8-4869-8a7f-75d60b2e867d",
      "name": "Code"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Create a table to store your documents\ncreate table documentos (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4820,
        1640
      ],
      "id": "db3bda8b-556b-4bb4-bd16-1efc3a56571e",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 280,
        "width": 260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4880,
        1520
      ],
      "typeVersion": 1,
      "id": "2489d86f-362f-42e4-b94a-772634ef4a97",
      "name": "Sticky Note31"
    },
    {
      "parameters": {
        "content": "## Cria tabela documentos",
        "height": 80,
        "width": 180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4840,
        1540
      ],
      "typeVersion": 1,
      "id": "31552e7d-36bd-4d25-86c4-5b237bc5a56c",
      "name": "Sticky Note32"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table dados_cliente (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  telefone text, \n  sessionid text,\n  status text,\n  atendimento_humano_ativo boolean default false\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -5100,
        1640
      ],
      "id": "782b8a36-fb92-4d27-b11a-381a06df6bec",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 280,
        "width": 260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5160,
        1520
      ],
      "typeVersion": 1,
      "id": "49fe644a-5599-4dbc-baa4-309710c5a212",
      "name": "Sticky Note33"
    },
    {
      "parameters": {
        "content": "## Cria tabela dados_cliente",
        "height": 80,
        "width": 180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5120,
        1540
      ],
      "typeVersion": 1,
      "id": "6bea59f7-129c-4c43-a96c-75efa3010fd2",
      "name": "Sticky Note34"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from dados_cliente",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -5080,
        2020
      ],
      "id": "85a1c7cf-63f9-4134-a43d-4ee615db37b8",
      "name": "Postgres2",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5160,
        1840
      ],
      "typeVersion": 1,
      "id": "7e9a72f3-99ac-400b-9949-ad4bda7c334b",
      "name": "Sticky Note35"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela dados_cliente",
        "height": 120,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5120,
        1860
      ],
      "typeVersion": 1,
      "id": "b5fc7cd5-72b2-45c3-aa55-2f68682dc1dc",
      "name": "Sticky Note36"
    },
    {
      "parameters": {
        "jsCode": "return $items(\"Set File ID\").map(item => {\n  return {\n    json: {\n      file_id: item.json.file_id,\n      file_type: item.json.file_type\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3280,
        1680
      ],
      "id": "57fbcaca-5ec5-4a3c-a9fa-3fecbb0a174c",
      "name": "Code2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -3120,
        1680
      ],
      "id": "1883bff9-8358-46ef-a2b6-753ffa0aa8d1",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from dados_cliente",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4800,
        2020
      ],
      "id": "7f4582d4-21cf-4a5a-b5d7-dc433def080f",
      "name": "Postgres3",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4880,
        1840
      ],
      "typeVersion": 1,
      "id": "57545af8-363c-4f8d-ab3a-a44ac0acfcb2",
      "name": "Sticky Note37"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela documentos",
        "height": 120,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4840,
        1860
      ],
      "typeVersion": 1,
      "id": "621795db-cffb-47e6-b340-ec518dc4da81",
      "name": "Sticky Note38"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from n8n_chat_histories",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4120,
        1780
      ],
      "id": "efebe0a7-0498-4137-bf32-482bea0fecda",
      "name": "Postgres4",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4200,
        1620
      ],
      "typeVersion": 1,
      "id": "8625baa0-bf5a-4214-b840-19f422de7567",
      "name": "Sticky Note39"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela chat",
        "height": 80,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4160,
        1640
      ],
      "typeVersion": 1,
      "id": "e5b60e3c-2671-43d1-8245-c54614d5fb78",
      "name": "Sticky Note40"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $json.sessionid }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4360,
        660
      ],
      "id": "a385e140-f989-48e8-82cb-795ae7993a92",
      "name": "If Has Session"
    },
    {
      "parameters": {
        "action": "generate"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -4560,
        700
      ],
      "id": "b3f0474d-e9c1-4df8-b1ec-fd6ca839a0c0",
      "name": "Gerar sessionID"
    },
    {
      "parameters": {
        "tableId": "dados_cliente",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "name",
              "fieldValue": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"pushName\"] }}"
            },
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
            },
            {
              "fieldId": "sessionid",
              "fieldValue": "={{ $item(\"0\").$node[\"Gerar sessionID\"].json[\"data\"] }}"
            },
            {
              "fieldId": "created_at",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "status",
              "fieldValue": "lead"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4020,
        700
      ],
      "id": "d11729ed-5839-4172-848b-1d9d92fa3fbf",
      "name": "Create New Client",
      "retryOnFail": true,
      "maxTries": 2,
      "credentials": {
        "supabaseApi": {
          "id": "M658CwP1x5QAYDSu",
          "name": "Supabase teste"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d88c137-383f-4307-b3cc-1f6a560ea67b",
              "name": "mobile",
              "value": "={{  $json.body.data.key.remoteJid.replace(/\\D/g, '').replace(/^55(\\d{2})(\\d{8})$/, '55$19$2') }}",
              "type": "string"
            },
            {
              "id": "7e2f520e-4952-425b-82ca-792cc46680d4",
              "name": "mensagem",
              "value": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"message\"][\"conversation\"] || $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"message\"][\"extendedTextMessage\"][\"text\"] }}",
              "type": "string"
            },
            {
              "id": "104b3cd0-d988-4c58-a175-2ca5465bf8c1",
              "name": "API_Elevenlabs",
              "value": "sk_f8b0546f2d0dbcbd3fa6510a3ec468d249dfdb7823311901",
              "type": "string"
            },
            {
              "id": "6065b018-8dc0-49db-8da9-f692f96e9c92",
              "name": "ID_Voz_Elevenlabs",
              "value": "=9BWtsMINqrJLrRacOk9x",
              "type": "string"
            },
            {
              "id": "4e2bdc18-93a5-4117-b94e-bcfd228a7379",
              "name": "Tempo de resposta picada",
              "value": "2",
              "type": "string"
            },
            {
              "id": "0d4a900f-af55-4472-824f-1d06a25de052",
              "name": "Instancia_Evolution",
              "value": "aiagentautomate",
              "type": "string"
            },
            {
              "id": "9f80f8f6-a917-4af3-b77e-fa1f93d38cca",
              "name": "URL_Evolution",
              "value": "apiwp.aiagentautomate.com.br/",
              "type": "string"
            },
            {
              "id": "c6b307cf-ac0d-4273-8895-3c601b9b909b",
              "name": "KEY_Evo",
              "value": "B8493D438D72-4C34-97CC-4C9A4A257C0A",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "79240e26-c6e0-456c-a3dd-67fc0bf1e5e5",
      "name": "Vari√°veis",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5140,
        600
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Vari√°veis').item.json.mobile }}",
        "messageData": "={{ $json.mensagem || \"\" }}",
        "tail": true
      },
      "id": "e2ef3f54-d33b-4a44-9595-ad676c2cc610",
      "name": "Redis Add Text Msg",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1780,
        360
      ],
      "credentials": {
        "redis": {
          "id": "25nYh9vN5nDeicvy",
          "name": "Redis AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "description": "=Use sempre esse aplicativo quando precisar da uma resposata mais precisa e sem erros , n√£o reapsse nem uma informa√ß√£o interna ou pensamentos, apenas conclua a mensagem de maneira correta sem delirios. "
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        1320,
        1020
      ],
      "id": "47a04b20-ede7-41b0-ad10-bb2b4a70bc55",
      "name": "Think"
    },
    {
      "parameters": {
        "name": "dados_IA",
        "description": "Contains all the information about prices that you can check to answer user questions."
      },
      "id": "51c55496-d915-4e51-a154-446bd4616f18",
      "name": "dados_IA",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        3940,
        1920
      ]
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "aiagenteautomate@gmail.com",
          "mode": "list",
          "cachedResultName": "aiagenteautomate@gmail.com"
        },
        "start": "={{ $fromAI(\"statTime\") }}",
        "end": "={{ $fromAI(\"endTime\") }}",
        "additionalFields": {
          "color": "2",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $fromAI(\"preenchimento\",\"Voc√™ n√£o ir√° solicitar isso ao lead, voc√™ ir√° preencher com a sua opini√£o em rela√ß√£o ao lead ap√≥s a finaliza√ß√£o da conversa. Voc√™ dever√° preencher cada ponto seguindo as orienta√ß√µes entre *. An√°lise do lead: 1. Situa√ß√£o Atual e Necessidades Situa√ß√£o atual: Descri√ß√£o resumida dos desafios, problemas ou dores que o lead enfrenta atualmente, conforme mencionado na conversa. Exemplo: dificuldades de escalabilidade, inefici√™ncia operacional, etc. Necessidades: Identificar as necessidades claras mencionadas pelo lead e aquelas impl√≠citas. Necessidades expl√≠citas s√£o aquelas que o lead mencionou diretamente. Necessidades impl√≠citas s√£o percebidas atrav√©s de comportamentos ou informa√ß√µes adicionais, mas n√£o mencionadas diretamente. 2. Obje√ß√µes e Resist√™ncias Obje√ß√µes: Listar as principais obje√ß√µes que o lead levantou durante a conversa. Exemplo: preocupa√ß√£o com o pre√ßo, funcionalidades do produto, adequa√ß√£o ao momento da empresa, etc. N√≠vel de resist√™ncia: Avaliar o qu√£o resistente o lead se mostrou em rela√ß√£o √† proposta. Pode ser classificado como alta, m√©dia ou baixa resist√™ncia, com base na quantidade e na intensidade das obje√ß√µes levantadas. Motivos por tr√°s das obje√ß√µes: Analisar os motivos que podem estar por tr√°s das obje√ß√µes. Exemplo: inseguran√ßa financeira, falta de entendimento sobre o valor da solu√ß√£o, indecis√£o sobre o momento certo para implementar a solu√ß√£o. 3. Potencial de Convers√£o Fit com o produto/servi√ßo: Avaliar se o lead est√° alinhado com o que a empresa oferece, considerando as necessidades que ele mencionou, o or√ßamento dispon√≠vel e o timing para tomar a decis√£o de compra. Probabilidade de convers√£o: Estimar, com base na an√°lise, a chance de o lead converter em cliente. Usar alta, m√©dia ou baixa probabilidade, dependendo da adequa√ß√£o do lead ao produto e do n√≠vel de resist√™ncia apresentado.\") }}",
          "sendUpdates": "all",
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        340,
        1020
      ],
      "id": "1d5c9a63-6157-4173-9c93-a7f6676746ff",
      "name": "Marcar Eventos",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "aiagenteautomate@gmail.com",
          "mode": "list",
          "cachedResultName": "aiagenteautomate@gmail.com"
        },
        "returnAll": true,
        "timeMin": "={{ $fromAI(\"startDay\",\"the same date that user requested at 00:00:00\" ) }}",
        "timeMax": "={{ $fromAI(\"endDay\",\"the same date that user requested at 23:59:59\" ) }}",
        "options": {
          "orderBy": "startTime",
          "recurringEventHandling": "expand"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        660,
        1020
      ],
      "id": "f2933775-5bcc-4baf-a6a4-8e45ceac694d",
      "name": "Buscar Eventos",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "aiagenteautomate@gmail.com",
          "mode": "list",
          "cachedResultName": "aiagenteautomate@gmail.com"
        },
        "eventId": "={{ $fromAI(\"deleteEvent\") }} ",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        980,
        1020
      ],
      "id": "c7dbdb8c-43e9-4c14-bb3f-9efb8a225244",
      "name": "Deletar evento",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "aiagenteautomate@gmail.com",
          "mode": "list",
          "cachedResultName": "aiagenteautomate@gmail.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "updateFields": {
          "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
          "sendUpdates": "all",
          "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        820,
        1020
      ],
      "id": "f006345e-c657-4072-bd7e-63c4c5f4e51b",
      "name": "reagendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "aiagenteautomate@gmail.com",
          "mode": "list",
          "cachedResultName": "aiagenteautomate@gmail.com"
        },
        "start": "={{ $fromAI(\"statTime\") }}",
        "end": "={{ $fromAI(\"endTime\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI(\"attendees\") }}"
          ],
          "color": "1",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $fromAI(\"preenchimento\",\"Voc√™ n√£o ir√° solicitar isso ao lead, voc√™ ir√° preencher com a sua opini√£o em rela√ß√£o ao lead ap√≥s a finaliza√ß√£o da conversa. Voc√™ dever√° preencher cada ponto seguindo as orienta√ß√µes entre *. An√°lise do lead: 1. Situa√ß√£o Atual e Necessidades Situa√ß√£o atual: Descri√ß√£o resumida dos desafios, problemas ou dores que o lead enfrenta atualmente, conforme mencionado na conversa. Exemplo: dificuldades de escalabilidade, inefici√™ncia operacional, etc. Necessidades: Identificar as necessidades claras mencionadas pelo lead e aquelas impl√≠citas. Necessidades expl√≠citas s√£o aquelas que o lead mencionou diretamente. Necessidades impl√≠citas s√£o percebidas atrav√©s de comportamentos ou informa√ß√µes adicionais, mas n√£o mencionadas diretamente. 2. Obje√ß√µes e Resist√™ncias Obje√ß√µes: Listar as principais obje√ß√µes que o lead levantou durante a conversa. Exemplo: preocupa√ß√£o com o pre√ßo, funcionalidades do produto, adequa√ß√£o ao momento da empresa, etc. N√≠vel de resist√™ncia: Avaliar o qu√£o resistente o lead se mostrou em rela√ß√£o √† proposta. Pode ser classificado como alta, m√©dia ou baixa resist√™ncia, com base na quantidade e na intensidade das obje√ß√µes levantadas. Motivos por tr√°s das obje√ß√µes: Analisar os motivos que podem estar por tr√°s das obje√ß√µes. Exemplo: inseguran√ßa financeira, falta de entendimento sobre o valor da solu√ß√£o, indecis√£o sobre o momento certo para implementar a solu√ß√£o. 3. Potencial de Convers√£o Fit com o produto/servi√ßo: Avaliar se o lead est√° alinhado com o que a empresa oferece, considerando as necessidades que ele mencionou, o or√ßamento dispon√≠vel e o timing para tomar a decis√£o de compra. Probabilidade de convers√£o: Estimar, com base na an√°lise, a chance de o lead converter em cliente. Usar alta, m√©dia ou baixa probabilidade, dependendo da adequa√ß√£o do lead ao produto e do n√≠vel de resist√™ncia apresentado.\") }}",
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        500,
        1020
      ],
      "id": "2611f4cf-a025-43c9-89b7-66e0faf632d2",
      "name": "Evento participante",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para enviar um email para o cliente quando solcitiado e tamb√©m para quando o agendamento for confirmado.",
        "sendTo": "={{ $fromAI(\"email\") }}",
        "subject": "={{ $fromAI(\"Titulo\",\"coloque aqui o titulo do email.\") }}",
        "emailType": "text",
        "message": "={{ $fromAI(\"texto\",\"coloque aqui os dados resumidos da conversa ou do agendamento, ex: nome, email, telefone, data\") }}",
        "options": {
          "appendAttribution": false,
          "senderName": "Ai Agente Automate",
          "replyTo": "aiagenteautomate@gmail.com"
        }
      },
      "id": "ea8ecaa5-4329-4fdc-b360-ca2d04af2bad",
      "name": "Gmail",
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        1140,
        1020
      ],
      "webhookId": "b510e384-515f-4547-aa90-9a730a71a3b0",
      "credentials": {
        "gmailOAuth2": {
          "id": "bMTj7PQt4FxoCvuP",
          "name": "Gmail account AiAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Mant√©m s√≥ o primeiro item da lista\nreturn [items[0]];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -860,
        520
      ],
      "id": "e365f10e-4869-40f2-b0c7-4c7158d41b7c",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
            }
          ]
        }
      },
      "id": "d4067a97-f42f-4841-af2f-0d592137fddb",
      "name": "Verificar Status Cliente",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4760,
        600
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "M658CwP1x5QAYDSu",
          "name": "Supabase teste"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Verificar Status Cliente').item.json.status }}",
                    "rightValue": "lead",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "6882d276-fb42-49f1-8938-a60bc8cdb4f8"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Onboarding"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "a50c8e2b-e1b9-4d6d-92a0-43f5e5b3b5c6",
                    "leftValue": "={{ $('Verificar Status Cliente').item.json.status }}",
                    "rightValue": "lead_qualificado",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Closer"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e33c72ed-e6f7-4bed-86ab-cad995dda160",
                    "leftValue": "={{ $('Verificar Status Cliente').item.json.status }}",
                    "rightValue": "novo_lead",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "SDR"
            }
          ]
        },
        "options": {
          "fallbackOutput": "none"
        }
      },
      "id": "980d8b66-81b6-4ecd-9981-1908bf9473f9",
      "name": "Switch por Status",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -280,
        -180
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 900,
        "width": 1280,
        "color": 4
      },
      "id": "f11928e1-e340-4774-9b31-d794e0dcdd1a",
      "name": "SDR Flow Backdrop",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ]
    },
    {
      "parameters": {
        "content": "# Fluxo SDR",
        "height": 80,
        "width": 300,
        "color": 5
      },
      "id": "18ac75a5-dbbd-40a2-b38e-67a9e2389b46",
      "name": "SDR Title",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        20,
        20
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 420,
        "width": 1280,
        "color": 6
      },
      "id": "84314238-41a3-48d0-855a-27ffd9f52695",
      "name": "Closer Flow Backdrop",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1380,
        0
      ]
    },
    {
      "parameters": {
        "content": "# Fluxo Closer",
        "height": 80,
        "width": 300,
        "color": 5
      },
      "id": "7f4f1a5f-7b52-4f0b-9b20-10f70b1227ec",
      "name": "Closer Title",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1400,
        20
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 1280,
        "color": 7
      },
      "id": "475f7e46-8f21-4722-aba1-477231547e12",
      "name": "Onboarding Flow Backdrop",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2760,
        0
      ]
    },
    {
      "parameters": {
        "content": "# Fluxo Onboarding P√≥s Vendas",
        "height": 80,
        "width": 400,
        "color": 5
      },
      "id": "b65e58a6-f251-45f5-95e9-7972fb177980",
      "name": "Onboarding Title",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2780,
        20
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Set History and Session').item.json.listaMensagens }}",
        "options": {
          "systemMessage": "Voc√™ √© 'Aurora', uma especialista em qualifica√ß√£o de vendas (SDR) da AIAgent Automate. Seu √∫nico objetivo √© qualificar o lead e, se ele for adequado, agendar uma demonstra√ß√£o.\n\nREGRAS:\n1.  Siga estritamente o roteiro. Fa√ßa UMA pergunta de cada vez.\n2.  Use as ferramentas dispon√≠veis quando necess√°rio.\n3.  Se o lead fizer uma pergunta que voc√™ n√£o sabe responder, ou se ele pedir para falar com um humano, use a ferramenta `transferir_para_atendimento_humano` IMEDIATAMENTE.\n4.  Quando coletar todos os dados de qualifica√ß√£o e o lead parecer promissor, use a ferramenta `qualificar_lead_para_closer`.\n\nROTEIRO DE QUALIFICA√á√ÉO:\n1.  Sauda√ß√£o (s√≥ na 1¬™ msg): \"Ol√°! Sou a Aurora, especialista da AIAgent Automate ü§ñ. Como posso ajudar?\"\n2.  Pergunte: \"Para come√ßarmos, qual o seu nome e o nome da sua empresa?\"\n3.  Pergunte: \"Qual seu cargo?\"\n4.  Pergunte: \"Qual o maior desafio comercial que voc√™ enfrenta hoje?\"\n5.  Pergunte: \"Faz sentido agendarmos uma demonstra√ß√£o r√°pida para voc√™ ver como podemos resolver isso?\" (Se sim, use a ferramenta `Marcar Eventos`)."
        }
      },
      "id": "d447a501-a6ba-43d2-aeb9-6a60f0c84e66",
      "name": "Agente SDR",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        440,
        180
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Set History and Session').item.json.listaMensagens }}",
        "options": {
          "systemMessage": "Voc√™ √© 'Aurora', uma especialista em fechamento de vendas (Closer) da AIAgent Automate. Seu objetivo √© apresentar a proposta e fechar a venda.\n\nREGRAS:\n1.  Voc√™ s√≥ √© ativada quando um lead j√° foi qualificado.\n2.  Use a ferramenta `dados_IA` para obter informa√ß√µes de pre√ßos e planos.\n3.  Apresente a proposta de valor e o pre√ßo. Tente superar as obje√ß√µes.\n4.  Se o lead aceitar, use a ferramenta `marcar_como_cliente` para finalizar.\n5.  Se n√£o souber responder ou se o usu√°rio pedir, use a ferramenta `transferir_para_atendimento_humano`."
        }
      },
      "id": "c83b64bf-ab50-4a4b-ab48-7da9aefbee62",
      "name": "Agente Closer",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        1820,
        180
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Set History and Session').item.json.listaMensagens }}",
        "options": {
          "systemMessage": "Voc√™ √© 'Aurora', especialista em Sucesso do Cliente (Onboarding) da AIAgent Automate. Seu objetivo √© dar as boas-vindas e guiar os primeiros passos do novo cliente.\n\nREGRAS:\n1.  D√™ as boas-vindas de forma calorosa.\n2.  Envie o link do guia de in√≠cio r√°pido e se coloque √† disposi√ß√£o.\n3.  Use a `dados_IA` para responder perguntas sobre configura√ß√£o e uso.\n4.  Se n√£o souber a resposta ou o cliente pedir, use a ferramenta `transferir_para_atendimento_humano`."
        }
      },
      "id": "427710ca-dfd0-4b5b-a7a0-0bd062e165da",
      "name": "Agente Onboarding",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        3200,
        180
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Set History and Session').item.json.sessionId }}",
        "contextWindowLength": 1000
      },
      "id": "5709fcbd-e32c-4f20-a71e-de9ada45bfb6",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        460,
        440
      ],
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "human-takeover-webhook",
        "options": {}
      },
      "id": "ec50c8f3-d40f-4144-8ad3-fc19716a0215",
      "name": "Gatilho: Transbordo Humano",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1580,
        -260
      ],
      "webhookId": "b1b1f1b1-f1b1-f1b1-f1b1-f1b1f1b1f1b1"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dados_cliente",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "atendimento_humano_ativo",
              "fieldValue": true
            }
          ]
        }
      },
      "id": "ae7e5e05-7bff-4c58-a64d-ee73b1c0e39c",
      "name": "Seta Flag Humano Ativo",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1340,
        -260
      ],
      "credentials": {
        "supabaseApi": {
          "id": "M658CwP1x5QAYDSu",
          "name": "Supabase teste"
        }
      }
    },
    {
      "parameters": {},
      "id": "40b43168-b9c9-467f-a81c-f06846f3a2c9",
      "name": "Notifica Equipe Humana",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1080,
        -260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c6225a0b-de71-419b-a01c-6d9b4b0e5d1a",
              "leftValue": "={{ $json.atendimento_humano_ativo === true }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "true"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b9fa476c-5459-4422-bd0e-3d5e1ea8ba05",
      "name": "If Humano Ativo",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4340,
        500
      ]
    },
    {
      "parameters": {},
      "id": "f95e5164-534e-4380-b86a-9fc9d94dacb2",
      "name": "Stop: Humano na conversa",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -4020,
        380
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "4363371c-2628-4c4d-b121-ed500545d5ad",
      "name": "OpenAI Chat Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        100,
        780
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "height": 520,
        "width": 1080
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1900,
        -520
      ],
      "id": "2134edde-056c-4958-844d-7c8918773b39",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "06e28429-68ac-4432-857b-ace1f91eb78a",
              "leftValue": "={{ $json.listaMensagens }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -540,
        -160
      ],
      "id": "6cf4d943-4d67-4c9d-8c7d-08d56f8b11b9",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "59292fc2-905b-4a41-b530-b07cccf057ce",
              "name": "=mensagem",
              "value": "={{ $json.listaMensagens || \"Ol√°! Sou do SDR. Como posso te ajudar hoje?\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -80,
        60
      ],
      "id": "12c41d07-620f-4bc3-9cd0-89e31916f5a1",
      "name": "Edit Fields1"
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "n8n.aiagentautomate.com.br",
            "user-agent": "axios/1.7.9",
            "content-length": "932",
            "accept-encoding": "gzip, compress, deflate, br",
            "content-type": "application/json",
            "x-forwarded-for": "172.18.0.1",
            "x-forwarded-host": "n8n.aiagentautomate.com.br",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "2f8ed72a8286",
            "x-real-ip": "172.18.0.1"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "aiagentautomate",
            "data": {
              "key": {
                "remoteJid": "5511952313944@s.whatsapp.net",
                "fromMe": false,
                "id": "3AEAAF8863C90A093E04"
              },
              "pushName": "Rafael de Souza",
              "status": "DELIVERY_ACK",
              "message": {
                "conversation": "Gostaria de conhecer os servi√ßos",
                "messageContextInfo": {
                  "deviceListMetadata": {
                    "senderKeyHash": "OP5t+YCou3CFLA==",
                    "senderTimestamp": "1750915592",
                    "recipientKeyHash": "KGz37W+ZpGD8qg==",
                    "recipientTimestamp": "1750917023"
                  },
                  "deviceListMetadataVersion": 2,
                  "messageSecret": "yAPBq8fUDhIb4ZnVeb643i3T7js9lp5xBrzuolUCXAA="
                }
              },
              "messageType": "conversation",
              "messageTimestamp": 1751186148,
              "instanceId": "738f2ec6-8c98-4f65-9af9-9d801f28cd45",
              "source": "ios"
            },
            "destination": "https://n8n.aiagentautomate.com.br/webhook/responde-cliente",
            "date_time": "2025-06-29T05:35:50.967Z",
            "sender": "5511945237617@s.whatsapp.net",
            "server_url": "https://apiwp.aiagentautomate.com.br",
            "apikey": "5C07F3447DF4-4466-A7A0-1573DD55EEFC"
          },
          "webhookUrl": "https://n8n.aiagentautomate.com.br/webhook/responde-cliente",
          "executionMode": "production"
        }
      }
    ]
  },
  "repo_name": "backup-n8n",
  "repo_owner": "faelsou",
  "repo_path": "backups/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:File Created": {
      "lastTimeChecked": "2025-06-29T23:21:39Z"
    },
    "node:File Updated": {
      "lastTimeChecked": "2025-06-29T23:21:39Z"
    }
  },
  "tags": [],
  "triggerCount": 4,
  "updatedAt": "2025-06-30T11:09:07.846Z",
  "versionId": "94b5ec1a-da61-4db1-a360-907ea8d2d488"
}