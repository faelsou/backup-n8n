{
  "active": true,
  "connections": {
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "dados_IA",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Doc Rows": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Delete Old Doc Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Document Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "dados_IA",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis3": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Redis3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Vari√°veis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "SDR Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Segmentos1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1,2s1": {
      "main": [
        [
          {
            "node": "Enviar texto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "1,2s1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser1": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Segmentos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Get a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert into Supabase Vectorstore": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "SessionID",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar sessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar sessionID": {
      "main": [
        [
          {
            "node": "Create a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SessionID": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vari√°veis": {
      "main": [
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados_IA": {
      "ai_tool": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar texto": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a row": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a row": {
      "main": [
        [
          {
            "node": "SessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "Agente B2B",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory2": {
      "ai_memory": [
        [
          {
            "node": "Agente B2C",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory3": {
      "ai_memory": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Agente B2C",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Marcar Eventos": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Evento participante": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Eventos": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Reagendar": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Agente Agendamento B2C": {
      "ai_tool": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory4": {
      "ai_memory": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Eventos1": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Reagendar1": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Deletar evento1": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Agente Agendamento B2B": {
      "ai_tool": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Evento participante2": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Enviar Email B2C": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Enviar Email B2B": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Marcar Eventos2": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Leads B2B": {
      "ai_tool": [
        [
          {
            "node": "Agente B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Leads B2C": {
      "ai_tool": [
        [
          {
            "node": "Agente B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Agente B2B": {
      "ai_tool": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Agente B2C": {
      "ai_tool": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Deletar Evento": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Agente B2B",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "SDR Agent": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-25T03:44:11.341Z",
  "id": "ltg1GWjuwWt0dvld",
  "isArchived": false,
  "meta": null,
  "name": "GRD_MAD_PRD",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "a3585391-71d7-4237-affd-918da0e7e52f",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -432,
        368
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').first().json.file_id }}"
              }
            ]
          }
        }
      },
      "id": "3a0d5304-a920-43f9-8bde-681a82ddd217",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        -2416,
        816
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "3c8d0d94-ddfc-4373-aa58-62c9c5b2e78a",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        -2560,
        848
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Busca Info no RAG",
        "height": 80,
        "width": 350,
        "color": 5
      },
      "id": "f9bb87f2-c861-4a5b-b8ba-69c740fab169",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -896,
        160
      ]
    },
    {
      "parameters": {
        "content": "# Ferramenta para Adicionar um Arquivo do Google Drive ao Banco de Dados Vetorial.",
        "height": 80,
        "width": 1493,
        "color": 5
      },
      "id": "9dbec1c6-d02e-445d-aec7-34d978bb6fae",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3904,
        320
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "35833e3f-8fe1-41ee-b72d-38d1fb67ada9",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -3456,
        592
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "AMnU78157s5pFXnN",
          "name": "Google AiAgent"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 1,
              "unit": "minutes"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1khP6PnfR_ic5JWAM3A4uNY1G0kn9RVk9",
          "mode": "list",
          "cachedResultName": "GRD_MAD",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1khP6PnfR_ic5JWAM3A4uNY1G0kn9RVk9"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "86b34d55-54f1-4911-a198-02c449d1612e",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -4352,
        528
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "AMnU78157s5pFXnN",
          "name": "Google AiAgent"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1khP6PnfR_ic5JWAM3A4uNY1G0kn9RVk9",
          "mode": "list",
          "cachedResultName": "GRD_MAD",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1khP6PnfR_ic5JWAM3A4uNY1G0kn9RVk9"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "9d891c16-af44-47c2-880a-8b67ee19ac8e",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -4352,
        720
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "AMnU78157s5pFXnN",
          "name": "Google AiAgent"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "8a759683-3e8f-4ff2-904e-fb034939b2ce",
      "name": "Extract Document Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -2880,
        768
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "f3b148ab-28ba-498b-822c-22586d662b1a",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        -832,
        432
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documentos",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "id": "a0fb3bc1-5bea-482c-ba29-138de95dc194",
      "name": "Delete Old Doc Rows",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4000,
        576
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "c774ed34-0d67-44b7-a537-83810f357b7c",
              "name": "originalFilename",
              "value": "={{ $json.originalFilename }}",
              "type": "string"
            },
            {
              "id": "dff39c85-b4a2-45ba-a5ff-f4b311999efc",
              "name": "sha1Checksum",
              "value": "={{ $json.sha1Checksum }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "dd4f3ff3-85f1-4908-8304-4c5be9c34098",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4160,
        576
      ]
    },
    {
      "parameters": {
        "content": "# Atendente IA",
        "height": 80,
        "width": 276,
        "color": 6
      },
      "id": "df7bb323-7811-4ab3-b775-b576fc07a5ce",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1552,
        -384
      ]
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "ce602547-ad2a-4893-a200-cf7af6c49076",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -2880,
        416
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "0d1af61d-105b-4d9c-afe8-1f3f91dc9cc1",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -2720,
        592
      ]
    },
    {
      "parameters": {},
      "id": "5872d816-59ab-4e9a-a96d-ee01f3b5170f",
      "name": "Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        -2352,
        976
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "7de76a7f-0632-4b77-bc05-9bf531d81343",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        -2576,
        592
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 2
        }
      },
      "id": "5514c797-156e-4931-a3f5-72597c4c5018",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -3280,
        592
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documentos",
          "mode": "list",
          "cachedResultName": "documentos"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "6ae07a1f-0604-4685-9277-aaae2aa34635",
      "name": "Insert into Supabase Vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -2464,
        592
      ],
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documentos",
          "mode": "list",
          "cachedResultName": "documentos"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "5c4b0865-cda5-489e-9a21-1ae8e8cbbac5",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -880,
        288
      ],
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "38010a82-a364-4df3-8e90-1d37f40664e8",
      "name": "Extract from Excel",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -2880,
        592
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 644,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1584,
        -432
      ],
      "typeVersion": 1,
      "id": "d9e6ed39-d9e7-42e1-9a26-9af5695fc69c",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "",
        "height": 424,
        "width": 700,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -912,
        128
      ],
      "typeVersion": 1,
      "id": "eee1445a-181c-4314-823b-0851e5fed796",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "",
        "height": 800,
        "width": 2300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4432,
        288
      ],
      "typeVersion": 1,
      "id": "2a153c3c-28b0-4401-b306-9af242268c63",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Arquivos criados em uma pasta espec√≠fica > Verificar o tipo de arquivo e realizar convers√£o > Extrair o texto > Adicionar ao Vector Store",
        "height": 80,
        "width": 1600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4416,
        992
      ],
      "typeVersion": 1,
      "id": "04f6b9d1-2305-457b-8aa6-d8109d8cda79",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Gatilho de Monitoramento",
        "height": 440,
        "width": 213,
        "color": 5
      },
      "id": "7614d559-8fa7-438a-9798-ed2e4fdeb6d8",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4400,
        432
      ]
    },
    {
      "parameters": {
        "amount": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"Tempo de resposta picada\"] }}"
      },
      "id": "d282b3be-d2b9-4c30-828a-86a114b82970",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -2640,
        -64
      ],
      "webhookId": "d13d900d-1aae-4fae-8ee0-941fddb03cce"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "options": {}
      },
      "id": "71b31fc9-8d38-4335-b780-da04c2fe9d62",
      "name": "Redis1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2480,
        -64
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "21fd20d7-f940-4a66-91d5-5ea4c031bb50",
              "leftValue": "={{ $json.propertyName.last() }}",
              "rightValue": "={{ $('Vari√°veis').item.json.mensagem }}",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "583b681c-c883-4695-ac44-c5efcc4d1382",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2160,
        -64
      ]
    },
    {
      "parameters": {},
      "id": "b3d67709-4ffa-417f-ad67-8b771c324213",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1984,
        16
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "37f63b88-4a52-4421-aa95-db9114e521bc",
              "name": "listaMensagens",
              "value": "={{ $json.propertyName[0] }}",
              "type": "string"
            },
            {
              "id": "08b2e8c0-bc00-43ef-80bd-7a86bda2ee47",
              "name": "sessionId",
              "value": "={{ $item(\"0\").$node[\"SessionID\"].json[\"sessionid\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "fefaba40-9f77-445b-9908-c351a227e797",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2000,
        -192
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
      },
      "id": "2d07e6f3-361e-4aaf-8ab2-e43808b44a63",
      "name": "Redis2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1760,
        -192
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.ogg",
          "mimeType": "application/ogg"
        }
      },
      "id": "465631f2-f95d-4cab-be62-ac946dcf56a1",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -3696,
        -64
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4579bc5a-1971-413b-bb6f-030926979382",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3840,
        -64
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.png",
          "mimeType": "image/png"
        }
      },
      "id": "b4a3d449-cc3a-4c36-942e-0be53c4c0add",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -3664,
        96
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "dc82a38e-cba7-4c12-9d17-23497743def1",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3840,
        96
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ade56c50-1520-4760-8df5-e99617d6d3ad",
              "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "54ab7d13-90c7-49c3-9702-a6959646b00c",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -3184,
        96
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageData": "={{ $item(\"0\").$node[\"OpenAI\"].json[\"text\"] }}",
        "tail": true
      },
      "id": "fb72f94d-003d-4167-92e8-29059dd3bc27",
      "name": "Redis3",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -3152,
        -64
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageData": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}, {{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "f5f66f64-0eae-4d66-a06d-71fa7944314a",
      "name": "Redis4",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2976,
        112
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageData": "={{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "dc9ae5cd-f37b-4df6-92f6-3037cae1a109",
      "name": "Redis5",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2816,
        32
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "50cebc66-2dbc-4c7a-a09e-83ffb0f52991",
              "name": "mensagem",
              "value": "={{ $('Vari√°veis').item.json.mensagem }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6205473c-0b1a-485c-81d6-439b5eda00b6",
      "name": "Edit Fields4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3840,
        -224
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "8b6181f3-ce0a-4d11-8a34-215bdee7520d",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -3536,
        -64
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Descreva todo o conteudo da imagem. Responda sem acento, sem hifens",
        "inputType": "base64",
        "options": {}
      },
      "id": "02ec4746-51a7-4536-9a1e-f24f627ff743",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -3440,
        96
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "grdmad",
        "options": {}
      },
      "id": "4bacaa80-fa03-43a0-820b-210ecf57a485",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -5472,
        -112
      ],
      "webhookId": "adba3aa9-53f0-4c68-ab26-2ce132ee5b90"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c0e434dd-1268-421d-b81b-3a5e90ed9550",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "e0632aa2-ed2a-4381-8099-6f289ee61408",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -4080,
        -80
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "7d10fb0a-c256-4a50-8151-536631a1fab4",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -544,
        -80
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "625087f4-52f9-4306-8051-98ae8a48a89e",
      "name": "Segmentos1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -272,
        -320
      ]
    },
    {
      "parameters": {
        "amount": 2.1
      },
      "id": "0c9dc160-5bea-4d66-942e-730dd8a7c152",
      "name": "1,2s1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        176,
        -288
      ],
      "webhookId": "d551975b-aca4-4a73-ae4c-76ee0c3ba5e0"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "37053718-6d32-4016-92ba-03003899a938",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -96,
        -320
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "8aa0d41e-0d8c-491c-825d-622aaff9e246",
      "name": "OutputParser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -384,
        -80
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a sa√≠da no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, n√£o √© mesmo?\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\n\n### Jamais separe uma mensagem vazia.\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do whatsapp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- ~tachado~ (caso seja algo que foi exclu√≠do ou alterado)\n\t\t\t- _it√°lico_.(extremamente raro)\n            - `link` (usar sempre em todos os links)\n\nTudo o que for link, pode colocar entre \"`\", ou seja, na seguinte formata√ß√£o: `www.link.com.br`\n"
            }
          ]
        }
      },
      "id": "4180f8c4-99f0-42ae-8f6f-4fe157dcf316",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        -576,
        -320
      ]
    },
    {
      "parameters": {
        "content": "# Pausa para mensagens",
        "height": 140,
        "width": 376,
        "color": 5
      },
      "id": "3c3758a6-d4d7-4bb7-a680-fc5e42d7ba0b",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3264,
        -400
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 680,
        "width": 1660,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3280,
        -432
      ],
      "typeVersion": 1,
      "id": "75bffea3-9827-4603-a319-6ace5033e23c",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "",
        "height": 500,
        "width": 1412,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -800,
        -448
      ],
      "typeVersion": 1,
      "id": "301b2a70-31bf-4a5f-b824-409d18dcb249",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "# Divis√£o de Mensagens Inteligente - Texto",
        "height": 80,
        "width": 736,
        "color": 5
      },
      "id": "31e54bb2-6a18-41b6-a4b7-5c976f76661a",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -784,
        -432
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 800,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4096,
        -352
      ],
      "typeVersion": 1,
      "id": "251972db-ccf0-40e9-9aa6-0985255858a0",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "content": "# Classifica Mensagens",
        "height": 80,
        "width": 396,
        "color": 5
      },
      "id": "9e3660c3-d4ba-4806-a357-303bd67f0133",
      "name": "Sticky Note21",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4080,
        -320
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 880,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5024,
        -272
      ],
      "typeVersion": 1,
      "id": "4ee8f1af-d0c6-49f8-b59e-58c359756dd9",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "content": "# Registro de Cliente no Supabase",
        "height": 80,
        "width": 596,
        "color": 5
      },
      "id": "fb20c95b-2317-40ad-b11a-ce3452b24906",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4944,
        -240
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "id": "9a5d1526-0403-4906-8f7c-b41c4c456ce9",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -912,
        -208
      ]
    },
    {
      "parameters": {
        "content": "## Webhook inicio",
        "height": 280,
        "width": 420,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5520,
        -208
      ],
      "typeVersion": 1,
      "id": "d3ee9178-4b9c-4c67-90ae-4e55f24b1c35",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $now }}",
        "format": "custom",
        "customFormat": "dd-MM-yyyy",
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -4976,
        -112
      ],
      "id": "e6d5d2f6-29d0-4cd2-ad8b-cb1e2d7300c0",
      "name": "Date & Time1"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Create a table to store your documents\ncreate table documents (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4704,
        816
      ],
      "id": "fe4d1ada-43f6-4f59-b91a-776ec93560a1",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 280,
        "width": 260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4768,
        688
      ],
      "typeVersion": 1,
      "id": "1f4fc541-490e-4bcf-ae4e-9bed95c9d372",
      "name": "Sticky Note31"
    },
    {
      "parameters": {
        "content": "## Cria tabela documentos",
        "height": 80,
        "width": 180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4720,
        704
      ],
      "typeVersion": 1,
      "id": "36a78f39-c520-4a08-a56e-9808df12e37f",
      "name": "Sticky Note32"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table dados_cliente (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  telefone text, \n  sessionid text\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4992,
        816
      ],
      "id": "688caf1d-9476-401c-8cb7-6516c9514e30",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 280,
        "width": 260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5056,
        688
      ],
      "typeVersion": 1,
      "id": "80bc6940-cac4-4d13-98fe-8d9af6215eee",
      "name": "Sticky Note33"
    },
    {
      "parameters": {
        "content": "## Cria tabela dados_cliente",
        "height": 80,
        "width": 180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5008,
        704
      ],
      "typeVersion": 1,
      "id": "65d8af25-4c12-4a2c-ad66-a89823bdbe8f",
      "name": "Sticky Note34"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from dados_cliente",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4976,
        1184
      ],
      "id": "fe923218-6318-4417-8221-56ef0434df92",
      "name": "Postgres2",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5056,
        1008
      ],
      "typeVersion": 1,
      "id": "07410112-d7a6-45ac-983c-ea2bcee6f45a",
      "name": "Sticky Note35"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela dados_cliente",
        "height": 120,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5008,
        1024
      ],
      "typeVersion": 1,
      "id": "5d3e433b-3b60-49c7-a511-e03a8dabdb27",
      "name": "Sticky Note36"
    },
    {
      "parameters": {
        "jsCode": "return $items(\"Set File ID\").map(item => {\n  return {\n    json: {\n      file_id: item.json.file_id,\n      file_type: item.json.file_type\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3840,
        576
      ],
      "id": "0cfd7449-7d31-4bf1-8505-24a42801a9cd",
      "name": "Code2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -3680,
        576
      ],
      "id": "3918dd96-3505-4624-ad55-ddc5bdedeaa7",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4768,
        1008
      ],
      "typeVersion": 1,
      "id": "65e49659-4a3f-4c3d-9f52-53c9679647b5",
      "name": "Sticky Note37"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela documentos",
        "height": 120,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4720,
        1024
      ],
      "typeVersion": 1,
      "id": "96cc7828-dc88-40b2-893a-0c6310e83614",
      "name": "Sticky Note38"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from n8n_chat_histories",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4688,
        464
      ],
      "id": "74fd2a26-c693-41d0-b4eb-a6ce0bf48fbd",
      "name": "Postgres4",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4768,
        304
      ],
      "typeVersion": 1,
      "id": "c1492137-57de-4520-9c0f-752b0d658f6c",
      "name": "Sticky Note39"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela chat",
        "height": 80,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4736,
        320
      ],
      "typeVersion": 1,
      "id": "e44a6c5f-2501-4f67-9c22-3d75eb0a8cc8",
      "name": "Sticky Note40"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $json.sessionid }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4592,
        -112
      ],
      "id": "79a7e395-a137-4024-ad1a-ca4fb193a9bd",
      "name": "If1"
    },
    {
      "parameters": {
        "action": "generate"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -4752,
        48
      ],
      "id": "18e2690a-49f0-4e8e-9ec7-c3267b2095fe",
      "name": "Gerar sessionID"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4352,
        -128
      ],
      "id": "fb0bcb69-517e-4bb8-a3e6-70efac0b7e68",
      "name": "SessionID",
      "retryOnFail": true,
      "maxTries": 2,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d88c137-383f-4307-b3cc-1f6a560ea67b",
              "name": "mobile",
              "value": "={{  $json.body.data.key.remoteJid.replace(/\\D/g, '').replace(/^55(\\d{2})(\\d{8})$/, '55$19$2') }}",
              "type": "string"
            },
            {
              "id": "7e2f520e-4952-425b-82ca-792cc46680d4",
              "name": "mensagem",
              "value": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"message\"][\"conversation\"] }}",
              "type": "string"
            },
            {
              "id": "104b3cd0-d988-4c58-a175-2ca5465bf8c1",
              "name": "API_Elevenlabs",
              "value": "sk_f8b0546f2d0dbcbd3fa6510a3ec468d249dfdb7823311901",
              "type": "string"
            },
            {
              "id": "6065b018-8dc0-49db-8da9-f692f96e9c92",
              "name": "ID_Voz_Elevenlabs",
              "value": "=9BWtsMINqrJLrRacOk9x",
              "type": "string"
            },
            {
              "id": "4e2bdc18-93a5-4117-b94e-bcfd228a7379",
              "name": "Tempo de resposta picada",
              "value": "2",
              "type": "string"
            },
            {
              "id": "0d4a900f-af55-4472-824f-1d06a25de052",
              "name": "Instancia_Evolution",
              "value": "grdmad",
              "type": "string"
            },
            {
              "id": "9f80f8f6-a917-4af3-b77e-fa1f93d38cca",
              "name": "URL_Evolution",
              "value": "apiwp.aiagentautomate.com.br/",
              "type": "string"
            },
            {
              "id": "c6b307cf-ac0d-4273-8895-3c601b9b909b",
              "name": "KEY_Evo",
              "value": "B8493D438D72-4C34-97CC-4C9A4A257C0A",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "a0b380a2-49f8-4167-abf8-eccbbaa22812",
      "name": "Vari√°veis",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5232,
        -112
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Vari√°veis').item.json.mobile }}",
        "messageData": "={{ $json.mensagem }}",
        "tail": true
      },
      "id": "02c07b82-4d8d-4f7c-ba2a-ba9cd51768d8",
      "name": "Redis",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -3152,
        -224
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "name": "dados_IA",
        "description": "Use esta ferramenta para buscar informa√ß√µes sobre projetos, materiais, e detalhes da GRD MAD para responder √†s perguntas dos clientes."
      },
      "id": "e58f4aec-4204-43b8-a9dc-3630d34ceb95",
      "name": "dados_IA",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        -496,
        176
      ]
    },
    {
      "parameters": {
        "jsCode": "// Mant√©m s√≥ o primeiro item da lista\nreturn [items[0]];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2320,
        -64
      ],
      "id": "06f4834d-ee44-46fb-b5b9-06302efe5dfe",
      "name": "Code1"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "grdmad",
        "remoteJid": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageText": "={{ $json.output }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        416,
        -288
      ],
      "id": "d68b44d3-4095-4528-be00-3e5f8d3afc75",
      "name": "Enviar texto",
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4784,
        -112
      ],
      "id": "28ca0272-c6a8-409f-8c45-5526270b3fad",
      "name": "Get a row",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "tableId": "dados_cliente",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nome",
              "fieldValue": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"pushName\"] }}"
            },
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
            },
            {
              "fieldId": "sessionid",
              "fieldValue": "={{ $item(\"0\").$node[\"Gerar sessionID\"].json[\"data\"] }}"
            },
            {
              "fieldId": "created_at",
              "fieldValue": "={{ $now }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4352,
        48
      ],
      "id": "3f984eab-790b-4662-bd40-68af5d958a13",
      "name": "Create a row",
      "retryOnFail": true,
      "maxTries": 2,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from documentos",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4688,
        1184
      ],
      "id": "784592be-d357-4426-8214-8730ed26ff32",
      "name": "Execute a SQL query",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.listaMensagens }}",
        "options": {
          "systemMessage": "=Aqui est√° a data/hora atual: {{ $now.format('dd-MM-yyyy HH:mm') }}\nVis√£o Geral\n\nVoc√™ √© a Joanna da GRD MAD, agente orquestrador. Seu papel √© Orquestrar cliente e direcion√°-lo para a **Ferramentas**: correta. Voc√™ nunca deve agendar reuni√µes ou enviar e-mails ‚Äî apenas acionar a ferramenta correta.\n\n\n## Roteiro da Conversa\n\n### 1. Sauda√ß√£o Inicial\n\nApresente-se e reforce a marca.\n\n\n## Instru√ß√µes de Atendimento\n- Sempre consultar a ferramenta `tools think`\n- Responder √† sauda√ß√£o apenas uma vez\n- Se o cliente apenas cumprimentar, Recepcione o cliente e pergunte:  \n  > \"Ol√°! üëã Sou a Joanna, assistente da GRD MAD, tudo bem?  \n  > Estou aqui para te ajudar a transformar seu ambiente com m√≥veis planejados sob medida.  \n  > Me conta, o projeto √© para resid√™ncia B2C ou empresa B2B (Arquiteto, Marceneiro, Loja de Moveis Planejados)? üòä\n- Nunca repetir cumprimentos, perguntas ou frases prontas\n- Ser clara e objetiva: at√© 2 frases por resposta\n- Aguardar sempre a resposta do cliente antes de prosseguir\n- Nunca responder mais de uma vez √† mesma mensagem\n- Se n√£o entender, pedir para resumir em poucas palavras\n- S√≥ fazer novas perguntas se as anteriores forem respondidas\n- \n\n## Exemplo:\n## Agente B2B\nArquiteto, Marceneiro, Loja de Moveis etc.\n\n## Agente B2B\nCasa, Apartamento ou Clinicas etc.\n\n\n## Regras\n\n- Nunca fa√ßa agendamento, apenas direcione.\n- Sempre Usar Ferramentas disponiveis, nunca responder sem consultar Ferramentas\n- Evitar textos longos ou gen√©ricos de outros assuntos que n√£o forem sobre a GRD MAD\n- Fazer perguntas novas somente se necess√°rio.\n\n## Ferramentas\n\n- **Agente B2B**: para projetos com (Arquiteto, Marceneiro, Loja de Moveis etc.)\n- **Agente B2C**: para projetos residenciais ou corporativo (Casa, Apartamento ou Clinicas etc.)\n- **Agente Agendamento B2B**: para Marcar Eventos, Buscar Eventos, Reagendar, Deletar Eventos, Enviar Email, Salvar dados Planilha Google\n- **Agente Agendamento B2C**: para Marcar Eventos, Buscar Eventos, Reagendar, Deletar Eventos, Enviar Email, Salvar dados Planilha Google\n- **dados_IA**:\nUse sempre essa ferramenta para obter quais quer informa√ß√µes da nossa empresa, pois essa tool √© seu banco de dados e sua memoria principal, use para enriquecer sua resposta ou quando precisar obter qual quer informa√ß√µes da nossa empresa ou produtos e informa√ß√µes gerais.\n- **Think**:\nUse sempre essa ferramenta, quando precisar da uma resposata mais precisa para o cliente, ou seja n√£o sabe a resposta ou tem d√∫vida, use essa ferramenta para tomar desi√ß√µes antes de enviar sua resposta final.\n\n\n## Instru√ß√µes\n\nUse a ferramenta correta: \n- **Agente B2B**: para projetos com (Arquiteto, Marceneiro, Loja de Moveis etc.)\n- **Agente B2C**: para projetos residenciais ou corporativo (Casa, Apartamento ou Clinicas etc.)\n- **Agente Agendamento B2B**: para Marcar Eventos1, Buscar Eventos1, Reagendar1, Deletar Eventos1, Enviar Email B2B, Salvar dados Planilha Google Leads B2B\n- **Agente Agendamento B2C**: para Marcar Eventos, Buscar Eventos, Reagendar, Deletar Eventos, Enviar Email B2C, Salvar dados Planilha Google Leads B2C\n\n\n"
        }
      },
      "id": "35de1a8b-49de-4a1e-84c5-aa44bb50ad33",
      "name": "SDR Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -1424,
        -192
      ]
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {
          "topP": 0.5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -1552,
        0
      ],
      "id": "3af6951d-48b6-407b-8da8-7020664b18c5",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId }}",
        "contextWindowLength": 1000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -1392,
        32
      ],
      "id": "43794157-138b-489e-95f7-e6af1477c4d9",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId }}",
        "contextWindowLength": 1000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -2336,
        1536
      ],
      "id": "f510b60b-7d61-4b90-a5c1-7364f18e654a",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId }}",
        "contextWindowLength": 1000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -1888,
        1552
      ],
      "id": "b805ce3f-ea1e-4522-ba1b-ec026083aaef",
      "name": "Postgres Chat Memory2",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId }}",
        "contextWindowLength": 1000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -640,
        1104
      ],
      "id": "67118c85-24cd-43e2-a8d1-c02937921aff",
      "name": "Postgres Chat Memory3",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {
          "topP": 0.5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -2032,
        1520
      ],
      "id": "24903524-17ac-4187-982f-fef6cc0be00b",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {
          "topP": 0.5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -752,
        1008
      ],
      "id": "9d4fd6e7-05c8-4b73-9a6e-c14be63b82eb",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Create an event in Google Calendar",
        "calendar": {
          "__rl": true,
          "value": "645848a4438f6c18f24563f5b304479c279aaf03c6e38350cc079bc55f447f27@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2C"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "color": "2",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "=Nome Completo: {{ $fromAI(\"nome_cliente\", \"Pe√ßa o nome completo do cliente.\") }}\\nEmail: {{ $fromAI(\"email_cliente\", \"Pe√ßa o email do cliente.\") }}\\nTelefone: {{ $fromAI(\"telefone_cliente\", \"Pe√ßa o telefone com DDD do cliente.\") }}\\n\\nObserva√ß√£o: {{ $fromAI(\"planta_imovel\", \"Pergunte se o cliente tem a planta do im√≥vel e anote a resposta aqui.\") }}\\n---\\nAn√°lise Preliminar (preenchido pela IA):\n{{ $fromAI(\"preenchimento\",\"Voc√™ n√£o ir√° solicitar isso ao lead, voc√™ ir√° preencher com a sua opini√£o em rela√ß√£o ao lead ap√≥s a finaliza√ß√£o da conversa. Voc√™ dever√° preencher cada ponto seguindo as orienta√ß√µes entre *. An√°lise do lead: 1. Situa√ß√£o Atual e Necessidades Situa√ß√£o atual: Descri√ß√£o resumida dos desafios, problemas ou dores que o lead enfrenta atualmente, conforme mencionado na conversa. Exemplo: dificuldades de escalabilidade, inefici√™ncia operacional, etc. Necessidades: Identificar as necessidades claras mencionadas pelo lead e aquelas impl√≠citas. Necessidades expl√≠citas s√£o aquelas que o lead mencionou diretamente. Necessidades impl√≠citas s√£o percebidas atrav√©s de comportamentos ou informa√ß√µes adicionais, mas n√£o mencionadas diretamente. 2. Obje√ß√µes e Resist√™ncias Obje√ß√µes: Listar as principais obje√ß√µes que o lead levantou durante a conversa. Exemplo: preocupa√ß√£o com o pre√ßo, funcionalidades do produto, adequa√ß√£o ao momento da empresa, etc. N√≠vel de resist√™ncia: Avaliar o qu√£o resistente o lead se mostrou em rela√ß√£o √† proposta. Pode ser classificado como alta, m√©dia ou baixa resist√™ncia, com base na quantidade e na intensidade das obje√ß√µes levantadas. Motivos por tr√°s das obje√ß√µes: Analisar os motivos que podem estar por tr√°s das obje√ß√µes. Exemplo: inseguran√ßa financeira, falta de entendimento sobre o valor da solu√ß√£o, indecis√£o sobre o momento certo para implementar a solu√ß√£o. 3. Potencial de Convers√£o Fit com o produto/servi√ßo: Avaliar se o lead est√° alinhado com o que a empresa oferece, considerando as necessidades que ele mencionou, o or√ßamento dispon√≠vel e o timing para tomar a decis√£o de compra. Probabilidade de convers√£o: Estimar, com base na an√°lise, a chance de o lead converter em cliente. Usar alta, m√©dia ou baixa probabilidade, dependendo da adequa√ß√£o do lead ao produto e do n√≠vel de resist√™ncia apresentado.\") }}",
          "sendUpdates": "all",
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -656,
        1440
      ],
      "id": "3f0010a6-85b5-4a4e-adf1-596414293dd1",
      "name": "Marcar Eventos",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Create an event in Google Calendar",
        "calendar": {
          "__rl": true,
          "value": "645848a4438f6c18f24563f5b304479c279aaf03c6e38350cc079bc55f447f27@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2C"
        },
        "start": "={{ $fromAI(\"statTime\") }}",
        "end": "={{ $fromAI(\"endTime\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI(\"attendees\") }}"
          ],
          "color": "1",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $fromAI(\"preenchimento\",\"Voc√™ n√£o ir√° solicitar isso ao lead, voc√™ ir√° preencher com a sua opini√£o em rela√ß√£o ao lead ap√≥s a finaliza√ß√£o da conversa. Voc√™ dever√° preencher cada ponto seguindo as orienta√ß√µes entre *. An√°lise do lead: 1. Situa√ß√£o Atual e Necessidades Situa√ß√£o atual: Descri√ß√£o resumida dos desafios, problemas ou dores que o lead enfrenta atualmente, conforme mencionado na conversa. Exemplo: dificuldades de escalabilidade, inefici√™ncia operacional, etc. Necessidades: Identificar as necessidades claras mencionadas pelo lead e aquelas impl√≠citas. Necessidades expl√≠citas s√£o aquelas que o lead mencionou diretamente. Necessidades impl√≠citas s√£o percebidas atrav√©s de comportamentos ou informa√ß√µes adicionais, mas n√£o mencionadas diretamente. 2. Obje√ß√µes e Resist√™ncias Obje√ß√µes: Listar as principais obje√ß√µes que o lead levantou durante a conversa. Exemplo: preocupa√ß√£o com o pre√ßo, funcionalidades do produto, adequa√ß√£o ao momento da empresa, etc. N√≠vel de resist√™ncia: Avaliar o qu√£o resistente o lead se mostrou em rela√ß√£o √† proposta. Pode ser classificado como alta, m√©dia ou baixa resist√™ncia, com base na quantidade e na intensidade das obje√ß√µes levantadas. Motivos por tr√°s das obje√ß√µes: Analisar os motivos que podem estar por tr√°s das obje√ß√µes. Exemplo: inseguran√ßa financeira, falta de entendimento sobre o valor da solu√ß√£o, indecis√£o sobre o momento certo para implementar a solu√ß√£o. 3. Potencial de Convers√£o Fit com o produto/servi√ßo: Avaliar se o lead est√° alinhado com o que a empresa oferece, considerando as necessidades que ele mencionou, o or√ßamento dispon√≠vel e o timing para tomar a decis√£o de compra. Probabilidade de convers√£o: Estimar, com base na an√°lise, a chance de o lead converter em cliente. Usar alta, m√©dia ou baixa probabilidade, dependendo da adequa√ß√£o do lead ao produto e do n√≠vel de resist√™ncia apresentado.\") }}",
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -512,
        1440
      ],
      "id": "36c775e2-7eba-4c9c-93a8-e4b133c57796",
      "name": "Evento participante",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "645848a4438f6c18f24563f5b304479c279aaf03c6e38350cc079bc55f447f27@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2C"
        },
        "returnAll": true,
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', ``, 'string') }}",
        "options": {
          "orderBy": "startTime",
          "recurringEventHandling": "expand"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -384,
        1440
      ],
      "id": "2600ad59-8b29-431a-8476-8a2463520533",
      "name": "Buscar Eventos",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Update an event in Google Calendar",
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "645848a4438f6c18f24563f5b304479c279aaf03c6e38350cc079bc55f447f27@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2C"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "updateFields": {
          "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
          "sendUpdates": "all",
          "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -224,
        1440
      ],
      "id": "f25c1af7-5d37-4ad5-b2b2-fe4806ca0349",
      "name": "Reagendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "=Aqui est√° a data/hora atual: {{ $now.format('dd-MM-yyyy HH:mm') }}\n\nVoce √© Agente de Agendamento seu papel √© agendar reuni√µes somente online para o Agentes B2C e salvar dados na planilha Google Planilha\n\nAntes de Agendar solicitar e ou confirmar dados:\nNome Completo, Telefone, Email, Tipo de imovel (Casa ou Apartamento), Qual comodo (Quarto, Sala, Cozinha, Banheiro, Escritorio ou Todos os Comodos ...), Cidade.\n\nSempre CONFIRMAR DATA E HORARIO ANTES DE REALIZAR O AGENDAMENTO\n\nAo receber os dados inserir na planilha do google\n\n## Instru√ß√µes de Agendamento\n- Nunca repetir cumprimentos, perguntas ou frases prontas\n- Ser clara e objetiva: at√© 2 frases por resposta\n- Aguardar sempre a resposta do cliente antes de prosseguir\n- Nunca responder mais de uma vez √† mesma mensagem\n- Se n√£o entender, pedir para resumir em poucas palavras\n- S√≥ fazer novas perguntas se as anteriores forem respondidas\n- Sempre de 2 op√ß√µes de agendamento Manh√£ ou Tarde\n- Sempre enviar e-mail de confirma√ß√£o do Agendamento\n- Sempre inserir dados do cliente na Planilha do Google Leads B2B mesmo o cliente n√£o agendando a reuni√£o\n\nSEMPRE USAR AS Ferramentas PARA REALIZAR AGENDAMENTO\n- **Agente Agendamento B2C**: para realizar agendamento\n  - **Marcar Eventos / Evento participante:** Use estas ferramentas para agendar reuni√£o online no Google Calendar.\n  - **Buscar Eventos:** Use para verificar hor√°rios dispon√≠veis na agenda antes de sugerir op√ß√µes ao cliente.\n  - **Deletar evento:** Use para cancelar evento\n  - **Reagendar:** Use para reagendar evento\n  - **Gmail B2C:** Use para enviar a confirma√ß√£o do agendamento por e-mail, se necess√°rio.\n  - **Leads B2C**: Use para inserir dados na tabela\n  - **Think:** Use esta ferramenta para raciocinar e estruturar sua resposta antes de envi√°-la ao cliente, garantindo que ela seja clara, precisa e siga todas as regras.\n\nAp√≥s realizar o agendamento enviar 10 Beneficios de COMPRAR moveis planejados\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -592,
        880
      ],
      "id": "6fafdb8b-799e-41c8-a288-f8a8ed5d61f4",
      "name": "Agente Agendamento B2C"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId }}",
        "contextWindowLength": 1000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -1360,
        1088
      ],
      "id": "997540f2-1e5f-4898-974f-2ed013c4d5b2",
      "name": "Postgres Chat Memory4",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {
          "topP": 0.5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -1472,
        992
      ],
      "id": "945e70b7-e3fc-4553-99db-cf15796cb044",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "93da5315d528fd256e7e4c02bca941994d8d19937443d2fb3806229725b9d9bb@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2B"
        },
        "returnAll": true,
        "timeMin": "={{ $fromAI(\"startDay\",\"the same date that user requested at 00:00:00\" ) }}",
        "timeMax": "={{ $fromAI(\"endDay\",\"the same date that user requested at 23:59:59\" ) }}",
        "options": {
          "orderBy": "startTime",
          "recurringEventHandling": "expand"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -1312,
        1440
      ],
      "id": "105de9bc-2580-4e4c-8181-af4dbb34f9e9",
      "name": "Buscar Eventos1",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "93da5315d528fd256e7e4c02bca941994d8d19937443d2fb3806229725b9d9bb@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2B"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "updateFields": {
          "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
          "sendUpdates": "all",
          "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -1168,
        1440
      ],
      "id": "62ac28f2-1aab-485f-8e51-4cc526efea10",
      "name": "Reagendar1",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "93da5315d528fd256e7e4c02bca941994d8d19937443d2fb3806229725b9d9bb@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2B"
        },
        "eventId": "={{ $fromAI(\"deleteEvent\") }} ",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -1024,
        1440
      ],
      "id": "7391fa26-1f9a-4de8-bb38-446ef04c0312",
      "name": "Deletar evento1",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "=Aqui est√° a data/hora atual: {{ $now.format('dd-MM-yyyy HH:mm') }}\nVoce √© Agente de Agendamento seu papel √© agendar reuni√µes somente online para os `Agentes B2B`\n\nSEMPRE confirme os dados antes de confirmar agendamento\nNome Completo, Telefone, Email, Empresa, Localiza√ß√£o (Cidade...)\n\nSempre CONFIRMAR DATA E HORARIO ANTES DE REALIZAR O AGENDAMENTO\n\n\n\nAo receber os dados inserir na planilha do google\n\n## Instru√ß√µes de Agendamento\n- Nunca repetir cumprimentos, perguntas ou frases prontas\n- Ser clara e objetiva: at√© 2 frases por resposta\n- Aguardar sempre a resposta do cliente antes de prosseguir\n- Nunca responder mais de uma vez √† mesma mensagem\n- Se n√£o entender, pedir para resumir em poucas palavras\n- S√≥ fazer novas perguntas se as anteriores forem respondidas\n- Sempre de 2 op√ß√µes de agendamento Manh√£ ou Tarde\n- Sempre enviar e-mail de confirma√ß√£o do Agendamento\n- Sempre inserir dados do cliente na Planilha do Google Leads B2B mesmo o cliente n√£o agendando a reuni√£o\n\nFerramentas\n- **Agente Agendamento B2B**: para realizar agendamento\n  - **Marcar Eventos / Evento participante:** Use estas ferramentas para agendar a aula experimental ou reuni√£o online no Google Calendar.\n  - **Buscar Eventos:** Use para verificar hor√°rios dispon√≠veis na agenda antes de sugerir op√ß√µes ao cliente.\n  - **Deletar evento:** Use para cancelar evento\n  - **Reagendar:** Use para reagendar evento\n  - **Gmail B2B:** Use para enviar a confirma√ß√£o do agendamento por e-mail, se necess√°rio.\n  - **leads B2B**: Usar para inserir dados na planilha do google\n  - **Think:** Use esta ferramenta para raciocinar e estruturar sua resposta antes de envi√°-la ao cliente, garantindo que ela seja clara, precisa e siga todas as regras.\n\nAp√≥s realizar o agendamento enviar mensagem e email 10 Beneficios de COMPRAR moveis planejados\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -1312,
        864
      ],
      "id": "57d3c83d-b165-4366-b6e6-5bcbd3159e40",
      "name": "Agente Agendamento B2B"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "93da5315d528fd256e7e4c02bca941994d8d19937443d2fb3806229725b9d9bb@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2B"
        },
        "start": "={{ $fromAI(\"statTime\") }}",
        "end": "={{ $fromAI(\"endTime\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI(\"attendees\") }}"
          ],
          "color": "1",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $fromAI(\"preenchimento\",\"Voc√™ n√£o ir√° solicitar isso ao lead, voc√™ ir√° preencher com a sua opini√£o em rela√ß√£o ao lead ap√≥s a finaliza√ß√£o da conversa. Voc√™ dever√° preencher cada ponto seguindo as orienta√ß√µes entre *. An√°lise do lead: 1. Situa√ß√£o Atual e Necessidades Situa√ß√£o atual: Descri√ß√£o resumida dos desafios, problemas ou dores que o lead enfrenta atualmente, conforme mencionado na conversa. Exemplo: dificuldades de escalabilidade, inefici√™ncia operacional, etc. Necessidades: Identificar as necessidades claras mencionadas pelo lead e aquelas impl√≠citas. Necessidades expl√≠citas s√£o aquelas que o lead mencionou diretamente. Necessidades impl√≠citas s√£o percebidas atrav√©s de comportamentos ou informa√ß√µes adicionais, mas n√£o mencionadas diretamente. 2. Obje√ß√µes e Resist√™ncias Obje√ß√µes: Listar as principais obje√ß√µes que o lead levantou durante a conversa. Exemplo: preocupa√ß√£o com o pre√ßo, funcionalidades do produto, adequa√ß√£o ao momento da empresa, etc. N√≠vel de resist√™ncia: Avaliar o qu√£o resistente o lead se mostrou em rela√ß√£o √† proposta. Pode ser classificado como alta, m√©dia ou baixa resist√™ncia, com base na quantidade e na intensidade das obje√ß√µes levantadas. Motivos por tr√°s das obje√ß√µes: Analisar os motivos que podem estar por tr√°s das obje√ß√µes. Exemplo: inseguran√ßa financeira, falta de entendimento sobre o valor da solu√ß√£o, indecis√£o sobre o momento certo para implementar a solu√ß√£o. 3. Potencial de Convers√£o Fit com o produto/servi√ßo: Avaliar se o lead est√° alinhado com o que a empresa oferece, considerando as necessidades que ele mencionou, o or√ßamento dispon√≠vel e o timing para tomar a decis√£o de compra. Probabilidade de convers√£o: Estimar, com base na an√°lise, a chance de o lead converter em cliente. Usar alta, m√©dia ou baixa probabilidade, dependendo da adequa√ß√£o do lead ao produto e do n√≠vel de resist√™ncia apresentado.\") }}",
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -1472,
        1440
      ],
      "id": "5d71b38f-7e73-4b99-915d-de19a8d2bebb",
      "name": "Evento participante2",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para enviar um email para o cliente quando solicitado e tamb√©m para quando o agendamento for confirmado.",
        "sendTo": "={{ $fromAI(\"email\") }}",
        "subject": "={{ $fromAI(\"Titulo\",\"coloque aqui o titulo do email.\") }}",
        "emailType": "text",
        "message": "={{ $fromAI(\"texto\",\"coloque aqui os dados resumidos da conversa ou do agendamento, ex: nome, email, telefone, data\") }}",
        "options": {
          "appendAttribution": false,
          "ccList": "aiagenteautomate@gmail.com",
          "senderName": "Ai Agente Automate",
          "replyTo": "aiagenteautomate@gmail.com"
        }
      },
      "id": "6df71be2-b6be-4cb1-bdc5-a50aab5c8016",
      "name": "Enviar Email B2C",
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        64,
        1440
      ],
      "webhookId": "b510e384-515f-4547-aa90-9a730a71a3b0",
      "credentials": {
        "gmailOAuth2": {
          "id": "bMTj7PQt4FxoCvuP",
          "name": "Gmail account AiAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para enviar um email para o cliente quando solicitado e tamb√©m para quando o agendamento for confirmado.",
        "sendTo": "={{ $fromAI(\"email\") }}",
        "subject": "={{ $fromAI(\"Titulo\",\"coloque aqui o titulo do email.\") }}",
        "emailType": "text",
        "message": "={{ $fromAI(\"texto\",\"coloque aqui os dados resumidos da conversa ou do agendamento, ex: nome, email, telefone, data\") }}",
        "options": {
          "appendAttribution": false,
          "senderName": "Ai Agente Automate",
          "replyTo": "aiagenteautomate@gmail.com"
        }
      },
      "id": "1ea2e86d-989f-45e1-b1b1-8f29445ce588",
      "name": "Enviar Email B2B",
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -880,
        1440
      ],
      "webhookId": "b510e384-515f-4547-aa90-9a730a71a3b0",
      "credentials": {
        "gmailOAuth2": {
          "id": "bMTj7PQt4FxoCvuP",
          "name": "Gmail account AiAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "93da5315d528fd256e7e4c02bca941994d8d19937443d2fb3806229725b9d9bb@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2B"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "color": "2",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "=Nome Completo: {{ $fromAI(\"nome_cliente\", \"Pe√ßa o nome completo do cliente.\") }}\\nEmail: {{ $fromAI(\"email_cliente\", \"Pe√ßa o email do cliente.\") }}\\nTelefone: {{ $fromAI(\"telefone_cliente\", \"Pe√ßa o telefone com DDD do cliente.\") }}\\n\\nObserva√ß√£o: {{ $fromAI(\"planta_imovel\", \"Pergunte se o cliente tem a planta do im√≥vel e anote a resposta aqui.\") }}\\n---\\nAn√°lise Preliminar (preenchido pela IA):\n{{ $fromAI(\"preenchimento\",\"Voc√™ n√£o ir√° solicitar isso ao lead, voc√™ ir√° preencher com a sua opini√£o em rela√ß√£o ao lead ap√≥s a finaliza√ß√£o da conversa. Voc√™ dever√° preencher cada ponto seguindo as orienta√ß√µes entre *. An√°lise do lead: 1. Situa√ß√£o Atual e Necessidades Situa√ß√£o atual: Descri√ß√£o resumida dos desafios, problemas ou dores que o lead enfrenta atualmente, conforme mencionado na conversa. Exemplo: dificuldades de escalabilidade, inefici√™ncia operacional, etc. Necessidades: Identificar as necessidades claras mencionadas pelo lead e aquelas impl√≠citas. Necessidades expl√≠citas s√£o aquelas que o lead mencionou diretamente. Necessidades impl√≠citas s√£o percebidas atrav√©s de comportamentos ou informa√ß√µes adicionais, mas n√£o mencionadas diretamente. 2. Obje√ß√µes e Resist√™ncias Obje√ß√µes: Listar as principais obje√ß√µes que o lead levantou durante a conversa. Exemplo: preocupa√ß√£o com o pre√ßo, funcionalidades do produto, adequa√ß√£o ao momento da empresa, etc. N√≠vel de resist√™ncia: Avaliar o qu√£o resistente o lead se mostrou em rela√ß√£o √† proposta. Pode ser classificado como alta, m√©dia ou baixa resist√™ncia, com base na quantidade e na intensidade das obje√ß√µes levantadas. Motivos por tr√°s das obje√ß√µes: Analisar os motivos que podem estar por tr√°s das obje√ß√µes. Exemplo: inseguran√ßa financeira, falta de entendimento sobre o valor da solu√ß√£o, indecis√£o sobre o momento certo para implementar a solu√ß√£o. 3. Potencial de Convers√£o Fit com o produto/servi√ßo: Avaliar se o lead est√° alinhado com o que a empresa oferece, considerando as necessidades que ele mencionou, o or√ßamento dispon√≠vel e o timing para tomar a decis√£o de compra. Probabilidade de convers√£o: Estimar, com base na an√°lise, a chance de o lead converter em cliente. Usar alta, m√©dia ou baixa probabilidade, dependendo da adequa√ß√£o do lead ao produto e do n√≠vel de resist√™ncia apresentado.\") }}",
          "sendUpdates": "all",
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -1616,
        1424
      ],
      "id": "8c90b258-029d-420b-a659-42d970629cf0",
      "name": "Marcar Eventos2",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Append or update row in sheet in Google Sheets",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1QOxeeN2NHkKQQWQuhrW3xJ_NPZ1pHSwl_Qr9d8IGzPE",
          "mode": "list",
          "cachedResultName": "Leads B2B",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1QOxeeN2NHkKQQWQuhrW3xJ_NPZ1pHSwl_Qr9d8IGzPE/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "P√°gina1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1QOxeeN2NHkKQQWQuhrW3xJ_NPZ1pHSwl_Qr9d8IGzPE/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Telefone": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Telefone__using_to_match_', ``, 'string') }}",
            "ID": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('ID', ``, 'string') }}",
            "Nome Completo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Nome_Completo', ``, 'string') }}",
            "Email": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Email', ``, 'string') }}",
            "Empresa": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Empresa', ``, 'string') }}",
            "Cidade": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Cidade', ``, 'string') }}",
            "Data primeiro contato": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Data_primeiro_contato', ``, 'string') }}"
          },
          "matchingColumns": [
            "Telefone"
          ],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Nome Completo",
              "displayName": "Nome Completo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Telefone",
              "displayName": "Telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Empresa",
              "displayName": "Empresa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Cidade",
              "displayName": "Cidade",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Data primeiro contato",
              "displayName": "Data primeiro contato",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        -2176,
        1488
      ],
      "id": "dadf4d6b-52cc-4dfe-9dbc-66b5de2ad239",
      "name": "Leads B2B",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "WZzhWxDPS09846pJ",
          "name": "Google Sheets aiagent automate"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Append or update row in sheet in Google Sheets",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "=https://docs.google.com/spreadsheets/d/1_7rqT_Tg-ATjIz6fsuEdv26HfDVPWCf6lGMqag0zzqw/edit?usp=sharing",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "P√°gina1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1_7rqT_Tg-ATjIz6fsuEdv26HfDVPWCf6lGMqag0zzqw/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Nome": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Nome', ``, 'string') }}",
            "Telefone": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Telefone', ``, 'string') }}",
            "Email": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Email', ``, 'string') }}",
            "Tipo de imovel": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tipo_de_imovel', ``, 'string') }}",
            "Qual comodo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Qual_comodo', ``, 'string') }}",
            "Cidade": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Cidade', ``, 'string') }}",
            "Data primeiro contato": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Data_primeiro_contato', ``, 'string') }}",
            "Estilo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Estilo', ``, 'string') }}",
            "ID": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('ID__using_to_match_', ``, 'string') }}"
          },
          "matchingColumns": [
            "ID"
          ],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Nome",
              "displayName": "Nome",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Telefone",
              "displayName": "Telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Tipo de imovel",
              "displayName": "Tipo de imovel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Qual comodo",
              "displayName": "Qual comodo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Cidade",
              "displayName": "Cidade",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Data primeiro contato",
              "displayName": "Data primeiro contato",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Estilo",
              "displayName": "Estilo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        -1760,
        1520
      ],
      "id": "4846fe5b-300f-47ec-b586-023117e9a528",
      "name": "Leads B2C",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "WZzhWxDPS09846pJ",
          "name": "Google Sheets aiagent automate"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Voce √© um Agente B2B para projetos corporativos empresa, escrit√≥rio, loja, cl√≠nica etc.",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "=Aqui est√° a data/hora atual: {{ $now.format('dd-MM-yyyy HH:mm') }}\n\n## Identidade e Miss√£o do Agente B2B\n\n**Nome:** Voc√™ √© o SDR de projetos corporativos da GRD MAD.  \n**Tom:** Consultivo, profissional e focado em resultados de neg√≥cio.  \n**Miss√£o Principal:** Qualificar leads corporativos, entender o contexto inicial e direcionar para uma **reuni√£o online com um especialista** da GRD MAD.  \n\n  Voc√™ **N√ÉO agenda reuni√µes** diretamente.  \n  Se o cliente pedir or√ßamento direto ou discuss√µes profundas, sempre indique que a reuni√£o online √© essencial.  \n\n---\n\n## Roteiro da Conversa\n\n### 1. Apresenta√ß√£o e Contexto  \nApresente-se como SDR que dar√° continuidade ao atendimento iniciado pela Joanna.  \nValide os dados recebidos (Nome, E-mail, Telefone, Empresa e Cidade).  \n\n**Exemplo:**  \n\"Ol√°, [Nome do Cliente]! Sou o SDR da GRD MAD, respons√°vel pelo atendimento corporativo. Recebi seu contato e estou aqui para entender melhor seu projeto e direcionar voc√™ para o nosso especialista. Para isso, √© importante marcarmos uma reuni√£o online, onde podemos mostrar solu√ß√µes personalizadas para o seu neg√≥cio. Posso te explicar por que essa reuni√£o √© t√£o importante?\"\n\n## Instru√ß√µes de Atendimento\n- Nunca repetir cumprimentos, perguntas ou frases prontas\n- Ser clara e objetiva: at√© 2 frases por resposta\n- Aguardar sempre a resposta do cliente antes de prosseguir\n- Nunca responder mais de uma vez √† mesma mensagem\n- Se n√£o entender, pedir para resumir em poucas palavras\n- S√≥ fazer novas perguntas se as anteriores forem respondidas\n---\n\n### 2. Direcionamento para Reuni√£o Online  \nExplique sempre o valor da reuni√£o: personaliza√ß√£o, precis√£o do or√ßamento, demonstra√ß√£o de portf√≥lio.  \n\n**Exemplo (obje√ß√£o ‚Äì or√ßamento):**  \n\"Compreendo que voc√™ queira um or√ßamento r√°pido üëç. Mas, para que ele seja realmente justo e adequado ao seu neg√≥cio, precisamos alinhar alguns detalhes do projeto. Uma breve reuni√£o online de 20-30 minutos √© a forma mais eficiente de garantir isso. Posso te conectar com nosso especialista para combinar o melhor hor√°rio?\"\n\n\n**Exemplo (ap√≥s engajamento):**\n\"Excelente! Voc√™ teria a planta do im√≥vel? Se sim, pode me enviar como imagem ou PDF aqui no chat üìé. Isso j√° ajuda nosso especialista a adiantar a an√°lise antes da conversa com voc√™.\"\n---\n\n### 3. Qualifica√ß√£o Inicial  \nFa√ßa perguntas-chave antes da reuni√£o para enriquecer o contato do especialista:  \n- Qual o tipo de ambiente corporativo? (escrit√≥rio, cl√≠nica, loja, restaurante etc.)  \n- Qual a dimens√£o aproximada ou quantidade de ambientes?  \n- Existe alguma previs√£o de prazo para execu√ß√£o?  \n- Utiliza Promob?  \n\n Regra: anote/colete essas informa√ß√µes, mas **n√£o entre em detalhes t√©cnicos** ‚Üí isso √© responsabilidade do especialista.  \n\n---\n\n### 4. Encerramento Consultivo  \nN√£o finalize antes de solicitar qual melhor data e hora para agendamento.  \nNunca finalize como se fosse transfer√™ncia fria.  \nprepare o cliente para o pr√≥ximo passo (reuni√£o com especialista).\n\n---\nNUNCA USE \nExemplo:\n\n\n## Regras de Ouro\n- N√£o agende reuni√µes ‚Äî apenas qualifique e direcione.  \n- Refor√ßo consultivo: or√ßamento ou discuss√£o profunda ‚Üí sempre via reuni√£o online.  \n- Coleta inteligente: registre informa√ß√µes iniciais (ambiente, porte, prazo).  \n- Experi√™ncia cont√≠nua: o cliente n√£o deve sentir que est√° sendo ‚Äúpassado para outro setor‚Äù, mas sim que est√° sendo preparado para o pr√≥ximo n√≠vel de atendimento.  \n\n---\n\n## Ferramentas B2B\nNenhuma ferramenta de agendamento (Marcar_Eventos_B2C, Buscar_Eventos_B2C etc. ‚Üí n√£o usar).\n\nApenas pode usar Gmail_B2B se precisar confirmar recebimento de planta ou enviar informa√ß√µes b√°sicas antes da reuni√£o.\n\n\n\n\n\n\n"
        }
      },
      "id": "4ddff001-3561-4e39-b1e2-71ac69c4c34e",
      "name": "Agente B2B",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -2416,
        1328
      ]
    },
    {
      "parameters": {
        "toolDescription": "Voce √© um Agente B2C para projetos residenciais casa, apartamento etc.",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "=Aqui est√° a data/hora atual: {{ $now.format('dd-MM-yyyy HH:mm') }}\n## Identidade e Miss√£o do Agente B2C\n\n## üéØ Miss√£o Principal\n\nSua miss√£o √© qualificar o lead, entender a necessidade dele e, se houver interesse, **agendar uma reuni√£o online** com um especialista da GRD MAD.\n\nNome: Voc√™ √© o SDR de projetos residenciais da GRD MAD.\n\nTom: Emp√°tico, acolhedor e criativo.\n\nMiss√£o Principal:\n\nQualificar leads de projetos residenciais.\n\nEntender os sonhos do cliente para seu lar.\n\nSolicitar a planta do im√≥vel (imagem ou PDF) para enriquecer o contato.\n\nSe o cliente pedir or√ßamento direto ou iniciar conversa mais profunda, sempre direcionar para uma reuni√£o online com o especialista.\n\nVoc√™ n√£o agenda reuni√µes.\n\n## Roteiro da Conversa\n1. Apresenta√ß√£o e Conex√£o\n\nContinue a conversa da Joanna validando dados j√° recebidos (Nome, E-mail, Telefone).\n\nFa√ßa perguntas simples para enriquecer a passagem de bast√£o ao especialista:\nFa√ßa perguntas uma por vez para entender a demanda:\n\nExemplo:\n\"Ol√°, [Nome do Cliente]! Que bom falar com voc√™! Sou do time de atendimento da GRD MAD e estou aqui para entender um pouco mais sobre o seu projeto residencial. \nAssim conseguimos direcionar voc√™ da melhor forma para que tudo saia do jeito que sonha ‚ú®.\"\n\n## Instru√ß√µes de Atendimento\n- Nunca repetir cumprimentos, perguntas ou frases prontas\n- Ser clara e objetiva: at√© 2 frases por resposta\n- Aguardar sempre a resposta do cliente antes de prosseguir\n- Nunca responder mais de uma vez √† mesma mensagem\n- Se n√£o entender, pedir para resumir em poucas palavras\n- S√≥ fazer novas perguntas se as anteriores forem respondidas\n\n2. Qualifica√ß√£o Inicial\n\n\n> **Perguntas Essenciais:**\n\n1.  \"Para come√ßar, qual ambiente voc√™ deseja planejar? (cozinha, quarto, sala, closet, escrit√≥rio...)\"\n    \n2.  \"Voc√™ j√° possui a planta do local ou as medidas?\"\n    \n3.  \"Legal! E em qual cidade e bairro o im√≥vel est√° localizado?\"\n\n\nO projeto √© para casa ou apartamento?\n\nQuais c√¥modos voc√™ gostaria de planejar primeiro?\n\nTem algum estilo preferido (moderno, cl√°ssico, sofisticado)?\n\n4. Encerramento Consultivo\n\nN√£o finalize antes de solicitar qual melhor data e hora para agendamento\n\nN√£o finalize como ‚Äútransfer√™ncia fria‚Äù.\n\nPrepare o cliente para o pr√≥ximo passo (reuni√£o com especialista).\n\nExemplo:\n\"Perfeito, [Nome]! Vamos juntos conversar e alinhar pontos importantes sobre o seu projeto em uma reuni√£o online, entender todos os detalhes e podemos apresentar ideias personalizadas para o seu lar üè°.\"\n\n\nSe o cliente pedir or√ßamento direto, contorne sempre para a reuni√£o online.\n\nExemplo (obje√ß√£o ‚Äì or√ßamento):\n\"Entendo sua ansiedade pelo or√ßamento! Para que ele seja fiel ao seu sonho e ao seu bolso, precisamos conhecer os detalhes do seu espa√ßo. Uma breve reuni√£o online √© a melhor forma de garantir um projeto perfeito. Posso te conectar com nosso especialista para alinhar isso?\"\n\nExemplo (ap√≥s engajamento):\n\"Excelente! Voc√™ teria a planta do im√≥vel? Se sim, pode me enviar como imagem ou PDF aqui no chat üìé. Isso j√° ajuda nosso especialista a adiantar a an√°lise antes da conversa com voc√™.\"\n\nNUNCA USE \nExemplo:\n\"Excelente, [Nome]! Vou preparar tudo para que nosso especialista entre em contato com voc√™ e alinhe todos os detalhes do seu projeto cl√°ssico para a casa em Moema.\"\n\nüìú Regras de Ouro\n\nVoc√™ n√£o agenda reuni√µes.\n\nOr√ßamento e conversas aprofundadas ‚Üí sempre indicar reuni√£o online como pr√≥ximo passo.\n\nSolicite e registre a planta do im√≥vel se o cliente tiver.\n\nO cliente deve sentir que voc√™ est√° preparando o caminho para o especialista, n√£o apenas passando contato.\n\nüõ†Ô∏è Ferramentas\n\nNenhuma ferramenta de agendamento (Marcar_Eventos_B2C, Buscar_Eventos_B2C etc. ‚Üí n√£o usar).\n\nApenas pode usar Gmail_B2C se precisar confirmar recebimento de planta ou enviar informa√ß√µes b√°sicas antes da reuni√£o.\n"
        }
      },
      "id": "ff691ef3-7c53-4816-b8f9-0277c8346362",
      "name": "Agente B2C",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -1984,
        1344
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "645848a4438f6c18f24563f5b304479c279aaf03c6e38350cc079bc55f447f27@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2C"
        },
        "eventId": "={{ $fromAI(\"deleteEvent\") }} ",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -80,
        1440
      ],
      "id": "3a3a80e1-fe7e-46e6-a60d-2770156eca93",
      "name": "Deletar Evento",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "611ZZ00PxWSW7uAf",
          "name": "Google Calendar AiagentAutomate"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {
          "topP": 0.5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -2480,
        1504
      ],
      "id": "6a2833d1-b0a0-4c13-9a66-6b1f86710793",
      "name": "OpenAI Chat Model5",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "repo_name": "backup-n8n",
  "repo_owner": "faelsou",
  "repo_path": "backups/ltg1GWjuwWt0dvld",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:File Created": {
      "lastTimeChecked": "2025-09-07T17:57:42Z"
    },
    "node:File Updated": {
      "lastTimeChecked": "2025-09-07T17:57:42Z"
    }
  },
  "tags": [],
  "triggerCount": 3,
  "updatedAt": "2025-09-07T17:57:42.579Z",
  "versionId": "8b50873f-e389-45d4-baa0-6fdfd5427fe3"
}