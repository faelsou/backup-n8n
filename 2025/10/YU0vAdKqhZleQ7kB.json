{
  "active": false,
  "connections": {
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "dados_IA",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Doc Rows": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Delete Old Doc Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Document Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "dados_IA",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis3": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Extrair dados Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Redis3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Vari√°veis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "SDR Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Segmentos1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1,2s1": {
      "main": [
        [
          {
            "node": "Enviar texto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "1,2s1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser1": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Segmentos1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Monitor LLM Usage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Get a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert into Supabase Vectorstore": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "SessionID",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar sessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar sessionID": {
      "main": [
        [
          {
            "node": "Create a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SessionID": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vari√°veis": {
      "main": [
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados_IA": {
      "ai_tool": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar texto": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a row": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a row": {
      "main": [
        [
          {
            "node": "SessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Agente B2C",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Agente B2B",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Agente B2C",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Agente Agendamento B2C": {
      "ai_tool": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Agente Agendamento B2B": {
      "ai_tool": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Enviar Email B2C": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Enviar Email B2B": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Agente B2B": {
      "ai_tool": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Agente B2C": {
      "ai_tool": [
        [
          {
            "node": "SDR Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Agente B2B",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "SDR Agent": {
      "main": [
        [
          {
            "node": "Check for Action",
            "type": "main",
            "index": 0
          },
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leads B2B": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Leads B2C": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Deletar Evento B2C": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Evento participante B2C": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Eventos B2C": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Reagendar B2C": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Marcar Eventos B2B": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Evento participante B2B": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Eventos B2B": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Reagendar B2B": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Deletar evento B2B": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2B",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Marcar Eventos B2C": {
      "ai_tool": [
        [
          {
            "node": "Agente Agendamento B2C",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Check for Action": {
      "main": [
        [
          {
            "node": "Parse File Send Action",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parse File Send Action",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse File Send Action": {
      "main": [
        [
          {
            "node": "Find File in Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find File in Drive": {
      "main": [
        [
          {
            "node": "Download B2B File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download B2B File": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extrair dados Conversation": {
      "main": [
        [
          {
            "node": "Update Supabase com Dados Extra√≠dos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Supabase com Dados Extra√≠dos": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-20T06:01:32.976Z",
  "id": "YU0vAdKqhZleQ7kB",
  "isArchived": false,
  "meta": null,
  "name": "GRD_MAD_PRD-homo1",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "c5d33375-149c-49d1-9098-83fda53c2e76",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        560,
        1088
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').first().json.file_id }}"
              }
            ]
          }
        }
      },
      "id": "f889ed8e-eca0-4f39-b59d-ab7151db4652",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        -1424,
        1536
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "a8cdc392-8489-480f-8844-8d24e12c7d1e",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        -1568,
        1568
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Busca Info no RAG",
        "height": 80,
        "width": 350,
        "color": 5
      },
      "id": "61f2c723-85a7-4498-bf1b-9a13c3cfa236",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        96,
        880
      ]
    },
    {
      "parameters": {
        "content": "# Ferramenta para Adicionar um Arquivo do Google Drive ao Banco de Dados Vetorial.",
        "height": 80,
        "width": 1493,
        "color": 5
      },
      "id": "08f8f562-33ae-4ee8-9ac8-0c8d86407a51",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2912,
        1040
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "1bfd213e-57ef-4470-ab17-c54f1af40499",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -2464,
        1312
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "lEIDsWEIbsEr4Vq9",
          "name": "Google Drive GrdMad"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 1,
              "unit": "minutes"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1mstmyigwRhrr3h4V5AFEb0627JnTDwnK",
          "mode": "list",
          "cachedResultName": "Base de Conhecimento Joanna",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1mstmyigwRhrr3h4V5AFEb0627JnTDwnK"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "4086b048-2db4-40e6-bd7f-6c61ac1dc16e",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -3360,
        1248
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "lEIDsWEIbsEr4Vq9",
          "name": "Google Drive GrdMad"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1mstmyigwRhrr3h4V5AFEb0627JnTDwnK",
          "mode": "list",
          "cachedResultName": "Base de Conhecimento Joanna",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1mstmyigwRhrr3h4V5AFEb0627JnTDwnK"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "f65acac1-201c-4c28-8368-cc4632658787",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -3360,
        1440
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "lEIDsWEIbsEr4Vq9",
          "name": "Google Drive GrdMad"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "3ac2fb62-ac16-4e5f-83e5-1536f15a2a20",
      "name": "Extract Document Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -1888,
        1488
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "71888173-7285-4e64-a052-b142a5815eae",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        160,
        1152
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documentos",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "id": "2c77a9f6-7cb6-42df-b594-b3dfc1dc447b",
      "name": "Delete Old Doc Rows",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3008,
        1296
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "c774ed34-0d67-44b7-a537-83810f357b7c",
              "name": "originalFilename",
              "value": "={{ $json.originalFilename }}",
              "type": "string"
            },
            {
              "id": "dff39c85-b4a2-45ba-a5ff-f4b311999efc",
              "name": "sha1Checksum",
              "value": "={{ $json.sha1Checksum }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "af4f85ed-b0ec-4d30-be2c-5ab62447dc56",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3168,
        1296
      ]
    },
    {
      "parameters": {
        "content": "# Atendente IA",
        "height": 80,
        "width": 276,
        "color": 6
      },
      "id": "b58be1da-b469-44c3-a12c-7534f929dfeb",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -560,
        336
      ]
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "767f15a3-781f-42fa-b781-29eb4c8b097a",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -1888,
        1136
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "1d28807a-ad0e-4217-bd77-340d8bf9567f",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -1728,
        1312
      ]
    },
    {
      "parameters": {},
      "id": "1c4a1522-4b5e-4ff7-840d-7728b1252cdc",
      "name": "Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        -1360,
        1696
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "9e9330d7-9766-414f-a520-1ff17285b49d",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        -1584,
        1312
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 2
        }
      },
      "id": "e9efeb22-de78-455f-9621-2a286c947178",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2288,
        1312
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documentos",
          "mode": "list",
          "cachedResultName": "documentos"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "0c7845df-bd93-45a4-805f-335426b6edb3",
      "name": "Insert into Supabase Vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -1472,
        1312
      ],
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documentos",
          "mode": "list",
          "cachedResultName": "documentos"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "a0199e83-ac63-4a62-822d-1e40bd1b37b5",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        112,
        1008
      ],
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "2023fc82-b632-44cb-8f6b-fba37361773b",
      "name": "Extract from Excel",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -1888,
        1312
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 644,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -592,
        288
      ],
      "typeVersion": 1,
      "id": "0d687fda-a6dd-4afc-bbd0-c76b91459aa3",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "",
        "height": 424,
        "width": 700,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        80,
        848
      ],
      "typeVersion": 1,
      "id": "22955123-f435-4c4c-a94e-b9364e125dd3",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "",
        "height": 800,
        "width": 2300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3440,
        1008
      ],
      "typeVersion": 1,
      "id": "dd0fbaf7-3c25-45f4-825a-16a3ca6afaa9",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Arquivos criados em uma pasta espec√≠fica > Verificar o tipo de arquivo e realizar convers√£o > Extrair o texto > Adicionar ao Vector Store",
        "height": 80,
        "width": 1600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3424,
        1712
      ],
      "typeVersion": 1,
      "id": "25d68865-0f32-417a-ba78-0bba90889f42",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Gatilho de Monitoramento",
        "height": 440,
        "width": 213,
        "color": 5
      },
      "id": "0bd0c78e-bbd8-4bf6-9a94-8617a501b45f",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3408,
        1152
      ]
    },
    {
      "parameters": {
        "amount": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"Tempo de resposta picada\"] }}"
      },
      "id": "0457ec00-decc-4be4-bd2c-0a5de84892ec",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1648,
        656
      ],
      "webhookId": "36897edf-24a8-4eb8-a9dd-47063a839465"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "options": {}
      },
      "id": "bcfd0886-be67-43a2-8fee-55747fe0b43a",
      "name": "Redis1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1488,
        656
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "21fd20d7-f940-4a66-91d5-5ea4c031bb50",
              "leftValue": "={{ $json.propertyName.last() }}",
              "rightValue": "={{ $('Vari√°veis').item.json.mensagem }}",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "eabfdba1-d37f-470a-9744-1e43fd205878",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1168,
        656
      ]
    },
    {
      "parameters": {},
      "id": "791f0c8c-12d2-4775-8d94-f443f1fdab40",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -992,
        736
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "37f63b88-4a52-4421-aa95-db9114e521bc",
              "name": "listaMensagens",
              "value": "={{ $json.propertyName[0] }}",
              "type": "string"
            },
            {
              "id": "08b2e8c0-bc00-43ef-80bd-7a86bda2ee47",
              "name": "sessionId",
              "value": "={{ $item(\"0\").$node[\"SessionID\"].json[\"sessionid\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "9e9840da-b5e8-4a50-a759-fa205d623d9d",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1008,
        528
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
      },
      "id": "45501606-df16-40cb-85f3-c3d16191b5aa",
      "name": "Redis2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -768,
        528
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.ogg",
          "mimeType": "application/ogg"
        }
      },
      "id": "93f7f49f-6817-42fe-97ab-7bc33fc1d635",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2704,
        656
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4e639fce-3e5d-4fe0-9fe3-c403e077d7ca",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2848,
        656
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.png",
          "mimeType": "image/png"
        }
      },
      "id": "d56998d6-0dfd-4c90-bcb8-90986218c0df",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2704,
        832
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "823711c3-ec12-41fb-8781-74fc90c45328",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2944,
        864
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ade56c50-1520-4760-8df5-e99617d6d3ad",
              "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "70f7903a-4782-419a-bcbc-de469a1535d9",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2192,
        816
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageData": "={{ $item(\"0\").$node[\"OpenAI\"].json[\"text\"] }}",
        "tail": true
      },
      "id": "7ff7dd8f-9b2b-4ea4-826f-50c7ea4978dc",
      "name": "Redis3",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2160,
        656
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageData": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}, {{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "d0788d35-e9ef-4da2-87da-9d279e35b31e",
      "name": "Redis4",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1984,
        832
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}",
        "messageData": "={{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "edea5c7a-bb92-47f6-b88f-295e2da9e1c3",
      "name": "Redis5",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1824,
        752
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "50cebc66-2dbc-4c7a-a09e-83ffb0f52991",
              "name": "mensagem",
              "value": "={{ $('Vari√°veis').item.json.mensagem }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "57229009-02c4-4f9f-965d-15c38e2804b0",
      "name": "Edit Fields4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2848,
        496
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "d78a2f3b-eeb4-4076-9bd2-e6226a121f5d",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -2544,
        656
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Descreva todo o conteudo da imagem. Responda sem acento, sem hifens",
        "inputType": "base64",
        "options": {}
      },
      "id": "8ffc5bc8-cb01-46bf-a5a1-88ecdaa4a47f",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -2400,
        832
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "grdmad",
        "options": {}
      },
      "id": "ab9a4f2c-f1d8-4591-b7e4-33234a206ef1",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -4480,
        608
      ],
      "webhookId": "9da7e7a6-a361-41cb-9eab-2f1e65d7e00d"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c0e434dd-1268-421d-b81b-3a5e90ed9550",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "2257d5c7-becc-4cdc-82e1-4fdea75aac01",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -3088,
        640
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ca105ab4-2bb9-4da1-b4d0-84132dc76cb5",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        448,
        640
      ],
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "f0e7705c-7498-42c6-afa8-73476f513e6f",
      "name": "Segmentos1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        720,
        400
      ]
    },
    {
      "parameters": {
        "amount": 2.1
      },
      "id": "3972d87d-ad16-449f-834a-673e1b8dfa2e",
      "name": "1,2s1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1168,
        432
      ],
      "webhookId": "8bd120f2-182b-4924-9e76-21dc4af97289"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "98c54685-e20c-452c-b46e-c299c976bfc5",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        896,
        400
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "097d9fa8-1a53-4308-8bea-60be72815332",
      "name": "OutputParser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        608,
        640
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a sa√≠da no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, n√£o √© mesmo?\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\n\n### Jamais separe uma mensagem vazia.\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do whatsapp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- ~tachado~ (caso seja algo que foi exclu√≠do ou alterado)\n\t\t\t- _it√°lico_.(extremamente raro)\n            - `link` (usar sempre em todos os links)\n\nTudo o que for link, pode colocar entre \"`\", ou seja, na seguinte formata√ß√£o: `www.link.com.br`\n"
            }
          ]
        }
      },
      "id": "7514cd44-03b2-4825-8840-d88884d6f39c",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        416,
        400
      ]
    },
    {
      "parameters": {
        "content": "# Pausa para mensagens",
        "height": 140,
        "width": 376,
        "color": 5
      },
      "id": "7a36bb98-4635-4d51-bf4d-1480050a1557",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2272,
        320
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 680,
        "width": 1660,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2288,
        288
      ],
      "typeVersion": 1,
      "id": "26dc8c50-2fee-4014-87ee-c2b9c1db8ddb",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "",
        "height": 500,
        "width": 1412,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        192,
        288
      ],
      "typeVersion": 1,
      "id": "2a62fe88-5de8-40db-9af7-908bde8b35f4",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "# Divis√£o de Mensagens Inteligente - Texto",
        "height": 80,
        "width": 736,
        "color": 5
      },
      "id": "b12bf9b3-efbe-425e-9037-35cb86cedbb4",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        208,
        288
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 800,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3104,
        368
      ],
      "typeVersion": 1,
      "id": "6fc661ad-57e5-45a5-a4d3-303ba93f71c8",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "content": "# Classifica Mensagens",
        "height": 80,
        "width": 396,
        "color": 5
      },
      "id": "3d846d93-5d01-4dae-a09c-791dad12ece4",
      "name": "Sticky Note21",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3088,
        400
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 880,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4032,
        448
      ],
      "typeVersion": 1,
      "id": "5cdd60b0-9ddd-48e4-bc64-91b2cd3a0d35",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "content": "# Registro de Cliente no Supabase",
        "height": 80,
        "width": 596,
        "color": 5
      },
      "id": "4fb65402-b4a3-4419-8b04-158f77f479a3",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3952,
        480
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "id": "d3c84d93-9ee4-467a-9c2e-cc26a53a65b0",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -208,
        528
      ]
    },
    {
      "parameters": {
        "content": "## Webhook inicio",
        "height": 280,
        "width": 420,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4528,
        512
      ],
      "typeVersion": 1,
      "id": "b0a3d899-3bdf-421b-861b-ad59e305c42c",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $now }}",
        "format": "custom",
        "customFormat": "dd-MM-yyyy",
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -3984,
        608
      ],
      "id": "c10a67ff-51ba-4259-8a79-dab12db4ae74",
      "name": "Date & Time1"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Create a table to store your documents\ncreate table documents (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3712,
        1536
      ],
      "id": "b3f2b957-d2f5-4c58-b6f8-5b50ba490515",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 280,
        "width": 260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3776,
        1408
      ],
      "typeVersion": 1,
      "id": "dcef1a2f-3c84-4108-a103-e46881f8ae99",
      "name": "Sticky Note31"
    },
    {
      "parameters": {
        "content": "## Cria tabela documentos",
        "height": 80,
        "width": 180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3728,
        1424
      ],
      "typeVersion": 1,
      "id": "0c8721c8-8740-4ed2-a94e-0c11606e3b49",
      "name": "Sticky Note32"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table dados_cliente (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  telefone text, \n  sessionid text\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4000,
        1536
      ],
      "id": "085d9852-8544-4e27-b73f-ce35a55a7de8",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "CbbTX7ryuVXsyhIG",
          "name": "Postgres_AIAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 280,
        "width": 260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4064,
        1408
      ],
      "typeVersion": 1,
      "id": "596aa130-d9a6-4853-956f-56602b3aa53c",
      "name": "Sticky Note33"
    },
    {
      "parameters": {
        "content": "## Cria tabela dados_cliente",
        "height": 80,
        "width": 180,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4016,
        1424
      ],
      "typeVersion": 1,
      "id": "bb200e01-a240-40e9-ad37-95054c9b4b8b",
      "name": "Sticky Note34"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from dados_cliente",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3984,
        1904
      ],
      "id": "b461d212-da65-4aa7-91c6-d1f4d1b58689",
      "name": "Postgres2",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4064,
        1728
      ],
      "typeVersion": 1,
      "id": "62830b26-bb8d-403f-808a-a7f1f50a15c8",
      "name": "Sticky Note35"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela dados_cliente",
        "height": 120,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4016,
        1744
      ],
      "typeVersion": 1,
      "id": "9972b4fc-f6d1-4736-80f2-61dbf002d98f",
      "name": "Sticky Note36"
    },
    {
      "parameters": {
        "jsCode": "return $items(\"Set File ID\").map(item => {\n  return {\n    json: {\n      file_id: item.json.file_id,\n      file_type: item.json.file_type\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2848,
        1296
      ],
      "id": "09024e24-3b6b-4f81-8971-c9fc7f023688",
      "name": "Code2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -2688,
        1296
      ],
      "id": "65e52773-33df-4083-b42b-500853869e7b",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3776,
        1728
      ],
      "typeVersion": 1,
      "id": "297b492d-6e53-497d-bea6-4c946f6085a7",
      "name": "Sticky Note37"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela documentos",
        "height": 120,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3728,
        1744
      ],
      "typeVersion": 1,
      "id": "4b685920-63db-4dbc-8f51-13246214c362",
      "name": "Sticky Note38"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from n8n_chat_histories",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3696,
        1184
      ],
      "id": "8b3a1f48-7275-45a0-a362-af1b0c933747",
      "name": "Postgres4",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3776,
        1024
      ],
      "typeVersion": 1,
      "id": "3c0dd54a-aa13-455c-8f7a-f68b0b41f549",
      "name": "Sticky Note39"
    },
    {
      "parameters": {
        "content": "## Deleta dados tabela chat",
        "height": 80,
        "width": 200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3744,
        1040
      ],
      "typeVersion": 1,
      "id": "f5494af0-79b0-406d-a7a5-49d942bab9fb",
      "name": "Sticky Note40"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $json.sessionid }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3600,
        608
      ],
      "id": "c20abfde-c0d0-42f5-a73f-ed7534747675",
      "name": "If1"
    },
    {
      "parameters": {
        "action": "generate"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -3760,
        768
      ],
      "id": "713eaf4e-c61c-43dc-af75-72b22758e800",
      "name": "Gerar sessionID"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3360,
        592
      ],
      "id": "af711090-ba1f-45be-958d-6cdb37cc32c9",
      "name": "SessionID",
      "retryOnFail": true,
      "maxTries": 2,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d88c137-383f-4307-b3cc-1f6a560ea67b",
              "name": "mobile",
              "value": "={{  $json.body.data.key.remoteJid.replace(/\\D/g, '').replace(/^55(\\d{2})(\\d{8})$/, '55$19$2') }}",
              "type": "string"
            },
            {
              "id": "7e2f520e-4952-425b-82ca-792cc46680d4",
              "name": "mensagem",
              "value": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"message\"][\"conversation\"] }}",
              "type": "string"
            },
            {
              "id": "104b3cd0-d988-4c58-a175-2ca5465bf8c1",
              "name": "API_Elevenlabs",
              "value": "sk_f8b0546f2d0dbcbd3fa6510a3ec468d249dfdb7823311901",
              "type": "string"
            },
            {
              "id": "6065b018-8dc0-49db-8da9-f692f96e9c92",
              "name": "ID_Voz_Elevenlabs",
              "value": "=9BWtsMINqrJLrRacOk9x",
              "type": "string"
            },
            {
              "id": "4e2bdc18-93a5-4117-b94e-bcfd228a7379",
              "name": "Tempo de resposta picada",
              "value": "2",
              "type": "string"
            },
            {
              "id": "0d4a900f-af55-4472-824f-1d06a25de052",
              "name": "Instancia_Evolution",
              "value": "grdmad",
              "type": "string"
            },
            {
              "id": "9f80f8f6-a917-4af3-b77e-fa1f93d38cca",
              "name": "URL_Evolution",
              "value": "apiwp.aiagentautomate.com.br/",
              "type": "string"
            },
            {
              "id": "c6b307cf-ac0d-4273-8895-3c601b9b909b",
              "name": "KEY_Evo",
              "value": "B8493D438D72-4C34-97CC-4C9A4A257C0A",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "6b67ce2e-2473-4d9f-8e97-a2456df6580d",
      "name": "Vari√°veis",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4240,
        608
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Vari√°veis').item.json.mobile }}",
        "messageData": "={{ $json.mensagem }}",
        "tail": true
      },
      "id": "6334d7a2-9014-4f12-8ea1-c7958ca359f9",
      "name": "Redis",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2160,
        496
      ],
      "credentials": {
        "redis": {
          "id": "3aF3lSIIig1BrDmo",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "name": "dados_IA",
        "description": "Use esta ferramenta para buscar informa√ß√µes sobre projetos, materiais, e detalhes da GRD MAD para responder √†s perguntas dos clientes."
      },
      "id": "f7f18c9c-6733-4a89-bbb4-a25b2b803399",
      "name": "dados_IA",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        496,
        896
      ]
    },
    {
      "parameters": {
        "jsCode": "// Mant√©m s√≥ o primeiro item da lista\nreturn [items[0]];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1328,
        656
      ],
      "id": "81668822-b022-47b0-a3ff-465c1353b91d",
      "name": "Code1"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "grdmad",
        "remoteJid": "={{ $('Vari√°veis').item.json.body.data.key.remoteJid }}",
        "messageText": "={{ $json.output }}",
        "options_message": {
          "delay": 2000
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1408,
        432
      ],
      "id": "b467b432-acca-453e-a19c-911a4f03b8d0",
      "name": "Enviar texto",
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3792,
        608
      ],
      "id": "1389a89c-6f5b-4f36-8725-ced8626fdb66",
      "name": "Get a row",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "tableId": "dados_cliente",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nome",
              "fieldValue": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"pushName\"] }}"
            },
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $item(\"0\").$node[\"Vari√°veis\"].json[\"mobile\"] }}"
            },
            {
              "fieldId": "sessionid",
              "fieldValue": "={{ $item(\"0\").$node[\"Gerar sessionID\"].json[\"data\"] }}"
            },
            {
              "fieldId": "created_at",
              "fieldValue": "={{ $now }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3360,
        768
      ],
      "id": "a3b39b14-f4c1-4878-97bc-68c2533df35f",
      "name": "Create a row",
      "retryOnFail": true,
      "maxTries": 2,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from documentos",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3696,
        1904
      ],
      "id": "c35c85e8-7377-44d8-85d5-88cdc2e38844",
      "name": "Execute a SQL query",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.listaMensagens }}",
        "options": {
          "systemMessage": "=Aqui est√° a data/hora atual: {{ $now.format('dd-MM-yyyy HH:mm') }}\nVis√£o Geral\n\nVoc√™ √© a Joanna da GRD MAD, agente orquestrador. Seu papel √© Orquestrar cliente e direcion√°-lo para a **Diretriz Ferramentas**: correta. Voc√™ nunca deve agendar reuni√µes ou enviar e-mails ‚Äî apenas acionar a ferramenta correta utilize sempre Diretriz abaixo.\n\n\n## Diretriz Roteiro da Conversa\n\n### 1. Sauda√ß√£o Inicial\n\nApresente-se e reforce a marca.\n\n\n## Instru√ß√µes de Atendimento\n- Sempre consultar a ferramenta `tools think`\n- Responder √† sauda√ß√£o apenas uma vez\n- Se o cliente apenas cumprimentar, Recepcione o cliente e pergunte:  \n  > \"Ol√°! üëã {{ $('Webhook').item.json.body.data.pushName }} Sou a Joanna, assistente da GRD MAD, tudo bem? \n  > Voce tem uma empresa (B2B) e quer revender nossos moveis? üòä\n  > Voce √© consumidor final (B2C) e quer mobiliar sua casa?\n- Nunca repetir cumprimentos, palavras, perguntas ou frases prontas\n- Ser clara e objetiva: at√© 2 frases por resposta\n- Aguardar sempre a resposta do cliente antes de prosseguir\n- Nunca responder mais de uma vez √† mesma mensagem\n- Se n√£o entender, pedir para resumir em poucas palavras\n- S√≥ fazer novas perguntas se as anteriores forem respondidas\n- Sempre envie links: **https://www.instagram.com/grd_mad/** quando cliente solicitar imagens de projetos.\n- Nunca enviar mensagens para o cliente ex: dados inserido na planilha\n## Exemplo:\n## Agente B2B\nEmpresa \n## Arquiteto, Marceneiro, Loja de Moveis etc.\n\n## Agente B2C\nConsumidor final\n##Casa, Apartamento ou Clinicas etc.\n\n\n## Diretriz Regras\n\n- Nunca fa√ßa agendamento, apenas direcione.\n- Sempre Usar Ferramentas disponiveis, nunca responder sem consultar Ferramentas\n- Evitar textos longos ou gen√©ricos de outros assuntos que n√£o forem sobre a GRD MAD\n- Fazer perguntas novas somente se necess√°rio.\n- N√£o repita palavras \"Perfeito, √≥timo etc.\"\n\n## Diretriz Ferramentas\n\n- **Agente B2B**: para projetos com (Arquiteto, Marceneiro, Loja de Moveis etc.)\n- **Agente B2C**: para projetos residenciais ou corporativo (Casa, Apartamento ou Clinicas etc.)\n- **Agente Agendamento B2B**: para Marcar Eventos, Buscar Eventos, Reagendar, Deletar Eventos, Enviar Email, Salvar dados Planilha Google\n- **Agente Agendamento B2C**: para Marcar Eventos, Buscar Eventos, Reagendar, Deletar Eventos, Enviar Email, Salvar dados Planilha Google\n- **dados_IA**:\nUse sempre essa ferramenta para obter quais quer informa√ß√µes da nossa empresa, pois essa tool √© seu banco de dados e sua memoria principal, use para enriquecer sua resposta ou quando precisar obter qual quer informa√ß√µes da nossa empresa ou produtos e informa√ß√µes gerais.\n- **Think**:\nUse sempre essa ferramenta, quando precisar da uma resposata mais precisa para o cliente, ou seja n√£o sabe a resposta ou tem d√∫vida, use essa ferramenta para tomar desi√ß√µes antes de enviar sua resposta final.\n\n\n## Diretriz Instru√ß√µes\n\nUse a ferramenta correta: \n- **Agente B2B**: Para (Empresas B2B) \n- **Agente B2C**: Para (Consumidor Final B2C)\n- **Agente Agendamento B2B**: para Marcar Eventos B2B, Buscar Eventos B2B, Reagendar B2B, Deletar Eventos B2B, Enviar Email B2B, Salvar dados Planilha Google Leads B2B\n- **Agente Agendamento B2C**: para Marcar Eventos B2C, Buscar Eventos B2C, Reagendar B2C, Deletar Eventos B2C, Enviar Email B2C, Salvar dados Planilha Google Leads B2C\n\n\n"
        }
      },
      "id": "4addf190-f69a-4e9f-898b-57d6c867d08d",
      "name": "SDR Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -608,
        528
      ]
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {
          "topP": 0.3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -560,
        720
      ],
      "id": "08f9e4fd-66d2-4dd4-9db6-1d6e684ddd36",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId }}",
        "contextWindowLength": 1000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -240,
        2672
      ],
      "id": "bc03ae25-c7f9-4de3-81c1-b11712274bbd",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId }}",
        "contextWindowLength": 1000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -1344,
        2256
      ],
      "id": "4e26e1e7-ba6a-4581-91d6-13fdbbef5ae0",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId }}",
        "contextWindowLength": 1000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -896,
        2272
      ],
      "id": "a83c980d-d06b-4fe1-ae62-473a896f3374",
      "name": "Postgres Chat Memory2",
      "credentials": {
        "postgres": {
          "id": "F9YTJESL5BceDOve",
          "name": "Postgres Teste"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {
          "topP": 0.1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -1040,
        2240
      ],
      "id": "097bd4f1-6741-453d-8e41-b016d3e696cd",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {
          "topP": 0.1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        240,
        1728
      ],
      "id": "57d487e3-2ba4-4af7-9b77-f127ea9233a7",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Voce √© especialista em Agendamento de Reuni√µes Online",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "=# üß† Agente de Agendamento **B2C** ‚Äî GRD MAD\n\n\n**Fun√ß√£o:** Realizar agendamentos **online** com leads B2C de forma precisa, organizada e personalizada.\n**Data e hora atual:** `{{ $now.format('dd-MM-yyyy HH:mm') }}`\n\n---\n\n## üéØ Objetivo\n\nSeu papel √© **confirmar os dados do lead**, sugerir **3 hor√°rios dispon√≠veis** (manh√£ ou noite), **verificar a agenda** do e-mail `grdmadmoveis@gmail.com`, e **realizar, cancelar ou reagendar** reuni√µes online.\nAp√≥s cada agendamento, **enviar confirma√ß√£o por e-mail e WhatsApp**, al√©m de **mensagem com 10 benef√≠cios de comprar m√≥veis planejados**.\n\n---\n\n## ‚öôÔ∏è Regras Gerais\n\n1. **Confirma√ß√£o de dados obrigat√≥ria** antes de agendar:\n\n   * Nome completo\n   * Telefone\n   * E-mail\n   * Localiza√ß√£o (Cidade)\n\n2. **Agenda Google ([grdmadmoveis@gmail.com](mailto:grdmadmoveis@gmail.com)):**\n\n   * Sempre verificar hor√°rios dispon√≠veis antes de sugerir segunda a sexta\n   * Nunca duplicar reuni√µes existentes.\n   * Ap√≥s agendar, enviar e-mail e WhatsApp de confirma√ß√£o com o link da reuni√£o.\n\n3. **Estilo de conversa:**\n\n   * Mensagens curtas (m√°x. 2 frases por resposta).\n   * Fazer perguntas objetivas e uma de cada vez.\n   * Aguardar sempre a resposta antes de prosseguir.\n   * Evitar repeti√ß√µes de frases, cumprimentos ou textos prontos.\n   * Se n√£o entender, pedir para o cliente resumir em poucas palavras.\n\n4. **Agendamento:**\n\n   * Ofere√ßa **3 hor√°rios dispon√≠veis** (no per√≠odo da manh√£ e tarde).\n   * Nunca oferecer reuni√µes a noite e sabados e domingos.\n   * S√≥ confirmar ap√≥s o cliente escolher um hor√°rio.\n   * Ao confirmar, use a ferramenta **Marcar Evento B2C** e adicione todos os participantes.\n   * Ap√≥s o agendamento, envie:\n\n     * ‚úÖ E-mail de confirma√ß√£o com link da reuni√£o.\n     * ‚úÖ Mensagem de WhatsApp com link e 10 benef√≠cios de m√≥veis planejados.\n\n5. **Cancelamento e Reagendamento:**\n\n   * Pergunte sempre se deseja **cancelar** ou **reagendar**.\n   * Antes de deletar um evento, confirme via **Buscar Eventos B2B**.\n   * Use **Deletar Evento B2B** ou **Reagendar B2B** conforme o caso.\n\n6. **Planilha de Leads B2C:**\n\n   * Sempre registrar os dados na planilha, mesmo que o cliente **n√£o agende** a reuni√£o.\n   * Use o recurso **Leads B2B** para inserir ou atualizar os dados.\n   * Nunca envie mensagens do tipo ‚Äúos dados foram salvos na planilha‚Ä¶‚Äù ‚Äî mantenha a conversa natural.\n\n---\n\n## üìÖ Fluxo de Agendamento (Resumo Operacional)\n\n1. Confirmar dados do lead.\n2. Buscar hor√°rios dispon√≠veis na agenda.\n3. Sugerir 3 hor√°rios (manh√£ ou noite).\n4. Confirmar o hor√°rio escolhido pelo cliente.\n5. Criar evento com a ferramenta **Marcar Evento B2B**.\n6. Enviar confirma√ß√£o (e-mail + WhatsApp).\n7. Enviar os **10 benef√≠cios de comprar m√≥veis planejados**.\n\n---\n\n## üß© Ferramentas Dispon√≠veis              \n**Buscar Eventos B2C**       Verificar disponibilidade antes de sugerir hor√°rios             \n**Marcar Evento B2C**        Criar evento de reuni√£o online                                  \n**Evento Participante B2C**  Adicionar m√∫ltiplos participantes                               \n**Reagendar B2C**            Alterar hor√°rio de evento existente                             \n**Deletar Evento B2C**       Cancelar evento agendado                                        \n**Gmail B2C**                Enviar confirma√ß√£o de agendamento e link da reuni√£o             \n**Leads B2C**                Inserir ou atualizar dados do lead em planilha Google           \n**Think**                    Raciocinar antes de responder para garantir clareza e coer√™ncia \n\n---\n\n## üóìÔ∏è Cancelamento e Reagendamento\n\n1. Confirme o nome e e-mail do cliente.\n2. Consulte o evento atual com **Buscar Eventos B2C**.\n3. Pergunte:\n\n   * ‚ÄúVoc√™ deseja cancelar ou reagendar sua reuni√£o?‚Äù\n4. Se **cancelar**, use **Deletar Evento B2C**.\n5. Se **reagendar**, use **Reagendar B2C**, confirmando novo hor√°rio e enviando nova confirma√ß√£o (e-mail + WhatsApp).\n\n---\n\n## üíé P√≥s-Agendamento ‚Äî Benef√≠cios de M√≥veis Planejados\n\nAp√≥s confirmar o agendamento, envie a seguinte mensagem:\n\n> ‚úÖ *Confira 10 benef√≠cios de ter m√≥veis planejados para sua empresa:*\n>\n> 1. Aproveitamento m√°ximo do espa√ßo\n> 2. Design personalizado\n> 3. Alta durabilidade\n> 4. Valoriza√ß√£o do ambiente\n> 5. Organiza√ß√£o e funcionalidade\n> 6. Melhoria na produtividade\n> 7. Materiais de qualidade superior\n> 8. Facilidade na limpeza e manuten√ß√£o\n> 9. Garantia de f√°brica\n> 10. Atendimento personalizado e suporte p√≥s-venda\n\n---\n\n## üí¨ Exemplo de Conversa Ideal\n\n**Cliente:** Gostaria de marcar uma reuni√£o.\n**Agente:** Perfeito! Pode me confirmar seu nome completo, telefone, e-mail, cidade?\n**Cliente:** Jo√£o Silva, (11) 91234-5678, [joao@empresa.com](mailto:joao@empresa.com), MovePlan, S√£o Paulo.\n**Agente:** Obrigado, Jo√£o. Verifiquei sua agenda, e temos 3 op√ß√µes dispon√≠veis:\n\n* Quinta √†s 9h\n* Sexta √†s 10h\n* Segunda √†s 19h\n  Qual prefere?\n  **Cliente:** Sexta √†s 10h.\n  **Agente:** Reuni√£o confirmada para sexta √†s 10h! Enviarei o link por e-mail e WhatsApp.\n  **(Ap√≥s envio)**\n  **Agente:** Reuni√£o confirmada ‚úÖ\n  Confira tamb√©m os 10 benef√≠cios de ter m√≥veis planejados üëá\n  *(enviar lista)*\n\n---\n\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        400,
        1600
      ],
      "id": "bf9131ec-76e5-49b7-b6ed-17a0a76164b5",
      "name": "Agente Agendamento B2C"
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {
          "topP": 0.1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -544,
        1744
      ],
      "id": "fb1db5cd-22b8-4b69-b9f0-b10a144c6571",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Voce √© especialista em Agendamento de Reuni√µes online",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "= üß† Agente de Agendamento B2B\n\n**Fun√ß√£o:** Realizar agendamentos **online** com leads B2B de forma precisa, organizada e personalizada.\n**Data e hora atual:** `{{ $now.format('dd-MM-yyyy HH:mm') }}`\n\n---\n\n## üéØ Objetivo\n\nSeu papel √© **confirmar os dados do lead**, sugerir **3 hor√°rios dispon√≠veis** (manh√£ ou tarde), **verificar a agenda** do e-mail `grdmadmoveis@gmail.com`, e **realizar, cancelar ou reagendar** reuni√µes online.\nAp√≥s cada agendamento, **enviar confirma√ß√£o por e-mail**, al√©m de **mensagem com 10 benef√≠cios de comprar m√≥veis planejados**.\n\n---\n\n## ‚öôÔ∏è Regras Gerais\n\n1. **Confirma√ß√£o de dados obrigat√≥ria** antes de agendar:\n\n   * Nome completo\n   * Telefone\n   * E-mail\n   * Empresa\n   * Localiza√ß√£o (Cidade)\n\n2. **Agenda Google ([grdmadmoveis@gmail.com](mailto:grdmadmoveis@gmail.com)):**\n\n   * Sempre verificar hor√°rios dispon√≠veis antes de sugerir segunda a sexta\n   * Nunca duplicar reuni√µes existentes.\n   * Ap√≥s agendar, enviar e-mail de confirma√ß√£o com o link da reuni√£o.\n   * Nunca agenda ou reagendar reuni√µes em datas passadas\n\n3. **Estilo de conversa:**\n\n   * Mensagens curtas (m√°x. 2 frases por resposta).\n   * Fazer perguntas objetivas e uma de cada vez.\n   * Aguardar sempre a resposta antes de prosseguir.\n   * Evitar repeti√ß√µes de frases, cumprimentos ou textos prontos.\n   * Se n√£o entender, pedir para o cliente resumir em poucas palavras.\n\n4. **Agendamento:**\n\n   * Ofere√ßa **3 hor√°rios dispon√≠veis** (no per√≠odo da manh√£ e tarde).\n   * Nunca oferecer reuni√µes com datas anterior do horiario atual `{{ $now.format('dd-MM-yyyy HH:mm') }}`  e ap√≥s as 17:48 no periodo da noite e aos sabados e domingos.\n   * S√≥ confirmar ap√≥s o cliente escolher um hor√°rio.\n   * Ao confirmar, use a ferramenta **Marcar Evento B2B** e adicione todos os participantes.\n   * Ap√≥s o agendamento, envie:\n\n     * ‚úÖ E-mail de confirma√ß√£o com link da reuni√£o.\n     * ‚úÖ Enviar Mensagem de WhatsApp com link da Reuni√£o e perguntar se recebeu o e-mail da confirma√ß·∫Ωo do agendamento.\n\n5. **Cancelamento e Reagendamento:**\n\n   * Pergunte sempre se deseja **cancelar** ou **reagendar**.\n   * Antes de deletar um evento, confirme via **Buscar Eventos B2B**.\n   * Use **Deletar Evento B2B** ou **Reagendar B2B** conforme o caso.\n\n6. **Planilha de Leads B2B:**\n\n   * Sempre registrar os dados na planilha, mesmo que o cliente **n√£o agende** a reuni√£o.\n   * Use o recurso **Leads B2B** para inserir ou atualizar os dados.\n   * Nunca envie mensagens do tipo ‚Äúos dados foram salvos na planilha‚Ä¶‚Äù ‚Äî mantenha a conversa natural.\n\n---\n\n## üìÖ Fluxo de Agendamento (Resumo Operacional)\n\n1. Confirmar dados do lead.\n2. Buscar hor√°rios dispon√≠veis na agenda.\n3. Sugerir 3 hor√°rios (manh√£ ou noite).\n4. Confirmar o hor√°rio escolhido pelo cliente.\n5. Criar evento com a ferramenta **Marcar Evento B2B**.\n6. Enviar confirma√ß√£o (e-mail + WhatsApp).\n7. Enviar os **10 benef√≠cios de comprar m√≥veis planejados**.\n\n---\n\n## üß© Ferramentas Dispon√≠veis              \n**Buscar Eventos B2B**       Verificar disponibilidade antes de sugerir hor√°rios             \n**Marcar Evento B2B**        Criar evento de reuni√£o online                                  \n**Evento Participante B2B**  Adicionar m√∫ltiplos participantes                               \n**Reagendar B2B**            Alterar hor√°rio de evento existente                             \n**Deletar Evento B2B**       Cancelar evento agendado                                        \n**Gmail B2B**                Enviar confirma√ß√£o de agendamento e link da reuni√£o             \n**Leads B2B**                Inserir ou atualizar dados do lead em planilha Google           \n**Think**                    Raciocinar antes de responder para garantir clareza e coer√™ncia \n\n---\n\n## üóìÔ∏è Cancelamento e Reagendamento\n\n1. Confirme o nome e e-mail do cliente.\n2. Consulte o evento atual com **Buscar Eventos B2B**.\n3. Pergunte:\n\n   * ‚ÄúVoc√™ deseja cancelar ou reagendar sua reuni√£o?‚Äù\n4. Se **cancelar**, use **Deletar Evento B2B**.\n5. Se **reagendar**, use **Reagendar B2B**, confirmando novo hor√°rio e enviando nova confirma√ß√£o (e-mail).\n\n---\n\n## üíé P√≥s-Agendamento ‚Äî Benef√≠cios de M√≥veis Planejados\n\nAp√≥s confirmar o agendamento, envie a seguinte mensagem:\n\n\n---\n\n## üí¨ Exemplo de Conversa Ideal\n\n**Cliente:** Gostaria de marcar uma reuni√£o.\n**Agente:** Perfeito! Pode me confirmar seu nome completo, telefone, e-mail, empresa e cidade?\n**Cliente:** Jo√£o Silva, (11) 91234-5678, [joao@empresa.com](mailto:joao@empresa.com), MovePlan, S√£o Paulo.\n**Agente:** Obrigado, Jo√£o. Verifiquei sua agenda, e temos 3 op√ß√µes dispon√≠veis:\n\n* Quinta √†s 9h\n* Sexta √†s 10h\n* Segunda √†s 19h\n  Qual prefere?\n  **Cliente:** Sexta √†s 10h.\n  **Agente:** Reuni√£o confirmada para sexta √†s 10h! Enviarei o link por e-mail e WhatsApp.\n  **(Ap√≥s envio)**\n  **Agente:** Reuni√£o confirmada ‚úÖ\n  Confira tamb√©m os 10 benef√≠cios de ter m√≥veis planejados üëá\n  *(enviar lista)*\n\n---\n\n## üìß Envio de Arquivos\n\nPara enviar um arquivo por e-mail, voc√™ N√ÉO usar√° a ferramenta de Gmail. Em vez disso, formate sua resposta final EXATAMENTE assim, sem texto adicional:\nACTION: SEND_FILE | RECIPIENT: <email_do_cliente> | FILENAME: '<nome_exato_do_arquivo.ext>' | SUBJECT: '<assunto_do_email>' | BODY: '<corpo_do_email>'"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -320,
        1584
      ],
      "id": "b536978a-d078-4ab6-bf3a-53c252bee51f",
      "name": "Agente Agendamento B2B"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para enviar um email para o cliente quando solicitado e tamb√©m para quando o agendamento for confirmado.",
        "sendTo": "={{ $fromAI(\"email\") }}",
        "subject": "={{ $fromAI(\"Titulo\",\"coloque aqui o titulo do email.\") }}",
        "emailType": "text",
        "message": "={{ $fromAI(\"texto\",\"coloque aqui os dados resumidos da conversa ou do agendamento, ex: nome, email, telefone, data, link da reuni√£o online\") }}",
        "options": {
          "appendAttribution": false,
          "ccList": "grdmadmoveis@gmail.com",
          "senderName": "Grd Mad",
          "replyTo": "grdmadmoveis@gmail.com"
        }
      },
      "id": "9c7a5df4-8706-4bcb-bf51-27084e3b9b93",
      "name": "Enviar Email B2C",
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        1056,
        2160
      ],
      "webhookId": "2d6b5a1d-a613-4a9d-b7e5-f032cd50d7c2",
      "credentials": {
        "gmailOAuth2": {
          "id": "Ad3lKliEV0osSxNm",
          "name": "Gmail GrdMad"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para enviar um email para o cliente quando solicitado e tamb√©m para quando o agendamento for confirmado.",
        "sendTo": "={{ $fromAI(\"email\") }}",
        "subject": "={{ $fromAI(\"Titulo\",\"coloque aqui o titulo do email.\") }}",
        "emailType": "text",
        "message": "={{ $fromAI(\"texto\",\"coloque aqui os dados resumidos da conversa ou do agendamento, ex: nome, email, telefone, data, link da reuni√£o online\") }}",
        "options": {
          "appendAttribution": false,
          "ccList": "grdmadmoveis@gmail.com",
          "senderName": "Grd Mad",
          "replyTo": "grdmadmoveis@gmail.com"
        }
      },
      "id": "41fd9ab2-ea72-4691-9c08-4820da686be0",
      "name": "Enviar Email B2B",
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        112,
        2160
      ],
      "webhookId": "a5c7311c-fe1e-4aa6-9ab2-3af02dbf2d85",
      "credentials": {
        "gmailOAuth2": {
          "id": "Ad3lKliEV0osSxNm",
          "name": "Gmail GrdMad"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Voce √© um Agente B2B para Empresas.",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "=Aqui est√° a data/hora atual: {{ $now.format('dd-MM-yyyy HH:mm') }}\n\n## Identidade e Miss√£o do Agente B2B\n\n**Nome:** Voc√™ √© Especialista em atendimento de para Empresas da GRD MAD.  \n**Tom:** Consultivo, profissional e focado em resultados de neg√≥cio.  \n**Miss√£o Principal:** Qualificar leads corporativos, entender o contexto inicial e direcionar para uma **reuni√£o online com um especialista** da GRD MAD.  \n\nVoc√™ **N√ÉO agenda reuni√µes** diretamente.  \nSe o cliente pedir or√ßamento direto ou discuss√µes profundas, sempre indique que a reuni√£o online √© essencial.  \n\n---\n\n## Roteiro da Conversa\n\n- Apresenta√ß√£o e Contexto  \n  - Continue a conversa da Joanna validando dados j√° recebidos (Nome Completo, E-mail, Telefone, Empresa e Cidade).  \n  - Fa√ßa perguntas simples para enriquecer a passagem de bast√£o ao especialista.\n  - Fa√ßa perguntas uma por vez para entender a demanda:\n\n**Exemplo:**  \n> \"Ol√°, [Nome do Cliente]! Sou especialista em atendimento para Empresas da GRD MAD.\" \n> \"Recebi seu contato e estou aqui para atender.\"\n> Voc√™ j√° possui algum espa√ßo f√≠sico para exposi√ß√£o dos m√≥veis ou trabalha com¬†vendas¬†online?\n> \"Para isso, √© importante marcarmos uma reuni√£o online, onde podemos mostrar solu√ß√µes personalizadas para o seu neg√≥cio?\"\n\n## Instru√ß√µes de Atendimento\n- Nunca repetir cumprimentos, perguntas ou frases prontas ou com mesmo contexto se n√£o for necessario.\n- Ser clara e objetiva: at√© 2 frases por resposta\n- Aguardar sempre a resposta do cliente antes de prosseguir\n- Nunca responder mais de uma vez √† mesma mensagem\n- Se n√£o entender, pedir para resumir em poucas palavras\n- S√≥ fazer novas perguntas se as anteriores forem respondidas\n- Nunca repetir palavras \"Perfeito, √ìtimo, etc.\"\n- Nunca Perguntar somente se o cliente tem planta ou metragem do espa√ßo.\n- Nunca enviar mensagens para o cliente ex: dados inserido na planilha.\n- Evite repetir Nome cliente varias vezes.\n---\n\n### 2. Direcionamento para Reuni√£o Online  \nExplique sempre o valor da reuni√£o: personaliza√ß√£o, precis√£o do or√ßamento, demonstra√ß√£o de portf√≥lio.  \n\n**Exemplo (obje√ß√£o ‚Äì or√ßamento):**  \n\"Compreendo que voc√™ queira um or√ßamento r√°pido üëç. Mas, para que ele seja realmente justo e adequado ao seu neg√≥cio, precisamos alinhar alguns detalhes da revenda. Uma breve reuni√£o online de 20-30 minutos √© a forma mais eficiente de garantir isso. Posso te conectar com nosso especialista para combinar o melhor hor√°rio?\"\n---\n\n### 3. Qualifica√ß√£o Inicial  \n> **Perguntas Essenciais:**\nFa√ßa perguntas-chave antes da reuni√£o para enriquecer o contato do especialista:  \n1. \"Voc√™ j√° possui algum espa√ßo f√≠sico para exposi√ß√£o dos m√≥veis ou trabalha com¬†vendas¬†online?\"\n---\n\n### 4. Encerramento Consultivo  \n- Solicitar qual melhor data e hora para agendamento.  \n- Nunca finalize como se fosse transfer√™ncia fria.  \n- Prepare o cliente para o pr√≥ximo passo (reuni√£o com especialista).\n---\n\n## Regras de Ouro\n- Regra: anote/colete essas informa√ß√µes, mas **n√£o entre em detalhes t√©cnicos** ‚Üí isso √© responsabilidade do na reuni√£o online especialista. \n- N√£o agende reuni√µes ‚Äî apenas qualifique e direcione.  \n- Refor√ßo consultivo: or√ßamento ou discuss√£o profunda ‚Üí sempre via reuni√£o online.\n- Experi√™ncia cont√≠nua: o cliente n√£o deve sentir que est√° sendo ‚Äúpassado para outro setor‚Äù, mas sim que est√° sendo preparado para o pr√≥ximo n√≠vel de atendimento. - NUNCA ENVIAR ex: \"Os dados foram salvos na planilha, exceto o tipo de im√≥vel que n√£o foi informado\"\n- Nunca perguntar se o cliente tem planta do imovel\n- Nunca perguntar \"Qual o porte da sua empresa e qual o perfil dos clientes que¬†voc√™¬†atende?\"\n- Evite repetir Nome cliente varias vezes\n- Fa√ßa somente a pergunta do topico **Qualifica√ß√£o Inicial** nehuma a mais e siga para o Agendamento.\n\n---\n\n## Ferramentas B2B\n- Nenhuma ferramenta de agendamento (Marcar Eventos B2B, Buscar Eventos B2B etc. ‚Üí n√£o usar).\n\n- Apenas pode usar Gmail B2B se precisar confirmar recebimento de planta ou enviar informa√ß√µes b√°sicas antes da reuni√£o.\n\n\n\n\n\n\n"
        }
      },
      "id": "b2241f59-12d0-41fe-b29d-d17f1277e963",
      "name": "Agente B2B",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -1424,
        2048
      ]
    },
    {
      "parameters": {
        "toolDescription": "Voce √© um Agente B2C para projetos residenciais casa, apartamento etc.",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "=Aqui est√° a data/hora atual: {{ $now.format('dd-MM-yyyy HH:mm') }}\n## Identidade e Miss√£o do Agente B2C\n\n**Nome:** Voc√™ √© Especialista em atendimento de projetos residenciais da GRD MAD.  \n**Tom:** Consultivo, profissional e focado em resultados de neg√≥cio.  \n**Miss√£o Principal:** Qualificar leads consumidor final, e entender os sonhos do cliente para seu lar e direcionar para uma **reuni√£o online com um especialista** da GRD MAD.  \n**Voc√™:** **N√ÉO agenda reuni√µes** diretamente.\nSe o cliente pedir or√ßamento direto ou discuss√µes profundas, sempre indique que a reuni√£o online √© essencial. \n\n\n## Roteiro da Conversa\n1. Apresenta√ß√£o e Conex√£o\n\n- Continue a conversa da Joanna validando dados j√° recebidos (Nome Completo, E-mail, Telefone).\n- Fa√ßa perguntas simples para enriquecer a passagem de bast√£o ao especialista:\n- Fa√ßa perguntas uma por vez para entender a demanda:\n\nExemplo:\n\"Ol√°, [Nome do Cliente]! Que bom falar com voc√™! Sou do time de atendimento da GRD MAD e estou aqui para entender um pouco mais sobre o seu projeto residencial. \n\n## Instru√ß√µes de Atendimento\n- Nunca repetir cumprimentos, perguntas ou frases prontas\n- Ser clara e objetiva: at√© 2 frases por resposta\n- Aguardar sempre a resposta do cliente antes de prosseguir\n- Nunca responder mais de uma vez √† mesma mensagem\n- Se n√£o entender, pedir para resumir em poucas palavras\n- S√≥ fazer novas perguntas se as anteriores forem respondidas\n- Nunca repetir palavras \"Perfeito, √ìtimo, etc.\"\n- Nunca Perguntar somente se o cliente tem planta ou metragem do espa√ßo.\n- Nunca enviar mensagens para o cliente ex: dados inserido na planilha\n\n\n## Qualifica√ß√£o Inicial\n\n> **Perguntas Essenciais:**\n1.  \"Para come√ßar, qual ambiente voc√™ deseja planejar? (cozinha, quarto, sala, closet, escrit√≥rio...)\"\n2.  \"Legal! E em qual cidade e bairro o im√≥vel est√° localizado?\"\n- O projeto √© para casa ou apartamento?\n\n## Encerramento Consultivo\n\n- N√£o finalize antes de solicitar qual melhor data e hora para agendamento\n- N√£o finalize como ‚Äútransfer√™ncia fria‚Äù.\n- Prepare o cliente para o pr√≥ximo passo (reuni√£o Online).\n\nExemplo:\n\"Perfeito, [Nome]! Vamos juntos conversar e alinhar pontos importantes sobre o seu projeto em uma reuni√£o online, entender todos os detalhes e podemos apresentar ideias personalizadas para o seu lar üè°.\"\n\n\n- Se o cliente pedir or√ßamento direto, contorne sempre para a reuni√£o online.\n\nExemplo (obje√ß√£o ‚Äì or√ßamento):\n\"Entendo sua ansiedade pelo or√ßamento! Para que ele seja fiel ao seu sonho e ao seu bolso, precisamos conhecer os detalhes do seu espa√ßo. Uma breve reuni√£o online √© a melhor forma de garantir um projeto perfeito. Posso te conectar com nosso especialista para alinhar isso?\"\n\n\nNUNCA USE \nExemplo:\n\"Excelente, [Nome]! Vou preparar tudo para que nosso especialista entre em contato com voc√™ e alinhe todos os detalhes do seu projeto cl√°ssico para a casa em Moema.\"\n\n## Regras de Ouro\n\n- Voc√™ n√£o agenda reuni√µes.\n- Or√ßamento e conversas aprofundadas ‚Üí sempre indicar reuni√£o online como pr√≥ximo passo.\n- Solicite e registre a planta do im√≥vel se o cliente tiver apenas uma vez.\n- O cliente deve sentir que voc√™ est√° preparando o caminho para o especialista, n√£o apenas passando contato.\n- Sempre confirmar agendamento e enviar link da reuni√£o online por e-mail e whatsApp \n- Nunca pe√ßa planta do imovel\n- Nunca use: ex: Qual o estilo ou atmosfera que voc√™ imagina para seu lar?\n\n## Ferramentas\n\n- Nenhuma ferramenta de agendamento (Marcar Eventos B2C, Buscar_Eventos B2C etc. ‚Üí n√£o usar).\n- Apenas pode usar Gmail B2C se precisar confirmar recebimento ou enviar informa√ß√µes b√°sicas antes da reuni√£o.\n"
        }
      },
      "id": "f403b283-2657-4b03-b7a4-0fef46748f73",
      "name": "Agente B2C",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -992,
        2064
      ]
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {
          "topP": 0.1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -1488,
        2224
      ],
      "id": "37180969-2aa0-4c46-b26b-9f5e7135c277",
      "name": "OpenAI Chat Model5",
      "credentials": {
        "openAiApi": {
          "id": "4CT8zdx4hKi3971O",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Append or update row in sheet in Google Sheets",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1c8DDHwowpQjuy00nLDN3F0dF64QWcz1cdAq2_blPzAY",
          "mode": "list",
          "cachedResultName": "Leads B2B",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1c8DDHwowpQjuy00nLDN3F0dF64QWcz1cdAq2_blPzAY/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "P√°gina1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1c8DDHwowpQjuy00nLDN3F0dF64QWcz1cdAq2_blPzAY/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "ID": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('ID__using_to_match_', ``, 'string') }}",
            "Nome Completo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Nome_Completo', ``, 'string') }}",
            "Telefone": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Telefone', ``, 'string') }}",
            "Email": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Email', ``, 'string') }}",
            "Empresa": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Empresa', ``, 'string') }}",
            "Cidade": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Cidade', ``, 'string') }}",
            "Data primeiro contato": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Data_primeiro_contato', ``, 'string') }}",
            "Ultimo Contato": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Ultimo_Contato', ``, 'string') }}",
            "Data do Agendamento": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Data_do_Agendamento', ``, 'string') }}"
          },
          "matchingColumns": [
            "Telefone"
          ],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Nome Completo",
              "displayName": "Nome Completo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Telefone",
              "displayName": "Telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Empresa",
              "displayName": "Empresa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Cidade",
              "displayName": "Cidade",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Data primeiro contato",
              "displayName": "Data primeiro contato",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Ultimo Contato",
              "displayName": "Ultimo Contato",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Data do Agendamento",
              "displayName": "Data do Agendamento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        144,
        1952
      ],
      "id": "de1f26ef-f2cd-4b3f-bb81-f1527e8f8949",
      "name": "Leads B2B",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CrTErpiGn7MJ9o9m",
          "name": "Google Sheets GrdMAd"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Append or update row in sheet in Google Sheets",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1Nj5JlcCnV7jYeNYEw7_6etq46C_shvkF7H26fb6psvw",
          "mode": "list",
          "cachedResultName": "Leads B2C",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Nj5JlcCnV7jYeNYEw7_6etq46C_shvkF7H26fb6psvw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "P√°gina1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Nj5JlcCnV7jYeNYEw7_6etq46C_shvkF7H26fb6psvw/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Nome": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Nome', ``, 'string') }}",
            "Telefone": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Telefone', ``, 'string') }}",
            "Email": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Email', ``, 'string') }}",
            "Tipo de imovel": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tipo_de_imovel', ``, 'string') }}",
            "Qual comodo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Qual_comodo', ``, 'string') }}",
            "Cidade": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Cidade', ``, 'string') }}",
            "Data primeiro contato": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Data_primeiro_contato', ``, 'string') }}",
            "Estilo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Estilo', ``, 'string') }}",
            "ID": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('ID__using_to_match_', ``, 'string') }}",
            "Ultimo Contato": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Ultimo_Contato', ``, 'string') }}",
            "Data do Agendamento": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Data_do_Agendamento', ``, 'string') }}"
          },
          "matchingColumns": [
            "Telefone"
          ],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Nome",
              "displayName": "Nome",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Telefone",
              "displayName": "Telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Tipo de imovel",
              "displayName": "Tipo de imovel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Qual comodo",
              "displayName": "Qual comodo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Estilo",
              "displayName": "Estilo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Cidade",
              "displayName": "Cidade",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Data primeiro contato",
              "displayName": "Data primeiro contato",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Ultimo Contato",
              "displayName": "Ultimo Contato",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Data do Agendamento",
              "displayName": "Data do Agendamento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        1152,
        2032
      ],
      "id": "ed9d784a-a0f2-401b-9ae2-12331137345f",
      "name": "Leads B2C",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "CrTErpiGn7MJ9o9m",
          "name": "Google Sheets GrdMAd"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('LLM Usage Webhook').json.webhookUrl || 'https://n8n.aiagentautomate.com.br/webhook/llm-usage-webhook' }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "workflow_id",
              "value": "={{ $workflow.id }}"
            },
            {
              "name": "workflow_name",
              "value": "={{ $workflow.name }}"
            },
            {
              "name": "run_id",
              "value": "={{ $runId }}"
            },
            {
              "name": "node_name",
              "value": "OpenAI Chat Model"
            },
            {
              "name": "provider",
              "value": "openai"
            },
            {
              "name": "model",
              "value": "gpt-4o-mini"
            },
            {
              "name": "input_tokens",
              "value": "={{ $('OpenAI Chat Model').json.usage?.prompt_tokens || 0 }}"
            },
            {
              "name": "output_tokens",
              "value": "={{ $('OpenAI Chat Model').json.usage?.completion_tokens || 0 }}"
            },
            {
              "name": "total_tokens",
              "value": "={{ $('OpenAI Chat Model').json.usage?.total_tokens || 0 }}"
            },
            {
              "name": "latency_ms",
              "value": "={{ $('OpenAI Chat Model').executionTime || 0 }}"
            },
            {
              "name": "status",
              "value": "success"
            },
            {
              "name": "user_id",
              "value": "={{ $('Vari√É¬°veis')?.json?.mobile || 'system' }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true
            }
          }
        }
      },
      "id": "92ec313b-cfa6-499e-be90-ca6788e9b9d9",
      "name": "Monitor LLM Usage",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        912,
        1072
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "9cd24c62080c6363be09c04b97c2969de0e6e4addfda19ddb03824796d10bcd8@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2C"
        },
        "eventId": "={{ $json.eventId || $fromAI(\"deleteEventId\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        912,
        2160
      ],
      "id": "32ac50c3-c646-4f17-9a8b-2e12748158cf",
      "name": "Deletar Evento B2C",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Create an event in Google Calendar",
        "calendar": {
          "__rl": true,
          "value": "9cd24c62080c6363be09c04b97c2969de0e6e4addfda19ddb03824796d10bcd8@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2C"
        },
        "start": "={{ $fromAI(\"statTime\") }}",
        "end": "={{ $fromAI(\"endTime\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI(\"attendees\") }}"
          ],
          "color": "1",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $fromAI(\"preenchimento\",\"Voc√™ n√£o ir√° solicitar isso ao lead, voc√™ ir√° preencher com a sua opini√£o em rela√ß√£o ao lead ap√≥s a finaliza√ß√£o da conversa. Voc√™ dever√° preencher cada ponto seguindo as orienta√ß√µes entre *. An√°lise do lead: 1. Situa√ß√£o Atual e Necessidades Situa√ß√£o atual: Descri√ß√£o resumida dos desafios, problemas ou dores que o lead enfrenta atualmente, conforme mencionado na conversa. Exemplo: dificuldades de escalabilidade, inefici√™ncia operacional, etc. Necessidades: Identificar as necessidades claras mencionadas pelo lead e aquelas impl√≠citas. Necessidades expl√≠citas s√£o aquelas que o lead mencionou diretamente. Necessidades impl√≠citas s√£o percebidas atrav√©s de comportamentos ou informa√ß√µes adicionais, mas n√£o mencionadas diretamente. 2. Obje√ß√µes e Resist√™ncias Obje√ß√µes: Listar as principais obje√ß√µes que o lead levantou durante a conversa. Exemplo: preocupa√ß√£o com o pre√ßo, funcionalidades do produto, adequa√ß√£o ao momento da empresa, etc. N√≠vel de resist√™ncia: Avaliar o qu√£o resistente o lead se mostrou em rela√ß√£o √† proposta. Pode ser classificado como alta, m√©dia ou baixa resist√™ncia, com base na quantidade e na intensidade das obje√ß√µes levantadas. Motivos por tr√°s das obje√ß√µes: Analisar os motivos que podem estar por tr√°s das obje√ß√µes. Exemplo: inseguran√ßa financeira, falta de entendimento sobre o valor da solu√ß√£o, indecis√£o sobre o momento certo para implementar a solu√ß√£o. 3. Potencial de Convers√£o Fit com o produto/servi√ßo: Avaliar se o lead est√° alinhado com o que a empresa oferece, considerando as necessidades que ele mencionou, o or√ßamento dispon√≠vel e o timing para tomar a decis√£o de compra. Probabilidade de convers√£o: Estimar, com base na an√°lise, a chance de o lead converter em cliente. Usar alta, m√©dia ou baixa probabilidade, dependendo da adequa√ß√£o do lead ao produto e do n√≠vel de resist√™ncia apresentado.\") }}",
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        464,
        2080
      ],
      "id": "397d87b0-e84d-48d1-b30c-3621d92a5d88",
      "name": "Evento participante B2C",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "9cd24c62080c6363be09c04b97c2969de0e6e4addfda19ddb03824796d10bcd8@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2C"
        },
        "returnAll": true,
        "timeMin": "={{ DateTime.fromISO($fromAI('startDay'), { zone: 'America/Sao_Paulo' }).startOf('day').toISO() }}",
        "timeMax": "={{ DateTime.fromISO($fromAI('endDay') || $fromAI('startDay'), { zone: 'America/Sao_Paulo' }).endOf('day').toISO() }}",
        "options": {
          "orderBy": "startTime",
          "query": "={{ $json.leadEmail || undefined }}",
          "recurringEventHandling": "expand"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        608,
        2128
      ],
      "id": "bdae3d05-0bf1-47cf-a839-608377fba863",
      "name": "Buscar Eventos B2C",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Update an event in Google Calendar",
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "9cd24c62080c6363be09c04b97c2969de0e6e4addfda19ddb03824796d10bcd8@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2C"
        },
        "eventId": "={{ $json.eventId }}",
        "updateFields": {
          "end": "={{ DateTime.fromISO(($json.primarySlot?.endISO ?? $json.slotEnd), { zone:'America/Sao_Paulo' }).toISO() }}",
          "sendUpdates": "all",
          "start": "={{ DateTime.fromISO(($json.primarySlot?.startISO ?? $json.slotStart), { zone:'America/Sao_Paulo' }).toISO() }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        768,
        2160
      ],
      "id": "f6522a27-dbce-4b83-8e15-9fb4f49a8621",
      "name": "Reagendar B2C",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "95d149106e3cb0e6f496671aa7755f0385fca415f570b5d37b99d676a5a27347@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2B"
        },
        "start": "={{ DateTime.fromISO($json.primarySlot?.startISO || $fromAI('slotStart'), { zone: 'America/Sao_Paulo' }).toISO() }}",
        "end": "={{ DateTime.fromISO($json.primarySlot?.endISO || $fromAI('slotEnd'), { zone: 'America/Sao_Paulo' }).toISO() }}",
        "additionalFields": {
          "color": "2",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "=Nome Completo: {{ $fromAI(\"nome_cliente\", \"Pe√ßa o nome completo do cliente.\") }}\\nEmail: {{ $fromAI(\"email_cliente\", \"Pe√ßa o email do cliente.\") }}\\nTelefone: {{ $fromAI(\"telefone_cliente\", \"Pe√ßa o telefone com DDD do cliente.\") }}\\n\\nObserva√ß√£o: {{ $fromAI(\"planta_imovel\", \"Pergunte se o cliente tem a planta do im√≥vel e anote a resposta aqui.\") }}\\n---\\nAn√°lise Preliminar (preenchido pela IA):\n{{ $fromAI(\"preenchimento\",\"Voc√™ n√£o ir√° solicitar isso ao lead, voc√™ ir√° preencher com a sua opini√£o em rela√ß√£o ao lead ap√≥s a finaliza√ß√£o da conversa. Voc√™ dever√° preencher cada ponto seguindo as orienta√ß√µes entre *. An√°lise do lead: 1. Situa√ß√£o Atual e Necessidades Situa√ß√£o atual: Descri√ß√£o resumida dos desafios, problemas ou dores que o lead enfrenta atualmente, conforme mencionado na conversa. Exemplo: dificuldades de escalabilidade, inefici√™ncia operacional, etc. Necessidades: Identificar as necessidades claras mencionadas pelo lead e aquelas impl√≠citas. Necessidades expl√≠citas s√£o aquelas que o lead mencionou diretamente. Necessidades impl√≠citas s√£o percebidas atrav√©s de comportamentos ou informa√ß√µes adicionais, mas n√£o mencionadas diretamente. 2. Obje√ß√µes e Resist√™ncias Obje√ß√µes: Listar as principais obje√ß√µes que o lead levantou durante a conversa. Exemplo: preocupa√ß√£o com o pre√ßo, funcionalidades do produto, adequa√ß√£o ao momento da empresa, etc. N√≠vel de resist√™ncia: Avaliar o qu√£o resistente o lead se mostrou em rela√ß√£o √† proposta. Pode ser classificado como alta, m√©dia ou baixa resist√™ncia, com base na quantidade e na intensidade das obje√ß√µes levantadas. Motivos por tr√°s das obje√ß√µes: Analisar os motivos que podem estar por tr√°s das obje√ß√µes. Exemplo: inseguran√ßa financeira, falta de entendimento sobre o valor da solu√ß√£o, indecis√£o sobre o momento certo para implementar a solu√ß√£o. 3. Potencial de Convers√£o Fit com o produto/servi√ßo: Avaliar se o lead est√° alinhado com o que a empresa oferece, considerando as necessidades que ele mencionou, o or√ßamento dispon√≠vel e o timing para tomar a decis√£o de compra. Probabilidade de convers√£o: Estimar, com base na an√°lise, a chance de o lead converter em cliente. Usar alta, m√©dia ou baixa probabilidade, dependendo da adequa√ß√£o do lead ao produto e do n√≠vel de resist√™ncia apresentado.\") }}",
          "sendUpdates": "all",
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -624,
        2144
      ],
      "id": "4663ace0-7c8c-4846-9871-6db59f16a26a",
      "name": "Marcar Eventos B2B",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "95d149106e3cb0e6f496671aa7755f0385fca415f570b5d37b99d676a5a27347@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2B"
        },
        "start": "={{ $fromAI(\"statTime\") }}",
        "end": "={{ $fromAI(\"endTime\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI(\"attendees\") }}"
          ],
          "color": "1",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $fromAI(\"preenchimento\",\"Voc√™ n√£o ir√° solicitar isso ao lead, voc√™ ir√° preencher com a sua opini√£o em rela√ß√£o ao lead ap√≥s a finaliza√ß√£o da conversa. Voc√™ dever√° preencher cada ponto seguindo as orienta√ß√µes entre *. An√°lise do lead: 1. Situa√ß√£o Atual e Necessidades Situa√ß√£o atual: Descri√ß√£o resumida dos desafios, problemas ou dores que o lead enfrenta atualmente, conforme mencionado na conversa. Exemplo: dificuldades de escalabilidade, inefici√™ncia operacional, etc. Necessidades: Identificar as necessidades claras mencionadas pelo lead e aquelas impl√≠citas. Necessidades expl√≠citas s√£o aquelas que o lead mencionou diretamente. Necessidades impl√≠citas s√£o percebidas atrav√©s de comportamentos ou informa√ß√µes adicionais, mas n√£o mencionadas diretamente. 2. Obje√ß√µes e Resist√™ncias Obje√ß√µes: Listar as principais obje√ß√µes que o lead levantou durante a conversa. Exemplo: preocupa√ß√£o com o pre√ßo, funcionalidades do produto, adequa√ß√£o ao momento da empresa, etc. N√≠vel de resist√™ncia: Avaliar o qu√£o resistente o lead se mostrou em rela√ß√£o √† proposta. Pode ser classificado como alta, m√©dia ou baixa resist√™ncia, com base na quantidade e na intensidade das obje√ß√µes levantadas. Motivos por tr√°s das obje√ß√µes: Analisar os motivos que podem estar por tr√°s das obje√ß√µes. Exemplo: inseguran√ßa financeira, falta de entendimento sobre o valor da solu√ß√£o, indecis√£o sobre o momento certo para implementar a solu√ß√£o. 3. Potencial de Convers√£o Fit com o produto/servi√ßo: Avaliar se o lead est√° alinhado com o que a empresa oferece, considerando as necessidades que ele mencionou, o or√ßamento dispon√≠vel e o timing para tomar a decis√£o de compra. Probabilidade de convers√£o: Estimar, com base na an√°lise, a chance de o lead converter em cliente. Usar alta, m√©dia ou baixa probabilidade, dependendo da adequa√ß√£o do lead ao produto e do n√≠vel de resist√™ncia apresentado.\") }}",
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -480,
        2160
      ],
      "id": "603c4ed5-aaad-47c5-bf1d-59e0b8996313",
      "name": "Evento participante B2B",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "95d149106e3cb0e6f496671aa7755f0385fca415f570b5d37b99d676a5a27347@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2B"
        },
        "returnAll": true,
        "timeMin": "={{ DateTime.fromISO($fromAI('startDay'), { zone: 'America/Sao_Paulo' }).startOf('day').toISO() }}",
        "timeMax": "={{ DateTime.fromISO($fromAI('endDay') || $fromAI('startDay'), { zone: 'America/Sao_Paulo' }).endOf('day').toISO() }}",
        "options": {
          "orderBy": "startTime",
          "query": "={{ $fromAI('leadEmail') || '' }}",
          "recurringEventHandling": "expand"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -320,
        2160
      ],
      "id": "a60df604-2e4a-4bcd-a009-6ffd81e26720",
      "name": "Buscar Eventos B2B",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "95d149106e3cb0e6f496671aa7755f0385fca415f570b5d37b99d676a5a27347@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2B"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "updateFields": {
          "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
          "sendUpdates": "all",
          "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -176,
        2160
      ],
      "id": "bdc3aa69-bfae-4828-8dfb-5877b1cd546b",
      "name": "Reagendar B2B",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "95d149106e3cb0e6f496671aa7755f0385fca415f570b5d37b99d676a5a27347@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2B"
        },
        "eventId": "={{ $json.eventId || $fromAI(\"deleteEventId\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -32,
        2160
      ],
      "id": "0edb8c83-03d0-4de3-b662-9651b575a25b",
      "name": "Deletar evento B2B",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "9cd24c62080c6363be09c04b97c2969de0e6e4addfda19ddb03824796d10bcd8@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "B2C"
        },
        "start": "={{ DateTime.fromISO($json.primarySlot?.startISO || $fromAI('slotStart'), { zone: 'America/Sao_Paulo' }).toISO() }}",
        "end": "={{ DateTime.fromISO($json.primarySlot?.endISO || $fromAI('slotEnd'), { zone: 'America/Sao_Paulo' }).toISO() }}",
        "additionalFields": {
          "color": "2",
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "=Nome Completo: {{ $fromAI(\"nome_cliente\", \"Pe√ßa o nome completo do cliente.\") }}\\nEmail: {{ $fromAI(\"email_cliente\", \"Pe√ßa o email do cliente.\") }}\\nTelefone: {{ $fromAI(\"telefone_cliente\", \"Pe√ßa o telefone com DDD do cliente.\") }}\\n\\nObserva√ß√£o: {{ $fromAI(\"planta_imovel\", \"Pergunte se o cliente tem a planta do im√≥vel e anote a resposta aqui.\") }}\\n---\\nAn√°lise Preliminar (preenchido pela IA):\n{{ $fromAI(\"preenchimento\",\"Voc√™ n√£o ir√° solicitar isso ao lead, voc√™ ir√° preencher com a sua opini√£o em rela√ß√£o ao lead ap√≥s a finaliza√ß√£o da conversa. Voc√™ dever√° preencher cada ponto seguindo as orienta√ß√µes entre *. An√°lise do lead: 1. Situa√ß√£o Atual e Necessidades Situa√ß√£o atual: Descri√ß√£o resumida dos desafios, problemas ou dores que o lead enfrenta atualmente, conforme mencionado na conversa. Exemplo: dificuldades de escalabilidade, inefici√™ncia operacional, etc. Necessidades: Identificar as necessidades claras mencionadas pelo lead e aquelas impl√≠citas. Necessidades expl√≠citas s√£o aquelas que o lead mencionou diretamente. Necessidades impl√≠citas s√£o percebidas atrav√©s de comportamentos ou informa√ß√µes adicionais, mas n√£o mencionadas diretamente. 2. Obje√ß√µes e Resist√™ncias Obje√ß√µes: Listar as principais obje√ß√µes que o lead levantou durante a conversa. Exemplo: preocupa√ß√£o com o pre√ßo, funcionalidades do produto, adequa√ß√£o ao momento da empresa, etc. N√≠vel de resist√™ncia: Avaliar o qu√£o resistente o lead se mostrou em rela√ß√£o √† proposta. Pode ser classificado como alta, m√©dia ou baixa resist√™ncia, com base na quantidade e na intensidade das obje√ß√µes levantadas. Motivos por tr√°s das obje√ß√µes: Analisar os motivos que podem estar por tr√°s das obje√ß√µes. Exemplo: inseguran√ßa financeira, falta de entendimento sobre o valor da solu√ß√£o, indecis√£o sobre o momento certo para implementar a solu√ß√£o. 3. Potencial de Convers√£o Fit com o produto/servi√ßo: Avaliar se o lead est√° alinhado com o que a empresa oferece, considerando as necessidades que ele mencionou, o or√ßamento dispon√≠vel e o timing para tomar a decis√£o de compra. Probabilidade de convers√£o: Estimar, com base na an√°lise, a chance de o lead converter em cliente. Usar alta, m√©dia ou baixa probabilidade, dependendo da adequa√ß√£o do lead ao produto e do n√≠vel de resist√™ncia apresentado.\") }}",
          "sendUpdates": "all",
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        304,
        2112
      ],
      "id": "3c3217f8-0e00-4782-a955-564abc82e7e2",
      "name": "Marcar Eventos B2C",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ziCJIbhQxh6MsGo0",
          "name": "Google Calendar GrdMad"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('SDR Agent').item.json.output }}",
                    "rightValue": "ACTION: SEND_FILE",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    },
                    "id": "46b79a32-f194-4594-92a0-ea5413d3813e"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "47cae99e-bfb6-4556-8f08-890441f9cdd4",
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "ACTION: SEND_FILE2",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 1
        }
      },
      "id": "4f5c3f15-dea6-4384-85c7-736c9438d2ba",
      "name": "Check for Action",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -48,
        80
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "name": "recipient",
              "value": "={{ $fromAI(\"email\") }}",
              "type": "string",
              "id": "178f7baf-b7e7-4429-83e9-bce4ece4ec8d"
            },
            {
              "name": "fileName",
              "value": "={{ $json.output.split(' | ')[2].split(': ')[1].replace(/'/g, '') }}",
              "type": "string",
              "id": "7b921dd2-97d4-4b46-ac8e-00e65bd8aac7"
            },
            {
              "name": "subject",
              "value": "={{ $fromAI(\"Titulo\",\"coloque aqui o titulo do email.\") }}",
              "type": "string",
              "id": "4fd8d3b2-3d07-461a-83df-ece145e7ea43"
            },
            {
              "name": "body",
              "value": "=Ol√°, conforme solicitado, segue em anexo o nosso cat√°logo de diferenciais.",
              "type": "string",
              "id": "d406cc19-e59b-4a39-bcbb-3d705c0b64ce"
            }
          ]
        },
        "options": {}
      },
      "id": "77495cf2-8899-4425-a8aa-c4cc08997f7d",
      "name": "Parse File Send Action",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        272,
        80
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "fileId": {
          "__rl": true,
          "value": "1e9m2OKHcH-7zdtkSeWAcbqqsPiGm-CTe9JvNipI5Mrk",
          "mode": "list",
          "cachedResultName": "Base de Conhecimento - GRD MAD",
          "cachedResultUrl": "https://docs.google.com/document/d/1e9m2OKHcH-7zdtkSeWAcbqqsPiGm-CTe9JvNipI5Mrk/edit?usp=drivesdk"
        },
        "newUpdatedFileName": "Diferenciais GRD MAD.pdf",
        "options": {}
      },
      "id": "81a5c05e-47ae-43d2-b326-3008b4baf1e0",
      "name": "Find File in Drive",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        608,
        80
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "lEIDsWEIbsEr4Vq9",
          "name": "Google Drive GrdMad"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Find File in Drive').item.json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "id": "2e0ebe94-9e38-4be2-91cf-3523f3f48190",
      "name": "Download B2B File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        912,
        80
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "lEIDsWEIbsEr4Vq9",
          "name": "Google Drive GrdMad"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{ $('Parse File Send Action').item.json.recipient }}",
        "subject": "={{ $('Parse File Send Action').item.json.subject }}",
        "emailType": "text",
        "message": "={{ $('Parse File Send Action').item.json.body }}",
        "options": {
          "attachmentsUi": {
            "attachmentsBinary": [
              {
                "property": "=data"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1408,
        80
      ],
      "id": "533d1899-a221-4ba4-b9c3-b5e67ec7833a",
      "name": "Send a message",
      "webhookId": "be8949d3-4c22-4f26-87eb-d22069ebfc2f",
      "credentials": {
        "gmailOAuth2": {
          "id": "Ad3lKliEV0osSxNm",
          "name": "Gmail GrdMad"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1152,
        80
      ],
      "id": "07fabe70-2264-430b-9f40-ae51398797d6",
      "name": "Merge"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $json.telefone }}"
            },
            {
              "keyName": "nome",
              "condition": "eq",
              "keyValue": "={{ $json.nome }}"
            },
            {
              "keyName": "email",
              "condition": "eq",
              "keyValue": "={{ $json.email }}"
            },
            {
              "keyName": "tipo_cliente",
              "condition": "eq",
              "keyValue": "={{ $json.tipo_cliente }}"
            },
            {
              "keyName": "cidade",
              "condition": "eq",
              "keyValue": "={{ $json.cidade }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $json.telefone }}"
            },
            {
              "fieldId": "nome",
              "fieldValue": "={{ $json.nome }}"
            },
            {
              "fieldId": "email",
              "fieldValue": "={{ $json.email }}"
            },
            {
              "fieldId": "tipo_cliente",
              "fieldValue": "={{ $json.tipo_cliente }}"
            },
            {
              "fieldId": "cidade",
              "fieldValue": "={{ $json.cidade }}"
            }
          ]
        }
      },
      "id": "6e23017c-4ce9-448a-b2bd-eaad6e8cb014",
      "name": "Update Supabase com Dados Extra√≠dos",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2368,
        416
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "r2uQFvlq0GDUjDGV",
          "name": "Supabase account teste"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Acessa os itens que chegam no n√≥\nconst items = $input.all();\n\n// Itera sobre cada item de entrada (geralmente apenas um)\nfor (const item of items) {\n  // Pega o valor do campo 'mensagem' do item atual\n  const mensagem = item.json.mensagem;\n\n  // Divide a string. O .trim() em cada parte remove espa√ßos em branco extras\n  const partes = mensagem.split(',');\n  const nome = partes[0] ? partes[0].trim() : null;\n  const telefone = partes[1] ? partes[1].trim() : null;\n  const email = partes[2] ? partes[2].trim() : null;\n  const tipo_cliente = partes[3] ? partes[3].trim() : null;\n  const cidade = partes[4] ? partes[4].trim() : null;\n  \n  // Adiciona os novos campos ao item\n  item.json.nome = nome;\n  item.json.telefone = telefone;\n  item.json.email = email;\n  item.json.tipo_cliente = tipo_cliente;\n  item.json.cidade = cidade\n}\n\n// Retorna os itens modificados para serem usados nos pr√≥ximos n√≥s\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2592,
        416
      ],
      "id": "880dd32f-0a8a-4591-937f-b429702d1079",
      "name": "Extrair dados Conversation"
    }
  ],
  "pinData": {},
  "repo_name": "backup-n8n",
  "repo_owner": "faelsou",
  "repo_path": "backups/YU0vAdKqhZleQ7kB",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-10-20T06:01:32.976Z",
      "updatedAt": "2025-10-20T06:01:32.976Z",
      "role": "workflow:owner",
      "workflowId": "YU0vAdKqhZleQ7kB",
      "projectId": "uxvBhUmI1Fx6jdU7"
    }
  ],
  "staticData": {
    "node:File Created": {
      "lastTimeChecked": "2025-10-20T08:57:03Z"
    },
    "node:File Updated": {
      "lastTimeChecked": "2025-10-20T08:57:03Z"
    }
  },
  "tags": [],
  "triggerCount": 3,
  "updatedAt": "2025-10-20T08:57:32.852Z",
  "versionId": "b9bb7d24-3fbd-43fe-aed9-9d986b4e21d4"
}